package leads

// THIS PACKAGE IS AUTOGENERATED DO NOT EDIT

import (
	"encoding/json"

	"github.com/b3ntly/salesforce/types"
)

// AcceptedEventRelation ...
//
// Represents event participants (invitees or attendees) with the status Accepted for a given event.
type AcceptedEventRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EventID ...
	//
	// Indicates the ID of the event.
	//
	// Properties:Filter, Group, Nillable, Sort
	EventID types.NullableString `json:"EventId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RelationID ...
	//
	// Indicates the ID of the invitee.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationID types.NullableString `json:"RelationId"`
	// RespondedDate ...
	//
	// Indicates the most recent date and time when the invitee accepted an invitation to the event.
	//
	//
	// Properties:Filter, Nillable, Sort
	RespondedDate types.Datetime `json:"RespondedDate"`
	// Response ...
	//
	// Indicates the content of the response field. Label is Comment.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Response types.NullableString `json:"Response"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Type ...
	//
	// Indicates whether the invitee is a user, lead or contact, or resource.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	Type types.NullableString `json:"Type"`
}

// Account ...
//
// Represents an individual account, which is an organization or person involved with your business (such as
// customers, competitors, and partners).
type Account struct {
	// AccountNumber ...
	//
	// Account number assigned to this account (not the unique, system-generated ID assigned during creation).
	// Maximum size is 40 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	AccountNumber types.NullableString `json:"AccountNumber"`
	// AccountSource ...
	//
	// The source of the account record. For example, Advertisement, Data.com, or Trade Show. The source is
	// selected from a picklist of available values, which are set by an administrator. Each picklist value can have up to 40
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	AccountSource types.NullableString `json:"AccountSource"`
	// Active__c ...
	Active__c types.NullableString `json:"Active__c"`
	// AnnualRevenue ...
	//
	// Estimated annual revenue of the account.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	AnnualRevenue types.NullableFloat64 `json:"AnnualRevenue"`
	// BillingAddress ...
	//
	// The compound form of the billing address. Read-only. See Address Compound Fields for details on compound
	// address fields.
	//
	// Properties:Filter, Nillable
	BillingAddress types.Address `json:"BillingAddress"`
	// BillingCity ...
	//
	// Details for the billing address of this account. Maximum size is 40 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingCity types.NullableString `json:"BillingCity"`
	// BillingCountry ...
	//
	// Details for the billing address of this account. Maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingCountry types.NullableString `json:"BillingCountry"`
	// BillingGeocodeAccuracy ...
	//
	// Accuracy level of the geocode for the billing address. See Compound Field Considerations and Limitations
	// for details on geolocation compound fields.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	BillingGeocodeAccuracy types.NullableString `json:"BillingGeocodeAccuracy"`
	// BillingLatitude ...
	//
	// Used with BillingLongitude to specify the precise geolocation of a billing address. Acceptable values
	// are numbers between –90 and 90 with up to 15 decimal places. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	BillingLatitude types.NullableFloat64 `json:"BillingLatitude"`
	// BillingLongitude ...
	//
	// Used with BillingLatitude to specify the precise geolocation of a billing address. Acceptable values are
	// numbers between –180 and 180 with up to 15 decimal places. See Compound Field Considerations and Limitations for
	// details on geolocation compound fields.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	BillingLongitude types.NullableFloat64 `json:"BillingLongitude"`
	// BillingPostalCode ...
	//
	// Details for the billing address of this account. Maximum size is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingPostalCode types.NullableString `json:"BillingPostalCode"`
	// BillingState ...
	//
	// Details for the billing address of this account. Maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingState types.NullableString `json:"BillingState"`
	// BillingStreet ...
	//
	// Street address for the billing address of this account.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	BillingStreet types.NullableString `json:"BillingStreet"`
	// CleanStatus ...
	//
	// Indicates the record’s clean status as compared with Data.com. Values are: Matched, Different,
	// Acknowledged, NotFound, Inactive, Pending, SelectMatch, or Skipped.Several values for CleanStatus display with
	// different labels on the account record detail page. Matched displays as In Sync Acknowledged displays as Reviewed
	// Pending displays as Not Compared
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist,
	// Sort, Update
	CleanStatus types.NullableString `json:"CleanStatus"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// CustomerPriority__c ...
	CustomerPriority__c types.NullableString `json:"CustomerPriority__c"`
	// DandbCompanyID ...
	DandbCompanyID types.NullableString `json:"DandbCompanyId"`
	// Description ...
	//
	// Text description of the account. Limited to 32,000 KB.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// DunsNumber ...
	//
	// The Data Universal Numbering System (D-U-N-S) number is a unique, nine-digit number assigned to every
	// business location in the Dun & Bradstreet database that has a unique, separate, and distinct operation. D-U-N-S
	// numbers are used by industries and organizations around the world as a global standard for business
	// identification and tracking. Maximum size is 9 characters. This field is available on business accounts, not person
	// accounts. Note This field is only available to organizations that use Data.com Prospector or Data.com
	// Clean.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	DunsNumber types.NullableString `json:"DunsNumber"`
	// Fax ...
	//
	// Fax number for the account.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Fax types.NullableString `json:"Fax"`
	// ID ...
	ID string `json:"Id"`
	// Industry ...
	//
	// An industry associated with this account. Maximum size is 40 characters.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	Industry types.NullableString `json:"Industry"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// Jigsaw ...
	//
	// References the ID of a company in Data.com. If an account has a value in this field, it means that the account
	// was imported from Data.com. If the field value is null, the account was not imported from Data.com. Maximum
	// size is 20 characters. Available in API version 22.0 and later. Label is Data.com Key. This field is available on
	// business accounts, not person accounts. Important The Jigsaw field is exposed in the API to support
	// troubleshooting for import errors and reimporting of corrected data. Do not modify the value in the Jigsaw field.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Jigsaw types.NullableString `json:"Jigsaw"`
	// JigsawCompanyID ...
	JigsawCompanyID types.NullableString `json:"JigsawCompanyId"`
	// LastActivityDate ...
	//
	// Value is one of the following, whichever is the most recent: Due date of the most recent event logged against
	// the record. Due date of the most recently closed task associated with the record.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	LastActivityDate types.Date `json:"LastActivityDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp when the current user last accessed this record, a record related to this record, or a list
	// view.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp when the current user last viewed this record or list view. If this value is null, the user
	// might have only accessed this record or list view (LastReferencedDate) but not viewed it.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// MasterRecordID ...
	//
	// If this object was deleted as the result of a merge, this field contains the ID of the record that was kept. If
	// this object was deleted for any other reason, or has not been deleted, the value is null.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	MasterRecordID types.NullableString `json:"MasterRecordId"`
	// NaicsCode ...
	//
	// The six-digit North American Industry Classification System (NAICS) code is the standard used by
	// business and government to classify business establishments into industries, according to their economic
	// activity for the purpose of collecting, analyzing, and publishing statistical data related to the U.S. business
	// economy. Maximum size is 8 characters. This field is available on business accounts, not person accounts. Note This
	// field is only available to organizations that use Data.com Prospector or Data.com Clean.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	NaicsCode types.NullableString `json:"NaicsCode"`
	// NaicsDesc ...
	//
	// A brief description of an org’s line of business, based on its NAICS code. Maximum size is 120 characters.
	// This field is available on business accounts, not person accounts. Note This field is only available to
	// organizations that use Data.com Prospector or Data.com Clean.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	NaicsDesc types.NullableString `json:"NaicsDesc"`
	// Name ...
	//
	// Required. Label is Account Name. Name of the account. Maximum size is 255 characters. If the account has a
	// record type of Person Account: This value is the concatenation of the FirstName, MiddleName, LastName, and
	// Suffix of the associated person contact. You can't modify this value.
	//
	// Properties:Create, Filter,
	// Group, Sort, Update
	Name string `json:"Name"`
	// NumberOfEmployees ...
	//
	// Label is Employees. Number of employees working at the company represented by this account. Maximum size
	// is eight digits.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	NumberOfEmployees types.NullableInt `json:"NumberOfEmployees"`
	// NumberofLocations__c ...
	NumberofLocations__c types.NullableFloat64 `json:"NumberofLocations__c"`
	// OperatingHoursID ...
	//
	// The operating hours associated with the account. Available only if Field Service is enabled.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	OperatingHoursID types.NullableString `json:"OperatingHoursId"`
	// OwnerID ...
	//
	// The ID of the user who currently owns this account. Default value is the user logged in to the API to perform
	// the create.If you have set up account teams in your org, updating this field has different consequences
	// depending on your version of the API: For API version 12.0 and later, sharing records are kept, as they are for all
	// objects. For API version before 12.0, sharing records are deleted. For API version 16.0 and later, users must have
	// the “Transfer Record” permission in order to update (transfer) account ownership using this
	// field.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Ownership ...
	//
	// Ownership type for the account, for example Private, Public, or Subsidiary.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Ownership types.NullableString `json:"Ownership"`
	// ParentID ...
	//
	// ID of the parent object, if any.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ParentID types.NullableString `json:"ParentId"`
	// Phone ...
	//
	// Phone number for this account. Maximum size is 40 characters.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Phone types.NullableString `json:"Phone"`
	// PhotoURL ...
	//
	// Path to be combined with the URL of a Salesforce instance (for example,
	// https://yourInstance.salesforce.com/) to generate a URL to request the social network profile image associated with the account. Generated URL
	// returns an HTTP redirect (code 302) to the social network profile image for the account. Blank if Social Accounts
	// and Contacts isn't enabled for the org or if Social Accounts and Contacts is disabled for the requesting
	// user.
	//
	// Properties:Filter, Group, Nillable, Sort
	PhotoURL types.NullableString `json:"PhotoUrl"`
	// Rating ...
	//
	// The account’s prospect rating, for example Hot, Warm, or Cold.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Rating types.NullableString `json:"Rating"`
	// SLAExpirationDate__c ...
	SLAExpirationDate__c types.Date `json:"SLAExpirationDate__c"`
	// SLASerialNumber__c ...
	SLASerialNumber__c types.NullableString `json:"SLASerialNumber__c"`
	// SLA__c ...
	SLA__c types.NullableString `json:"SLA__c"`
	// ShippingAddress ...
	//
	// The compound form of the shipping address. Read-only. See Address Compound Fields for details on compound
	// address fields.
	//
	// Properties:Filter, Nillable
	ShippingAddress types.Address `json:"ShippingAddress"`
	// ShippingCity ...
	//
	// Details of the shipping address for this account. City maximum size is 40 characters
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingCity types.NullableString `json:"ShippingCity"`
	// ShippingCountry ...
	//
	// Details of the shipping address for this account. Country maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingCountry types.NullableString `json:"ShippingCountry"`
	// ShippingGeocodeAccuracy ...
	//
	// Accuracy level of the geocode for the shipping address. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	ShippingGeocodeAccuracy types.NullableString `json:"ShippingGeocodeAccuracy"`
	// ShippingLatitude ...
	//
	// Used with ShippingLongitude to specify the precise geolocation of a shipping address. Acceptable values
	// are numbers between –90 and 90 with up to 15 decimal places. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	ShippingLatitude types.NullableFloat64 `json:"ShippingLatitude"`
	// ShippingLongitude ...
	//
	// Used with ShippingLatitude to specify the precise geolocation of an address. Acceptable values are
	// numbers between –180 and 180 with up to 15 decimal places. See Compound Field Considerations and Limitations for
	// details on geolocation compound fields.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ShippingLongitude types.NullableFloat64 `json:"ShippingLongitude"`
	// ShippingPostalCode ...
	//
	// Details of the shipping address for this account. Postal code maximum size is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingPostalCode types.NullableString `json:"ShippingPostalCode"`
	// ShippingState ...
	//
	// Details of the shipping address for this account. State maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingState types.NullableString `json:"ShippingState"`
	// ShippingStreet ...
	//
	// The street address of the shipping address for this account. Maximum of 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingStreet types.NullableString `json:"ShippingStreet"`
	// Sic ...
	//
	// Standard Industrial Classification code of the company’s main business categorization, for example,
	// 57340 for Electronics. Maximum of 20 characters. This field is available on business accounts, not person
	// accounts.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Sic types.NullableString `json:"Sic"`
	// SicDesc ...
	//
	// A brief description of an org’s line of business, based on its SIC code. Maximum length is 80 characters.
	// This field is available on business accounts, not person accounts.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	SicDesc types.NullableString `json:"SicDesc"`
	// Site ...
	//
	// Name of the account’s location, for example Headquarters or London. Label is Account Site. Maximum of 80
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Site types.NullableString `json:"Site"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TickerSymbol ...
	//
	// The stock market symbol for this account. Maximum of 20 characters. This field is available on business
	// accounts, not person accounts.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	TickerSymbol types.NullableString `json:"TickerSymbol"`
	// Tradestyle ...
	//
	// A name, different from its legal name, that an org may use for conducting business. Similar to “Doing
	// business as” or “DBA”. Maximum length is 255 characters. This field is available on business accounts, not
	// person accounts. Note This field is only available to organizations that use Data.com Prospector or Data.com
	// Clean.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Tradestyle types.NullableString `json:"Tradestyle"`
	// Type ...
	//
	// Type of account, for example, Customer, Competitor, or Partner.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Type types.NullableString `json:"Type"`
	// UpsellOpportunity__c ...
	UpsellOpportunity__c types.NullableString `json:"UpsellOpportunity__c"`
	// Website ...
	//
	// The website of this account. Maximum of 255 characters.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Website types.NullableString `json:"Website"`
	// YearStarted ...
	//
	// The date when an org was legally established. Maximum length is 4 characters. This field is available on
	// business accounts, not person accounts. Note This field is only available to organizations that use Data.com
	// Prospector or Data.com Clean.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	YearStarted types.NullableString `json:"YearStarted"`
}

// ActivityHistory ...
//
// This read-only object is displayed in a related list of closed activitiespast events and closed
// tasksrelated to an object. It includes activities for all contacts related to the object. ActivityHistory fields for
// phone calls are only available if your organization uses Salesforce CRM Call Center.
type ActivityHistory struct {
	// AccountID ...
	//
	// Indicates the ID of the related account, which is determined as follows: The account associated with the
	// WhatId, if it exists; or The account associated with the WhoId, if it exists; otherwise null For information on IDs,
	// see ID Field Type.
	//
	// Properties:Filter, Group, Nillable, Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActivityDate ...
	//
	// Indicates one of the following: The due date of a task The due date of an event if IsAllDayEvent is set to
	// true
	// This field has a time stamp that is always set to midnight in the Universal Time Coordinated (UTC) time zone.
	// The time stamp doesn’t represent the time of the activity; don’t attempt to alter it to accommodate time
	// zone differences. Label is Date.

	//
	// Properties:Filter, Group, Nillable, Sort
	ActivityDate types.Date `json:"ActivityDate"`
	// ActivityDateTime ...
	//
	// Contains the event’s due date if the IsAllDayEvent flag is set to false. The time portion of this field is
	// always transferred in the Coordinated Universal Time (UTC) time zone. Translate the time portion to or from a
	// local time zone for the user or the application, as appropriate. Label is Due Date Time.The value for this field
	// and StartDateTime must match, or one of them must be null.
	//
	// Properties:Aggregate, Filter, Nillable,
	// Sort
	ActivityDateTime types.Datetime `json:"ActivityDateTime"`
	// ActivitySubtype ...
	//
	// Provides standard subtypes to facilitate creating and searching for specific activity subtypes. This
	// field isn’t updateable. ActivitySubtype values: Task Email Call Event List Email
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ActivitySubtype types.NullableString `json:"ActivitySubtype"`
	// ActivityType ...
	//
	// Represents one of the following values: Call, Email, Meeting, or Other. Label is Type. These are default
	// values, and can be changed.
	//
	// Properties:Filter, Group, Nillable, Sort
	ActivityType types.NullableString `json:"ActivityType"`
	// AlternateDetailID ...
	//
	// The ID of a record the activity is related to which contains more details about the activity. For example, an
	// activity can be related to an EmailMessage record.
	//
	// Properties:Filter, Group, Nillable, Sort
	AlternateDetailID types.NullableString `json:"AlternateDetailId"`
	// CallDisposition ...
	//
	// Represents the result of a given call, for example, “we'll call back,” or “call unsuccessful.”
	// Limit is 255 characters.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallDisposition types.NullableString `json:"CallDisposition"`
	// CallDurationInSeconds ...
	//
	// Duration of the call in seconds.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallDurationInSeconds types.NullableInt `json:"CallDurationInSeconds"`
	// CallObject ...
	//
	// Name of a call center. Limit is 255 characters.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallObject types.NullableString `json:"CallObject"`
	// CallType ...
	//
	// The type of call being answered: Inbound, Internal, or Outbound.
	//
	// Properties:Filter, Group,
	// Nillable, Restricted picklist, Sort
	CallType types.NullableString `json:"CallType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Contains a description of the event or task. Limit is 32 KB.
	//
	// Properties:Nillable
	Description types.NullableString `json:"Description"`
	// DurationInMinutes ...
	//
	// Indicates the duration of the event or task.
	//
	// Properties:Filter, Group, Nillable, Sort
	DurationInMinutes types.NullableInt `json:"DurationInMinutes"`
	// EndDateTime ...
	//
	// Indicates the end date and time of the event or task. Available in versions 27.0 and later. This field is
	// optional, depending on the following: If IsAllDayEvent is true, you can supply a value for either DurationInMinutes
	// or EndDateTime. Supplying values in both fields is allowed if the values add up to the same amount of time. If
	// both fields are null, the duration defaults to one day. If IsAllDayEvent is false, a value must be supplied for
	// either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if the values add up to the
	// same amount of time.
	//
	// Properties:Filter, Nillable, Sort
	EndDateTime types.Datetime `json:"EndDateTime"`
	// ID ...
	ID string `json:"Id"`
	// IsAllDayEvent ...
	//
	// If the value of this field is set to true, then the activity is an event spanning a full day, and the
	// ActivityDate defines the date of the event. If the value of this field is set to false, then the activity may be an event
	// spanning less than a full day, or it may be a task. Label is All-Day Event.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsAllDayEvent bool `json:"IsAllDayEvent"`
	// IsClosed ...
	//
	// Indicates whether a task is closed; value is always true. This field is set indirectly by setting the Status
	// field on the taskeach picklist value has a corresponding IsClosed value. Label is Closed.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	//
	// Indicates whether the activity has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsDeleted bool `json:"IsDeleted"`
	// IsHighPriority ...
	//
	// Indicates a high-priority task. This field is derived from the Priority field.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsHighPriority bool `json:"IsHighPriority"`
	// IsReminderSet ...
	//
	// Indicates whether a reminder is set for an activity (true) or not (false).
	//
	// Properties:Defaulted
	// on create, Filter, Group, Sort
	IsReminderSet bool `json:"IsReminderSet"`
	// IsTask ...
	//
	// If the value of this field is set to true, then the activity is a task. If the value is set to false, then the
	// activity is an event. Label is Task.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsTask bool `json:"IsTask"`
	// IsVisibleInSelfService ...
	//
	// If the value of this field is set to true, then the activity can be viewed in the self-service portal. Label is
	// Visible in Self-Service.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsVisibleInSelfService bool `json:"IsVisibleInSelfService"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Location ...
	//
	// If the activity is an event, then this field contains the location of the event. If the activity is a task,
	// then the value is null.
	//
	// Properties:Filter, Group, Nillable, Sort
	Location types.NullableString `json:"Location"`
	// OwnerID ...
	//
	// Indicates the ID of the user or group who owns the activity.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	OwnerID types.NullableString `json:"OwnerId"`
	// Priority ...
	//
	// Indicates the priority of a task, such as high, normal, or low.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Nillable, Sort
	Priority types.NullableString `json:"Priority"`
	// ReminderDateTime ...
	//
	// Represents the time when the reminder is scheduled to fire, if IsReminderSet is set to true. If
	// IsReminderSet is set to false, then the user may have deselected the reminder checkbox in the Salesforce user interface,
	// or the reminder has already fired at the time indicated by the value.
	//
	// Properties:Filter, Nillable,
	// Sort
	ReminderDateTime types.Datetime `json:"ReminderDateTime"`
	// StartDateTime ...
	//
	// Indicates the start date and time of the event. Available in versions 29.0 and later. If the event’s
	// IsAllDayEvent flag is set to true (indicating an all-day event), then the time stamp in StartDateTime is always set to
	// midnight in the Coordinated Universal Time (UTC) time zone. Note Don’t attempt to alter the time stamp to account
	// for any time zone differences. If the event’s IsAllDayEvent flag is set to false, then you must translate the
	// time portion of the time stamp in StartDateTime to or from a local time zone for the user or the application, as
	// appropriate. The translation must be in the Coordinated Universal Time (UTC) time zone. If this field has a value, then
	// ActivityDate and ActivityDateTime either must be null or must match the value of this field. If the activity is a task,
	// StartDateTime is null
	//
	// Properties:Filter, Nillable, Sort
	StartDateTime types.Datetime `json:"StartDateTime"`
	// Status ...
	//
	// Indicates the current status of a task, such as in progress or complete. Each predefined status field sets a
	// value for IsClosed. To obtain picklist values, query TaskStatus.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Nillable, Sort
	Status types.NullableString `json:"Status"`
	// Subject ...
	//
	// Contains the subject of the task or event.
	//
	// Properties:Filter, Nillable, Sort
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WhatID ...
	//
	// The WhatId represents nonhuman objects such as accounts, opportunities, campaigns, cases, or custom
	// objects. WhatIds are polymorphic. Polymorphic means a WhatId is equivalent to the ID of a related object. The label
	// is Related To ID.
	//
	// Properties:Filter, Group, Nillable, Sort
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID. If Shared Activities is enabled, the
	// value of this field is the ID of the related lead or primary contact. If you add, update, or remove the WhoId field,
	// you might encounter problems with triggers, workflows, and data validation rules that are associated with
	// the record. The label is Name ID. If your organization uses Shared Activities, when you query activities in API
	// version 30.0 or later, the returned value of the WhoId field matches the value in the queried object, not
	// necessarily in the activity record itself. If Shared Activities is enabled, the value of this field is not populated and
	// the field PrimaryWhoId should be queried instead.
	//
	// Properties:Filter, Group, Nillable, Sort
	WhoID types.NullableString `json:"WhoId"`
}

// AttachedContentDocument ...
//
// This read-only object contains all ContentDocument objects associated with an object.
type AttachedContentDocument struct {
	// ContentDocumentID ...
	//
	// ID of the attached ContentDocument.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContentDocumentID types.NullableString `json:"ContentDocumentId"`
	// ContentSize ...
	//
	// Size of the document in bytes.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContentSize types.NullableInt `json:"ContentSize"`
	// ContentURL ...
	//
	// URL for links and Google Docs. This field is set only for links and Google Docs, and is one of the fields that
	// determine the FileType. This field is available in API version 31.0 and later.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	ContentURL types.NullableString `json:"ContentUrl"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ExternalDataSourceName ...
	//
	// Name of the external data source in which the document is stored. This field is set only for external
	// documents that are connected to Salesforce.This field is available in API version 32.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ExternalDataSourceName types.NullableString `json:"ExternalDataSourceName"`
	// ExternalDataSourceType ...
	//
	// Type of external data source in which the document is stored. This field is set only for external documents
	// that are connected to Salesforce.This field is available in APIAPI version 35.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ExternalDataSourceType types.NullableString `json:"ExternalDataSourceType"`
	// FileExtension ...
	//
	// File extension of the attached ContentDocument. This field is available in API version 31.0 and
	// later.
	//
	// Properties:Filter, Group, Nillable, Sort
	FileExtension types.NullableString `json:"FileExtension"`
	// FileType ...
	//
	// Type of document, determined by the file extension.
	//
	// Properties:Filter, Group, Nillable, Sort
	FileType types.NullableString `json:"FileType"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LinkedEntityID ...
	//
	// ID of the record the ContentDocument is attached to.
	//
	// Properties:Filter, Group, Sort
	LinkedEntityID string `json:"LinkedEntityId"`
	// SharingOption ...
	//
	// Controls whether or not sharing is frozen for a file. Only administrators and file owners with
	// Collaborator access to the file can modify this field. Default is Allowed, which means that new shares are allowed. When
	// set to Restricted, new shares are prevented without affecting existing shares.This field is available in API
	// versions 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Nillable, Restricted
	// picklist, Sort
	SharingOption types.NullableString `json:"SharingOption"`
	// Title ...
	//
	// Title of the attached ContentDocument.
	//
	// Properties:Filter, Group, idLookup, Sort
	Title string `json:"Title"`
}

// Attachment ...
//
// Represents a file that a User has uploaded and attached to a parent object.
type Attachment struct {
	// Body ...
	//
	// Required. Encoded file data.
	//
	// Properties:Create, Update
	Body string `json:"Body"`
	// BodyLength ...
	//
	// Size of the file (in bytes).
	//
	// Properties:Filter, Group, Nillable, Sort
	BodyLength types.NullableInt `json:"BodyLength"`
	// ContentType ...
	//
	// The content type of the attachment.If the Don't allow HTML uploads as attachments or document records
	// security setting is enabled for your organization, you cannot upload files with the following file extensions:
	// .htm, .html, .htt, .htx, .mhtm, .mhtml, .shtm, .shtml, .acgi, .svg. When you insert a document or attachment
	// through the API, make sure that this field is set to the appropriate MIME type.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	ContentType types.NullableString `json:"ContentType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Description of the attachment. Maximum size is 500 characters. This field is available in API version 18.0
	// and later.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Description types.NullableString `json:"Description"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsPrivate ...
	//
	// Indicates whether this record is viewable only by the owner and administrators (true) or viewable by all
	// otherwise-allowed users (false). During a create or update call, it is possible to mark an Attachment record as private even if
	// you are not the owner. This can result in a situation in which you can no longer access the record that you just
	// inserted or updated. Label is Private.Attachments on tasks or events can't be marked private.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsPrivate bool `json:"IsPrivate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Name ...
	//
	// Required. Name of the attached file. Maximum size is 255 characters. Label is File Name.
	//
	//
	// Properties:Create, Filter, Group, idLookup, Sort, Update
	Name string `json:"Name"`
	// OwnerID ...
	//
	// ID of the User who owns the attachment. This field was required previous to release 9.0. Beginning with
	// release 9.0, it can be null on create.The owner of an attachment on a task or event must be the same as the owner of the
	// task or event.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// ParentID ...
	//
	// Required. ID of the parent object of the attachment. The following objects are supported as parents of
	// attachments: Account Asset Campaign Case Contact Contract Custom objects EmailMessage EmailTemplate Event Lead
	// Opportunity Product2 Solution Task
	//
	// Properties:Create, Filter, Group, Sort
	ParentID string `json:"ParentId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// Balloon__c ...
//
// A balloon is a custom object so I can test custom objects.
type Balloon__c struct {
	// Artist__c ...
	Artist__c types.NullableString `json:"Artist__c"`
	// Color__c ...
	Color__c types.NullableString `json:"Color__c"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Name ...
	Name types.NullableString `json:"Name"`
	// OwnerID ...
	OwnerID string `json:"OwnerId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// CampaignMember ...
//
// Represents the association between a campaign and either a lead or a contact.
type CampaignMember struct {
	// CampaignID ...
	//
	// Required. ID of the Campaign to which this Lead or Contact is associated.
	//
	// Properties:Create,
	// Filter, Group, Sort
	CampaignID string `json:"CampaignId"`
	// City ...
	//
	// The city for the address of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	City types.NullableString `json:"City"`
	// CompanyOrAccount ...
	//
	// The company or account of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	CompanyOrAccount types.NullableString `json:"CompanyOrAccount"`
	// ContactID ...
	//
	// Required. ID of the Contact who is associated with a Campaign.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort
	ContactID types.NullableString `json:"ContactId"`
	// Country ...
	//
	// The country for the address of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Country types.NullableString `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// The description of the associated lead or contact.
	//
	// Properties:Nillable
	Description types.NullableString `json:"Description"`
	// DoNotCall ...
	//
	// Indicates that the contact does not wish to be called.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	DoNotCall bool `json:"DoNotCall"`
	// Email ...
	//
	// Email address for the contact or lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	Email types.NullableString `json:"Email"`
	// Fax ...
	//
	// Fax number for the contact or lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	Fax types.NullableString `json:"Fax"`
	// FirstName ...
	//
	// The first name of the contact or lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	FirstName types.NullableString `json:"FirstName"`
	// FirstRespondedDate ...
	//
	// Indicates the date on which the campaign member was first given a responded status.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	FirstRespondedDate types.Date `json:"FirstRespondedDate"`
	// HasOptedOutOfEmail ...
	//
	// Indicates whether the contact or lead would prefer not to receive email from Salesforce (true) or not
	// (false).
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	HasOptedOutOfEmail bool `json:"HasOptedOutOfEmail"`
	// HasOptedOutOfFax ...
	//
	// Indicates that the contact or lead does not wish to receive faxes.
	//
	// Properties:Defaulted on
	// create, Filter, Group, Sort
	HasOptedOutOfFax bool `json:"HasOptedOutOfFax"`
	// HasResponded ...
	//
	// Indicates whether the campaign member has responded to the campaign (true) or not (false). Label is
	// Responded.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	HasResponded bool `json:"HasResponded"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	//
	// The last name of the contact or lead. Limit is 80 characters.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	LastName types.NullableString `json:"LastName"`
	// LeadID ...
	//
	// Required. ID of the Lead who is associated with a Campaign.
	//
	// Properties:Create, Filter, Group,
	// Nillable,Sort
	LeadID types.NullableString `json:"LeadId"`
	// LeadOrContactID ...
	//
	// The ID of the associated lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	LeadOrContactID types.NullableString `json:"LeadOrContactId"`
	// LeadOrContactOwnerID ...
	//
	// The ID of the owner of the associated lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	LeadOrContactOwnerID types.NullableString `json:"LeadOrContactOwnerId"`
	// LeadSource ...
	//
	// The source from which the lead was obtained.
	//
	// Properties:Filter, Group, Nillable, Sort
	LeadSource types.NullableString `json:"LeadSource"`
	// MobilePhone ...
	//
	// The mobile phone number of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	MobilePhone types.NullableString `json:"MobilePhone"`
	// Name ...
	//
	// First and last name of the contact or lead with which the campaign member is associated.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	Name types.NullableString `json:"Name"`
	// Phone ...
	//
	// The phone number of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	//
	// The postal code of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	PostalCode types.NullableString `json:"PostalCode"`
	// Salutation ...
	//
	// Salutation for the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Salutation types.NullableString `json:"Salutation"`
	// State ...
	//
	// The state for the address of the lead or contact. Limit is 80 characters.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	State types.NullableString `json:"State"`
	// Status ...
	//
	// Controls the HasResponded flag on this object. You can't directly set the HasResponded flag, as it is
	// read-only. You can set it indirectly by setting this field in a create or update call. Each predefined value implies a
	// HasResponded flag value. Each time you update this field, you implicitly update the HasResponded flag. In the
	// Salesforce user interface, Marketing users can define valid status values for the Status picklist. They can choose
	// one status as the default status. For each Status field value, they can also select which values to count as
	// “Responded,” meaning that the HasResponded flag is set to true for those values.40 character limit. Note When creating
	// or updating campaign members, use the text value for Status instead of the ID from the CampaignMemberStatus
	// object.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Status types.NullableString `json:"Status"`
	// Street ...
	//
	// The street for the address of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Street types.NullableString `json:"Street"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	//
	// Title for the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Title types.NullableString `json:"Title"`
	// Type ...
	//
	// Indicates whether the campaign member is a lead or a contact.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Type types.NullableString `json:"Type"`
}

// CollaborationGroupRecord ...
//
// Represents the records associated with Chatter groups.
type CollaborationGroupRecord struct {
	// CollaborationGroupID ...
	//
	// Required. ID of the Chatter group.
	//
	// Properties:Create, Filter, Group, Sort
	CollaborationGroupID string `json:"CollaborationGroupId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RecordID ...
	//
	// Required. The ID of the record associated with the Chatter group.
	//
	// Properties:Create, Filter,
	// Group, Sort
	RecordID string `json:"RecordId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// CombinedAttachment ...
//
// This read-only object contains all notes, attachments, Google Docs, documents uploaded to libraries in
// Salesforce CRM Content, and files added to Chatter that are associated with a record.
type CombinedAttachment struct {
	// ContentSize ...
	//
	// Size of the document in bytes.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContentSize types.NullableInt `json:"ContentSize"`
	// ContentURL ...
	//
	// URL for links and Google Docs. This field is set only for links and Google Docs, and is one of the fields that
	// determine the FileType. This field is available in API version 31.0 and later.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	ContentURL types.NullableString `json:"ContentUrl"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ExternalDataSourceName ...
	//
	// Name of the external data source in which the document is stored. This field is set only for external
	// documents that are connected to Salesforce.This field is available in API version 32.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ExternalDataSourceName types.NullableString `json:"ExternalDataSourceName"`
	// ExternalDataSourceType ...
	//
	// Type of external data source in which the document is stored. This field is set only for external documents
	// that are connected to Salesforce.This field is available in API version 35.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ExternalDataSourceType types.NullableString `json:"ExternalDataSourceType"`
	// FileExtension ...
	//
	// File extension of the document. This field is available in API version 31.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	FileExtension types.NullableString `json:"FileExtension"`
	// FileType ...
	//
	// Type of document, determined by the file extension.
	//
	// Properties:Filter, Group, Nillable, Sort
	FileType types.NullableString `json:"FileType"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// ParentID ...
	//
	// The ID of the parent object.
	//
	// Properties:Filter, Group, Sort
	ParentID string `json:"ParentId"`
	// RecordType ...
	//
	// The parent object type.
	//
	// Properties:Filter, Group, Nillable, Sort
	RecordType types.NullableString `json:"RecordType"`
	// SharingOption ...
	//
	// Controls whether or not sharing is frozen for a file. Only administrators and file owners with
	// Collaborator access to the file can modify this field. Default is Allowed, which means that new shares are allowed. When
	// set to Restricted, new shares are prevented without affecting existing shares.This field is available in API
	// versions 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Nillable, Restricted
	// picklist, Sort
	SharingOption types.NullableString `json:"SharingOption"`
	// Title ...
	//
	// Title of the attached file.
	//
	// Properties:Filter, Group, Nillable, Sort
	Title types.NullableString `json:"Title"`
}

// Contact ...
//
// Represents a contact, which is a person associated with an account.
type Contact struct {
	// AccountID ...
	//
	// ID of the account that’s the parent of this contact. We recommend that you update up to 50 contacts
	// simultaneously when changing the accounts on contacts enabled for a Customer Portal or partner portal. We also recommend
	// that you make this update after business hours.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	AccountID types.NullableString `json:"AccountId"`
	// AssistantName ...
	//
	// The assistant’s name.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	AssistantName types.NullableString `json:"AssistantName"`
	// AssistantPhone ...
	//
	// The assistant’s telephone number.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	AssistantPhone types.NullableString `json:"AssistantPhone"`
	// Birthdate ...
	//
	// The contact’s birthdate.Filter criteria for report filters, list view filters, and SOQL queries
	// ignore the year portion of the Birthdate field. For example, this SOQL query returns contacts with birthdays
	// later in the year than today:SELECT Name, BirthdateFROM ContactWHERE Birthdate > TODAY
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Birthdate types.Date `json:"Birthdate"`
	// CleanStatus ...
	//
	// Indicates the record’s clean status as compared with Data.com. Values include: Matched, Different,
	// Acknowledged, NotFound, Inactive, Pending, SelectMatch, or Skipped.Several values for CleanStatus appear with
	// different labels on the contact record. Matched appears as In Sync Acknowledged appears as Reviewed Pending appears
	// as Not Compared
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	CleanStatus types.NullableString `json:"CleanStatus"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Department ...
	//
	// The contact’s department.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Department types.NullableString `json:"Department"`
	// Description ...
	//
	// A description of the contact. Label is Contact Description up to 32 KB.
	//
	// Properties:Create,
	// Nillable, Update
	Description types.NullableString `json:"Description"`
	// Email ...
	//
	// The contact’s email address.
	//
	// Properties:Create, Filter, Group, idLookup, Nillable, Sort,
	// Update
	Email types.NullableString `json:"Email"`
	// EmailBouncedDate ...
	//
	// If bounce management is activated and an email sent to the contact bounces, the date and time of the
	// bounce.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	EmailBouncedDate types.Datetime `json:"EmailBouncedDate"`
	// EmailBouncedReason ...
	//
	// If bounce management is activated and an email sent to the contact bounces, the reason for the
	// bounce.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	EmailBouncedReason types.NullableString `json:"EmailBouncedReason"`
	// Fax ...
	//
	// The contact’s fax number. Label is Business Fax.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Fax types.NullableString `json:"Fax"`
	// FirstName ...
	//
	// The contact’s first name up to 40 characters.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	FirstName types.NullableString `json:"FirstName"`
	// HomePhone ...
	//
	// The contact’s home telephone number.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	HomePhone types.NullableString `json:"HomePhone"`
	// ID ...
	ID string `json:"Id"`
	// IndividualID ...
	//
	// ID of the data privacy record associated with this contact. This field is available if Data Protection and
	// Privacy is enabled.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	IndividualID types.NullableString `json:"IndividualId"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsEmailBounced ...
	//
	// If bounce management is activated and an email is sent to a contact, indicates whether the email bounced
	// (true) or not (false).
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsEmailBounced bool `json:"IsEmailBounced"`
	// Jigsaw ...
	//
	// References the company’s ID in Data.com. If an account has a value in this field, it means that the account
	// was imported from Data.com. If the field value is null, the account was not imported from Data.com. Maximum
	// size is 20 characters. Available in API version 22.0 and later. Label is Data.com Key. Important The Jigsaw
	// field is exposed in the API to support troubleshooting for import errors and reimporting of corrected data. Do
	// not modify this value.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Jigsaw types.NullableString `json:"Jigsaw"`
	// JigsawContactID ...
	JigsawContactID types.NullableString `json:"JigsawContactId"`
	// Languages__c ...
	Languages__c types.NullableString `json:"Languages__c"`
	// LastActivityDate ...
	//
	// Value is the most recent of either: Due date of the most recent event logged against the record. Due date of
	// the most recently closed task associated with the record.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	LastActivityDate types.Date `json:"LastActivityDate"`
	// LastCURequestDate ...
	LastCURequestDate types.Datetime `json:"LastCURequestDate"`
	// LastCUUpdateDate ...
	LastCUUpdateDate types.Datetime `json:"LastCUUpdateDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	//
	// Required. Last name of the contact up to 80 characters.
	//
	// Properties:Create, Filter, Group, Sort,
	// Update
	LastName string `json:"LastName"`
	// LastReferencedDate ...
	//
	// The timestamp when the current user last accessed this record, a record related to this record, or a list
	// view.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp when the current user last viewed this record or list view. If this value is null, the user
	// might have only accessed this record or list view (LastReferencedDate) but not viewed it.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// LeadSource ...
	//
	// The lead’s source.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	LeadSource types.NullableString `json:"LeadSource"`
	// Level__c ...
	Level__c types.NullableString `json:"Level__c"`
	// MailingAddress ...
	//
	// The compound form of the mailing address. Read-only. For details on compound address fields, see Address
	// Compound Fields.
	//
	// Properties:Filter, Nillable
	MailingAddress types.Address `json:"MailingAddress"`
	// MailingCity ...
	//
	// Mailing address details.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingCity types.NullableString `json:"MailingCity"`
	// MailingCountry ...
	//
	// Mailing address details.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingCountry types.NullableString `json:"MailingCountry"`
	// MailingGeocodeAccuracy ...
	//
	// Accuracy level of the geocode for the mailing address. For details on geolocation compound field, see
	// Compound Field Considerations and Limitations.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update, Query, Restricted picklist, Nillable
	MailingGeocodeAccuracy types.NullableString `json:"MailingGeocodeAccuracy"`
	// MailingLatitude ...
	//
	// Used with MailingLongitude to specify the precise geolocation of a mailing address. Acceptable values
	// are numbers between –90 and 90 up to 15 decimal places. For details on geolocation compound fields, see
	// Compound Field Considerations and Limitations.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	MailingLatitude types.NullableFloat64 `json:"MailingLatitude"`
	// MailingLongitude ...
	//
	// Used with MailingLatitude to specify the precise geolocation of a mailing address. Acceptable values are
	// numbers between –180 and 180 up to 15 decimal places. For details on geolocation compound fields, see Compound
	// Field Considerations and Limitations.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	MailingLongitude types.NullableFloat64 `json:"MailingLongitude"`
	// MailingPostalCode ...
	//
	// Mailing address details.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingPostalCode types.NullableString `json:"MailingPostalCode"`
	// MailingState ...
	//
	// Mailing address details.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingState types.NullableString `json:"MailingState"`
	// MailingStreet ...
	//
	// Street address for mailing address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingStreet types.NullableString `json:"MailingStreet"`
	// MasterRecordID ...
	//
	// If this record was deleted as the result of a merge, this field contains the ID of the record that remains. If
	// this record was deleted for any other reason, or has not been deleted, the value is null.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	MasterRecordID types.NullableString `json:"MasterRecordId"`
	// MobilePhone ...
	//
	// Contact’s mobile phone number.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MobilePhone types.NullableString `json:"MobilePhone"`
	// Name ...
	//
	// Concatenation of FirstName, MiddleName, LastName, and Suffix up to 203 characters, including
	// whitespaces.
	//
	// Properties:Filter, Group, Sort
	Name string `json:"Name"`
	// OtherAddress ...
	//
	// The compound form of the other address. Read-only. For details on compound address fields, see Address
	// Compound Fields.
	//
	// Properties:Filter, Nillable
	OtherAddress types.Address `json:"OtherAddress"`
	// OtherCity ...
	//
	// Alternate address details.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	OtherCity types.NullableString `json:"OtherCity"`
	// OtherCountry ...
	//
	// Alternate address details.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	OtherCountry types.NullableString `json:"OtherCountry"`
	// OtherGeocodeAccuracy ...
	//
	// Accuracy level of the geocode for the other address. For details on geolocation compound fields, see
	// Compound Field Considerations and Limitations.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	OtherGeocodeAccuracy types.NullableString `json:"OtherGeocodeAccuracy"`
	// OtherLatitude ...
	//
	// Used with OtherLongitude to specify the precise geolocation of an alternate address. Acceptable values
	// are numbers between –90 and 90 up to 15 decimal places. For details on geolocation compound fields, see
	// Compound Field Considerations and Limitations.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	OtherLatitude types.NullableFloat64 `json:"OtherLatitude"`
	// OtherLongitude ...
	//
	// Used with OtherLatitude to specify the precise geolocation of an alternate address. Acceptable values
	// are numbers between –180 and 180 up to 15 decimal places. For details on geolocation compound fields, see
	// Compound Field Considerations and Limitations.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	OtherLongitude types.NullableFloat64 `json:"OtherLongitude"`
	// OtherPhone ...
	//
	// Telephone for alternate address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	OtherPhone types.NullableString `json:"OtherPhone"`
	// OtherPostalCode ...
	//
	// Alternate address details.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	OtherPostalCode types.NullableString `json:"OtherPostalCode"`
	// OtherState ...
	//
	// Alternate address details.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	OtherState types.NullableString `json:"OtherState"`
	// OtherStreet ...
	//
	// Street for alternate address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	OtherStreet types.NullableString `json:"OtherStreet"`
	// OwnerID ...
	//
	// The ID of the owner of the account associated with this contact.
	//
	// Properties:Create, Defaulted on
	// create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Phone ...
	//
	// Telephone number for the contact. Label is Business Phone.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Phone types.NullableString `json:"Phone"`
	// PhotoURL ...
	//
	// Path to be combined with the URL of a Salesforce instance (Example:
	// https://yourInstance.salesforce.com/) to generate a URL to request the social network profile image associated with the contact. Generated URL
	// returns an HTTP redirect (code 302) to the social network profile image for the contact. Empty if Social Accounts
	// and Contacts isn't enabled or if Social Accounts and Contacts is disabled for the requesting user.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	PhotoURL types.NullableString `json:"PhotoUrl"`
	// ReportsToID ...
	//
	// This field doesn’t appear if IsPersonAccount is true.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	ReportsToID types.NullableString `json:"ReportsToId"`
	// Salutation ...
	//
	// Honorific abbreviation, word, or phrase to be used in front of name in greetings, such as Dr. or
	// Mrs.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Salutation types.NullableString `json:"Salutation"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	//
	// Title of the contact, such as CEO or Vice President.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Title types.NullableString `json:"Title"`
}

// ContactRequest ...
//
// Represents a customer’s request for support to get back to them about an issue. This object is available
// in API version 45.0 and later.
type ContactRequest struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp for when the current user last viewed a record related to this record.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp for when the current user last viewed this record. If this value is null, this record might
	// only have been referenced (LastReferencedDate) and not viewed.
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Name ...
	//
	// The contact request number.
	//
	// Properties:Autonumber, Defaulted on create, Filter, idLookup,
	// Sort
	Name string `json:"Name"`
	// OwnerID ...
	//
	// ID of the Salesforce record that owns the request.
	//
	// Properties:Create, Defaulted on create,
	// Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// PreferredChannel ...
	//
	// The channel the customer selected as their preferred method of communication in the contact request flow.
	// For example: Phone
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	PreferredChannel string `json:"PreferredChannel"`
	// PreferredPhone ...
	//
	// The phone number the customer provided when requesting help in the contact request flow.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PreferredPhone types.NullableString `json:"PreferredPhone"`
	// RequestDescription ...
	//
	// The description of the customer’s issue that they provided when requesting help in the contact request
	// flow.
	//
	// Properties:Create, Nillable, Update
	RequestDescription types.NullableString `json:"RequestDescription"`
	// RequestReason ...
	//
	// The reason the customer provided when requesting help in the contact request flow. These values are
	// customizable in Object Manager. The default values are: Account Billing Case General Order Other Product
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Sort, Update
	RequestReason types.NullableString `json:"RequestReason"`
	// Status ...
	//
	// The status of the contact request. For example: Abandoned Attempted Contacted New
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	Status string `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WhatID ...
	//
	// ID of the Salesforce record the contact request is related to, such as an account, case, opportunity, or
	// work order.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// ID of the Salesforce contact record the contact request is related to, such as a contact, lead, or
	// user.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WhoID types.NullableString `json:"WhoId"`
}

// ContentDocumentLink ...
//
// Represents the link between a Salesforce CRM Content document or Salesforce file and where it's shared. A
// file can be shared with other users, groups, records, and Salesforce CRM Content libraries. This object is
// available in versions 21.0 and later for Salesforce CRM Content documents and Salesforce Files.
type ContentDocumentLink struct {
	// ContentDocumentID ...
	//
	// ID of the document.
	//
	// Properties:Create, Filter, Group, Sort
	ContentDocumentID string `json:"ContentDocumentId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LinkedEntityID ...
	//
	// ID of the linked object. Can include Chatter users, groups, records (any that support Chatter feed
	// tracking including custom objects), and Salesforce CRM Content libraries.
	// Using the API only, you can relate
	// notes to custom settings.

	//
	// Properties:Create, Filter, Group, Sort
	LinkedEntityID string `json:"LinkedEntityId"`
	// ShareType ...
	//
	// Required. The permission granted to the user of the shared file in a library. This is determined by the
	// permission the user already has in the library. This field is available in API version 25.0 and later. V Viewer
	// permission. The user can explicitly view but not edit the shared file. C Collaborator permission. The user can
	// explicitly view and edit the shared file. I Inferred permission. The user’s permission is determined by the related
	// record. For shares with a library, this is defined by the permissions the user has in that library. Inferred
	// permission on shares with libraries and file owners is available in API versions 21.0 and later. Inferred permission
	// on shares with standard objects is available in API versions 36.0 and later.
	// V

	// Viewer permission.
	// The user can explicitly view but not edit the shared file.

	// C

	// Collaborator permission. The user can
	// explicitly view and edit the shared file.

	// I

	// Inferred permission. The user’s permission is determined by
	// the related record. For shares with a library, this is defined by the permissions the user has in that library.
	// Inferred permission on shares with libraries and file owners is available in API versions 21.0 and later. Inferred
	// permission on shares with standard objects is available in API versions 36.0 and later.

	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ShareType types.NullableString `json:"ShareType"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Visibility ...
	//
	// Specifies whether this file is available to all users, internal users, or shared users. This field is
	// available in API version 26.0 and later. Visibility can have the following values. AllUsersThe file is available to
	// all users who have permission to see the file. InternalUsersThe file is available only to internal users who
	// have permission to see the file. SharedUsersThe file is available to all users who can see the feed to which the
	// file is posted. SharedUsers is used only for files shared with users, and is available only when an org has
	// private org-wide sharing on by default. The SharedUsers value is available in API version 32.0 and later. Note the
	// following exceptions for Visibility. AllUsers & InternalUsers values apply to files posted on standard and custom
	// object records, but not to users, groups, or content libraries. For posts to a record feed, Visibility is set to
	// InternalUsers for all internal users by default. External users can set Visibility only to AllUsers. On user and group
	// posts, only internal users can set Visibility to InternalUsers. For posts to a user feed, if the
	// organization-wide default for user sharing is set to private, Visibility is set to SharedUsers. Only internal users can
	// update Visibility. Visibility can be updated on links to files posted on standard and custom object records, but
	// not to users, groups, or content libraries. Visibility is updatable in API version 43.0 and later.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Visibility types.NullableString `json:"Visibility"`
}

// DandBCompany ...
//
// Represents a Dun & Bradstreet® company record, which is associated with an account added from Data.com.
// This object is available in API version 25.0 and later.
type DandBCompany struct {
	// Address ...
	//
	// The compound form of the address. Read-only. See Address Compound Fields for details on compound address
	// fields.
	//
	// Properties:Filter, Nillable
	Address types.Address `json:"Address"`
	// City ...
	//
	// The city where a company is physically located. Maximum size is 40 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	City types.NullableString `json:"City"`
	// CompanyCurrencyIsoCode ...
	//
	// The code used to represent a company’s local currency. This data is provided by the International
	// Organization for Standardization (ISO) and is based on their three-letter currency codes. For example, USD is the ISO
	// code for United States Dollar. Maximum size is 3 characters.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Restricted picklist, Sort, Update
	CompanyCurrencyIsoCode types.NullableString `json:"CompanyCurrencyIsoCode"`
	// Country ...
	//
	// The country where a company is physically located. Maximum size is 40 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Country types.NullableString `json:"Country"`
	// CountryAccessCode ...
	//
	// The required code for international calls. Maximum size is 4 characters.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	CountryAccessCode types.NullableString `json:"CountryAccessCode"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// CurrencyCode ...
	//
	// The currency in which the company’s sales volume is expressed. The full list of values can be found at the
	// Optimizer Resources page maintained by Dun & Bradstreet. Maximum size is 4 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	CurrencyCode types.NullableString `json:"CurrencyCode"`
	// Description ...
	//
	// A brief description of the company, which may include information about its history, its products and
	// services, and its influence on a particular industry. Maximum size is 32000 characters.
	//
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// DomesticUltimateBusinessName ...
	//
	// The primary name of the Domestic Ultimate, which is the highest ranking subsidiary, specified by country,
	// within an organization’s corporate structure. Maximum size is 255 characters.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	DomesticUltimateBusinessName types.NullableString `json:"DomesticUltimateBusinessName"`
	// DomesticUltimateDunsNumber ...
	//
	// The D-U-N-S Number for the Domestic Ultimate, which is the highest ranking subsidiary, specified by
	// country, within an organization’s corporate structure. Maximum size is 9 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	DomesticUltimateDunsNumber types.NullableString `json:"DomesticUltimateDunsNumber"`
	// DunsNumber ...
	//
	// The Data Universal Numbering System (D-U-N-S) number is a unique, nine-digit number assigned to every
	// business location in the Dun & Bradstreet database that has a unique, separate, and distinct operation. D-U-N-S
	// numbers are used by industries and organizations around the world as a global standard for business
	// identification and tracking. Maximum size is 9 characters.
	//
	// Properties:Create, Filter, Group, Sort, Update
	DunsNumber string `json:"DunsNumber"`
	// EmployeeQuantityGrowthRate ...
	//
	// The yearly growth rate of the number of employees in a company expressed as a decimal percentage. The data
	// includes the total employee growth rate for the past two years.
	//
	// Properties:Create, Filter, Nillable,
	// Sort, Update
	EmployeeQuantityGrowthRate types.NullableFloat64 `json:"EmployeeQuantityGrowthRate"`
	// EmployeesHere ...
	//
	// The number of employees at a specified location, such as a branch location. Maximum size is 15
	// characters.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	EmployeesHere types.NullableFloat64 `json:"EmployeesHere"`
	// EmployeesHereReliability ...
	//
	// The reliability of the EmployeesHere figure. Available values include: 0Actual number 1Low 2Estimated
	// (for all records) 3Modeled (for non-US records)
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	EmployeesHereReliability types.NullableString `json:"EmployeesHereReliability"`
	// EmployeesTotal ...
	//
	// The total number of employees in the company, including all subsidiary and branch locations. This data is
	// only available on records that have a value of Headquarters/Parent in the LocationStatus field. Maximum size
	// is 15 characters.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	EmployeesTotal types.NullableFloat64 `json:"EmployeesTotal"`
	// EmployeesTotalReliability ...
	//
	// The reliability of the EmployeesTotal figure. Available values include: 0Actual number 1Low 2Estimated
	// (for all records) 3Modeled (for non-US records) A blank value indicates this data is unavailable.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	EmployeesTotalReliability types.NullableString `json:"EmployeesTotalReliability"`
	// FamilyMembers ...
	//
	// The total number of family members, worldwide, within an organization, including the Global Ultimate,
	// its subsidiaries (if any), and its branches (if any). Maximum size is 5 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FamilyMembers types.NullableInt `json:"FamilyMembers"`
	// Fax ...
	//
	// The company’s facsimile number.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Fax types.NullableString `json:"Fax"`
	// FifthNaics ...
	//
	// An additional NAICS code used to further classify an organization by industry. Maximum size is 6
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FifthNaics types.NullableString `json:"FifthNaics"`
	// FifthNaicsDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding NAICS code.
	// Maximum size is 120 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FifthNaicsDesc types.NullableString `json:"FifthNaicsDesc"`
	// FifthSic ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FifthSic types.NullableString `json:"FifthSic"`
	// FifthSic8 ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FifthSic8 types.NullableString `json:"FifthSic8"`
	// FifthSic8Desc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FifthSic8Desc types.NullableString `json:"FifthSic8Desc"`
	// FifthSicDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FifthSicDesc types.NullableString `json:"FifthSicDesc"`
	// FipsMsaCode ...
	//
	// The Federal Information Processing Standards (FIPS) and the Metropolitan Statistical Area (MSA) codes
	// identify the organization’s location. The MSA codes are defined by the US Office of Management and Budget.
	// Maximum size is 5 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FipsMsaCode types.NullableString `json:"FipsMsaCode"`
	// FipsMsaDesc ...
	//
	// A brief description of an organization’s FIPS MSA code. Maximum size is 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FipsMsaDesc types.NullableString `json:"FipsMsaDesc"`
	// FortuneRank ...
	//
	// The numeric value of the company’s Fortune 1000 ranking. A null or blank value means that the company
	// isn’t ranked as a Fortune 1000 company.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FortuneRank types.NullableInt `json:"FortuneRank"`
	// FourthNaics ...
	//
	// An additional NAICS code used to further classify an organization by industry. Maximum size is 6
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FourthNaics types.NullableString `json:"FourthNaics"`
	// FourthNaicsDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding NAICS code.
	// Maximum size is 120 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FourthNaicsDesc types.NullableString `json:"FourthNaicsDesc"`
	// FourthSic ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FourthSic types.NullableString `json:"FourthSic"`
	// FourthSic8 ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FourthSic8 types.NullableString `json:"FourthSic8"`
	// FourthSic8Desc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FourthSic8Desc types.NullableString `json:"FourthSic8Desc"`
	// FourthSicDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FourthSicDesc types.NullableString `json:"FourthSicDesc"`
	// GeoCodeAccuracy ...
	//
	// The level of accuracy of a location’s geographical coordinates compared with its physical address.
	// Available values include: A – Non-US rooftop accuracy B – Block level C – Places the address in the correct city D
	// – Rooftop level I – Street intersection M – Mailing address level N – Not matched P – PO BOX location S
	// – Street level T – Census tract level Z – ZIP code level 0 (zero)– Geocode could not be assigned
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	GeoCodeAccuracy types.NullableString `json:"GeoCodeAccuracy"`
	// GeocodeAccuracyStandard ...
	GeocodeAccuracyStandard types.NullableString `json:"GeocodeAccuracyStandard"`
	// GlobalUltimateBusinessName ...
	//
	// The primary name of the Global Ultimate, which is the highest entity within an organization’s corporate
	// structure and may oversee branches and subsidiaries. Maximum size is 255 characters.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	GlobalUltimateBusinessName types.NullableString `json:"GlobalUltimateBusinessName"`
	// GlobalUltimateDunsNumber ...
	//
	// The D-U-N-S Number of the Global Ultimate, which is the highest entity within an organization’s
	// corporate structure and may oversee branches and subsidiaries. Maximum size is 9 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	GlobalUltimateDunsNumber types.NullableString `json:"GlobalUltimateDunsNumber"`
	// GlobalUltimateTotalEmployees ...
	//
	// The total number of employees at the Global Ultimate, which is the highest entity within an
	// organization’s corporate structure and may oversee branches and subsidiaries. Maximum size is 15 characters.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	GlobalUltimateTotalEmployees types.NullableFloat64 `json:"GlobalUltimateTotalEmployees"`
	// ID ...
	ID string `json:"Id"`
	// ImportExportAgent ...
	//
	// Identifies whether a business imports goods or services, exports goods or services, and/or is an agent for
	// goods. Available values include: AImporter/exporter/agent BImporter/exporter CImporter DImporter/agent
	// EExporter/agent FAgent (keeps no inventory and does not take title goods) GNone or data not available HExporter
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ImportExportAgent types.NullableString `json:"ImportExportAgent"`
	// IncludedInSnP500 ...
	//
	// A true or false value. If true, the company is listed in the S&P 500 Index. If false, the company isn’t
	// listed in the S&P 500 Index.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	IncludedInSnP500 types.NullableString `json:"IncludedInSnP500"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Latitude ...
	//
	// Used with longitude to specify a precise location, which is then used to assess the Geocode Accuracy.
	// Maximum size is 11 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Latitude types.NullableString `json:"Latitude"`
	// LegalStatus ...
	//
	// Identifies the legal structure of an organization.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Restricted picklist, Sort, Update
	LegalStatus types.NullableString `json:"LegalStatus"`
	// LocationStatus ...
	//
	// Identifies the organizational status of a company. Available values are Single location,
	// Headquarters/Parent, and Branch. Available values include: 0Single location (no other entities report to the business)
	// 1Headquarters/parent (branches and/or subsidiaries report to the business) 2Branch (secondary location to a headquarters
	// location)
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	LocationStatus types.NullableString `json:"LocationStatus"`
	// Longitude ...
	//
	// Used with latitude to specify a precise location, which is then used to assess the Geocode Accuracy.
	// Maximum size is 11 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Longitude types.NullableString `json:"Longitude"`
	// MailingAddress ...
	//
	// The compound form of the mailing address. Read-only. See Address Compound Fields for details on compound
	// address fields.
	//
	// Properties:Filter, Nillable
	MailingAddress types.Address `json:"MailingAddress"`
	// MailingCity ...
	//
	// The city where a company has its mail delivered. Maximum size is 40 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingCity types.NullableString `json:"MailingCity"`
	// MailingCountry ...
	//
	// The country where a company has its mail delivered. Maximum size is 40 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingCountry types.NullableString `json:"MailingCountry"`
	// MailingGeocodeAccuracy ...
	MailingGeocodeAccuracy types.NullableString `json:"MailingGeocodeAccuracy"`
	// MailingPostalCode ...
	//
	// The postal code that a company uses on its mailing address. Maximum size is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingPostalCode types.NullableString `json:"MailingPostalCode"`
	// MailingState ...
	//
	// The state where a company has its mail delivered. Maximum size is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingState types.NullableString `json:"MailingState"`
	// MailingStreet ...
	//
	// The street address where a company has its mail delivered. Maximum size is 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	MailingStreet types.NullableString `json:"MailingStreet"`
	// MarketingPreScreen ...
	//
	// The probability that a company will pay with a significant delay compared to the agreed terms. The risk
	// level is based on the standard Commercial Credit Score, and ranges from low risk to high risk. Available values
	// include: LLow risk of delinquency MModerate risk of delinquency HHigh risk of delinquency Important Use this
	// information for marketing pre-screening purposes only.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	MarketingPreScreen types.NullableString `json:"MarketingPreScreen"`
	// MarketingSegmentationCluster ...
	//
	// Twenty-two distinct, mutually exclusive profiles, created as a result of cluster analysis of Dun &
	// Bradstreet data for US organizations.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist,
	// Sort, Update
	MarketingSegmentationCluster types.NullableString `json:"MarketingSegmentationCluster"`
	// MinorityOwned ...
	//
	// Indicates whether an organization is owned or controlled by a member of a minority group. Available values
	// include: YMinority owned NNot minority owned
	//
	// Properties:Create, Filter, Group, Nillable, Restricted
	// picklist, Sort, Update
	MinorityOwned types.NullableString `json:"MinorityOwned"`
	// Name ...
	//
	// The primary or registered name of a company. Maximum size is 255 characters.
	//
	// Properties:Create,
	// Filter, Group, Sort, Update
	Name string `json:"Name"`
	// NationalID ...
	//
	// The identification number used in some countries for business registration and tax collection. Maximum
	// size is 255 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	NationalID types.NullableString `json:"NationalId"`
	// NationalIDType ...
	//
	// A code value that identifies the type of national identification number used. The full list of values can be
	// found at the Optimizer Resources page maintained by Dun & Bradstreet. Maximum size is 5 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	NationalIDType types.NullableString `json:"NationalIdType"`
	// OutOfBusiness ...
	//
	// Indicates whether the company at the specified address has discontinued operations. Available values
	// include: YOut of business NNot out of business
	//
	// Properties:Create, Filter, Group, Nillable, Restricted
	// picklist, Sort, Update
	OutOfBusiness types.NullableString `json:"OutOfBusiness"`
	// OwnOrRent ...
	//
	// Indicates whether a company owns or rents the building it occupies. Available values include: 0Unknown or
	// not applicable 1Owns 2Rents
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist,
	// Sort, Update
	OwnOrRent types.NullableString `json:"OwnOrRent"`
	// ParentOrHqBusinessName ...
	//
	// The primary name of the parent or headquarters company. Maximum size is 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ParentOrHqBusinessName types.NullableString `json:"ParentOrHqBusinessName"`
	// ParentOrHqDunsNumber ...
	//
	// The D-U-N-S Number for the parent or headquarters. Maximum size is 9 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ParentOrHqDunsNumber types.NullableString `json:"ParentOrHqDunsNumber"`
	// Phone ...
	//
	// A company’s primary telephone number.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	//
	// The postal code that corresponds to a company’s physical location. Maximum size is 20
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PostalCode types.NullableString `json:"PostalCode"`
	// PremisesMeasure ...
	//
	// A numeric value for the measurement of the premises.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	PremisesMeasure types.NullableInt `json:"PremisesMeasure"`
	// PremisesMeasureReliability ...
	//
	// A descriptive accuracy of the measurement such as actual, estimated, or modeled.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PremisesMeasureReliability types.NullableString `json:"PremisesMeasureReliability"`
	// PremisesMeasureUnit ...
	//
	// A descriptive measurement unit such as acres, square meters, or square feet.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PremisesMeasureUnit types.NullableString `json:"PremisesMeasureUnit"`
	// PrimaryNaics ...
	//
	// The six-digit North American Industry Classification System (NAICS) code is the standard used by
	// business and government to classify business establishments according to their economic activity for the purpose
	// of collecting, analyzing, and publishing statistical data related to the US business economy. The full list
	// of values can be found at the Optimizer Resources page maintained by Dun & Bradstreet. Maximum size is 6
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PrimaryNaics types.NullableString `json:"PrimaryNaics"`
	// PrimaryNaicsDesc ...
	//
	// A brief description of an organization’s line of business, based on its NAICS code. Maximum size is 120
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PrimaryNaicsDesc types.NullableString `json:"PrimaryNaicsDesc"`
	// PrimarySic ...
	//
	// The four-digit Standard Industrial Classification (SIC) code is used to categorize business
	// establishments by industry. The full list of values can be found at the Optimizer Resources page maintained by Dun &
	// Bradstreet. Maximum size is 4 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PrimarySic types.NullableString `json:"PrimarySic"`
	// PrimarySic8 ...
	//
	// The eight-digit Standard Industrial Classification (SIC) code is used to categorize business
	// establishments by industry. The full list of values can be found at the Optimizer Resources page maintained by Dun &
	// Bradstreet. Maximum size is 8 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PrimarySic8 types.NullableString `json:"PrimarySic8"`
	// PrimarySic8Desc ...
	//
	// A brief description of an organization’s line of business, based on its SIC code. The full list of values
	// can be found at the Optimizer Resources page maintained by Dun & Bradstreet. Maximum size is 80
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PrimarySic8Desc types.NullableString `json:"PrimarySic8Desc"`
	// PrimarySicDesc ...
	//
	// A brief description of an organization’s line of business, based on its SIC code. Maximum size is 80
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PrimarySicDesc types.NullableString `json:"PrimarySicDesc"`
	// PriorYearEmployees ...
	//
	// The total number of employees for the prior year.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	PriorYearEmployees types.NullableInt `json:"PriorYearEmployees"`
	// PriorYearRevenue ...
	//
	// The annual revenue for the prior year.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	PriorYearRevenue types.NullableFloat64 `json:"PriorYearRevenue"`
	// PublicIndicator ...
	//
	// Indicates whether ownership of the company is public or private. Available values include: YPublic
	// NPrivate
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	PublicIndicator types.NullableString `json:"PublicIndicator"`
	// SalesTurnoverGrowthRate ...
	//
	// The increase in annual revenue from the previous value for an equivalent period expressed as a decimal
	// percentage.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	SalesTurnoverGrowthRate types.NullableFloat64 `json:"SalesTurnoverGrowthRate"`
	// SalesVolume ...
	//
	// The total annual sales revenue in the headquarters’ local currency. Dun & Bradstreet tracks revenue
	// data for publicly traded companies, Global Ultimates, Domestic Ultimates, and some headquarters.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	SalesVolume types.NullableFloat64 `json:"SalesVolume"`
	// SalesVolumeReliability ...
	//
	// The reliability of the SalesVolume figure. Available values include: 0Actual number 1Low 2Estimated
	// (for all records) 3Modeled (for non-US records)
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	SalesVolumeReliability types.NullableString `json:"SalesVolumeReliability"`
	// SecondNaics ...
	//
	// An additional NAICS code used to further classify an organization by industry. Maximum size is 6
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SecondNaics types.NullableString `json:"SecondNaics"`
	// SecondNaicsDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding NAICS code.
	// Maximum size is 120 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SecondNaicsDesc types.NullableString `json:"SecondNaicsDesc"`
	// SecondSic ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SecondSic types.NullableString `json:"SecondSic"`
	// SecondSic8 ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SecondSic8 types.NullableString `json:"SecondSic8"`
	// SecondSic8Desc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SecondSic8Desc types.NullableString `json:"SecondSic8Desc"`
	// SecondSicDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SecondSicDesc types.NullableString `json:"SecondSicDesc"`
	// SixthNaics ...
	//
	// An additional NAICS code used to further classify an organization by industry. Maximum size is 6
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SixthNaics types.NullableString `json:"SixthNaics"`
	// SixthNaicsDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding NAICS code.
	// Maximum size is 120 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SixthNaicsDesc types.NullableString `json:"SixthNaicsDesc"`
	// SixthSic ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SixthSic types.NullableString `json:"SixthSic"`
	// SixthSic8 ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SixthSic8 types.NullableString `json:"SixthSic8"`
	// SixthSic8Desc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SixthSic8Desc types.NullableString `json:"SixthSic8Desc"`
	// SixthSicDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SixthSicDesc types.NullableString `json:"SixthSicDesc"`
	// SmallBusiness ...
	//
	// Indicates whether the company is designated a small business as defined by the Small Business
	// Administration of the US government. Available values include: YSmall business site NNot small business site
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	SmallBusiness types.NullableString `json:"SmallBusiness"`
	// State ...
	//
	// The state where a company is physically located. Maximum size is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	State types.NullableString `json:"State"`
	// StockExchange ...
	//
	// The corresponding exchange for a company’s stock symbol. For example: NASDAQ or NYSE. Maximum size is 16
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	StockExchange types.NullableString `json:"StockExchange"`
	// StockSymbol ...
	//
	// The abbreviation used to identify publicly traded shares of a particular stock. Maximum size is 6
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	StockSymbol types.NullableString `json:"StockSymbol"`
	// Street ...
	//
	// The street address where a company is physically located. Maximum size is 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Street types.NullableString `json:"Street"`
	// Subsidiary ...
	//
	// Indicates whether a company is more than 50 percent owned by another organization. Available values
	// include: 0Not subsidiary of another organization 3Subsidiary of another organization
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	Subsidiary types.NullableString `json:"Subsidiary"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// ThirdNaics ...
	//
	// An additional NAICS code used to further classify an organization by industry. Maximum size is 6
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ThirdNaics types.NullableString `json:"ThirdNaics"`
	// ThirdNaicsDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding NAICS code.
	// Maximum size is 120 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ThirdNaicsDesc types.NullableString `json:"ThirdNaicsDesc"`
	// ThirdSic ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ThirdSic types.NullableString `json:"ThirdSic"`
	// ThirdSic8 ...
	//
	// An additional SIC code used to further classify an organization by industry. Maximum size is 8
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ThirdSic8 types.NullableString `json:"ThirdSic8"`
	// ThirdSic8Desc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ThirdSic8Desc types.NullableString `json:"ThirdSic8Desc"`
	// ThirdSicDesc ...
	//
	// A brief description of an organization’s line of business, based on the corresponding SIC code. Maximum
	// size is 80 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ThirdSicDesc types.NullableString `json:"ThirdSicDesc"`
	// TradeStyle1 ...
	//
	// A name, different from its legal name, that an organization may use for conducting business. Similar to
	// “Doing business as” or “DBA”. Maximum size is 255 characters.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	TradeStyle1 types.NullableString `json:"TradeStyle1"`
	// TradeStyle2 ...
	//
	// An additional tradestyle used by the organization. Maximum size is 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	TradeStyle2 types.NullableString `json:"TradeStyle2"`
	// TradeStyle3 ...
	//
	// An additional tradestyle used by the organization. Maximum size is 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	TradeStyle3 types.NullableString `json:"TradeStyle3"`
	// TradeStyle4 ...
	//
	// An additional tradestyle used by the organization. Maximum size is 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	TradeStyle4 types.NullableString `json:"TradeStyle4"`
	// TradeStyle5 ...
	//
	// An additional tradestyle used by the organization. Maximum size is 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	TradeStyle5 types.NullableString `json:"TradeStyle5"`
	// URL ...
	//
	// An organization’s primary website address. Maximum size is 104 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	URL types.NullableString `json:"URL"`
	// UsTaxID ...
	//
	// The identification number for the company used by the Internal Revenue Service (IRS) in the
	// administration of tax laws. Also referred to as Federal Taxpayer Identification Number. Maximum size is 9
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	UsTaxID types.NullableString `json:"UsTaxId"`
	// WomenOwned ...
	//
	// Indicates whether a company is more than 50 percent owned or controlled by a woman. Available values
	// include: YOwned by a woman NNot owned by a woman, or unknown
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	WomenOwned types.NullableString `json:"WomenOwned"`
	// YearStarted ...
	//
	// The year the company was established or the year when current ownership or management assumed control of
	// the company. Maximum size is 4 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	YearStarted types.NullableString `json:"YearStarted"`
}

// DeclinedEventRelation ...
//
// Represents event participants (invitees or attendees) with the status Declined for a given event. This
// object is available in API versions 29.0 and later.
type DeclinedEventRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EventID ...
	//
	// Indicates the ID of the event.
	//
	// Properties:Filter, Group, Nillable, Sort
	EventID types.NullableString `json:"EventId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RelationID ...
	//
	// Indicates the ID of the invitee.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationID types.NullableString `json:"RelationId"`
	// RespondedDate ...
	//
	// Indicates the most recent date and time when the invitee declined an invitation to the event.
	//
	//
	// Properties:Filter, Nillable, Sort
	RespondedDate types.Datetime `json:"RespondedDate"`
	// Response ...
	//
	// Indicates the content of the response field. Label is Comment.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Response types.NullableString `json:"Response"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Type ...
	//
	// Indicates whether the invitee is a user, lead or contact, or resource.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	Type types.NullableString `json:"Type"`
}

// DuplicateRecordItem ...
//
// Represents an individual record that’s part of a duplicate record set. Use this object to create custom
// report types.
type DuplicateRecordItem struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DuplicateRecordSetID ...
	//
	// The duplicate record set that the duplicate record item is assigned to.
	//
	// Properties:Create,
	// Filter, Group, Sort
	DuplicateRecordSetID string `json:"DuplicateRecordSetId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Name ...
	//
	// The autogenerated name that’s given to the Duplicate Record Item. Label is Duplicate Record Item
	// Name.
	//
	// Properties:Autonumber, Defaulted on create, Filter, idLookup, Sort
	Name string `json:"Name"`
	// RecordID ...
	//
	// The name of the record as it appears on the record’s detail page.
	//
	// Properties:Create, Filter,
	// Group, Sort, Update
	RecordID string `json:"RecordId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// EmailMessageRelation ...
//
// Represents the relationship between an email and contacts, leads, and users. This object is available in
// API version 37.0 and later.
type EmailMessageRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EmailMessageID ...
	//
	// The ID of the EmailMessage record.
	//
	// Properties:Create, Filter, Group, Sort
	EmailMessageID string `json:"EmailMessageId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// RelationAddress ...
	//
	// The email address of the sender or recipient. Note If a record relates an email to an existing contact, lead,
	// or user record in Salesforce, the value of RelationAddress is the current value of the email address. If the
	// value is not set, it is auto-populated from RelationId.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort
	RelationAddress types.NullableString `json:"RelationAddress"`
	// RelationID ...
	//
	// The RecordId of the sender or recipient. Note If a record relates an email to an email address that’s not
	// associated with an existing contact, lead, or user record in Salesforce, the value of RelationId is null.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	RelationID types.NullableString `json:"RelationId"`
	// RelationObjectType ...
	//
	// The API name of the object type of the RecordId in the RelationId field. It can be a contact, lead, or
	// user.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationObjectType types.NullableString `json:"RelationObjectType"`
	// RelationType ...
	//
	// The type of relationship the contact, lead, or user has with the email message. Possible values include:
	// ToAddress CcAddress BccAddress FromAddress OtherAddress For an Experience Cloud site user who is not the sender of
	// the email, no BccAddress relations are returned.
	//
	// Properties:Create, Filter, Group, Restricted
	// picklist, Sort
	RelationType string `json:"RelationType"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// EmailStatus ...
//
// Represents the status of email sent.
type EmailStatus struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EmailTemplateName ...
	//
	// The name of the EmailTemplate.
	//
	// Properties:Filter, Group, Nillable, Sort
	EmailTemplateName types.NullableString `json:"EmailTemplateName"`
	// FirstOpenDate ...
	//
	// Date when the email was first opened by recipient. Label is Date Opened.
	//
	// Properties:Filter,
	// Nillable, Sort
	FirstOpenDate types.Datetime `json:"FirstOpenDate"`
	// ID ...
	ID string `json:"Id"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastOpenDate ...
	//
	// Date when the email was last opened by recipient.
	//
	// Properties:Filter, Nillable, Sort
	LastOpenDate types.Datetime `json:"LastOpenDate"`
	// TaskID ...
	//
	// The activity (task or event) associated with the email. Label is Activity ID.
	//
	//
	// Properties:Filter, Group, Sort
	TaskID string `json:"TaskId"`
	// TimesOpened ...
	//
	// Number of times the recipient opened the email.
	//
	// Properties:Filter, Group, Sort
	TimesOpened int `json:"TimesOpened"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	WhoID types.NullableString `json:"WhoId"`
}

// EntitySubscription ...
//
// Represents a subscription for a user following a record or another user. This object is available in API
// version 34.0 and later.
type EntitySubscription struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// ParentID ...
	//
	// Required. ID of the record or user which the user is following.
	//
	// Properties:Create, Filter,
	// Group, Sort
	ParentID string `json:"ParentId"`
	// SubscriberID ...
	//
	// Required. ID of the user who is following the record or user.
	//
	// Properties:Create, Filter, Group,
	// Sort
	SubscriberID string `json:"SubscriberId"`
}

// Event ...
//
// Represents an event in the calendar. In the user interface, event and task records are collectively
// referred to as activities.
type Event struct {
	// AccountID ...
	//
	// Represents the ID of the related account. The AccountId is determined as follows.If the value of WhatId is
	// any of the following objects, then Salesforce uses that object’s AccountId. Account Opportunity Contract
	// Custom object that is a child of Account If the value of the WhatId field is any other object, and the value of the
	// WhoId field is a contact object, then Salesforce uses that contact’s AccountId. (If your org uses Shared
	// Activities, Salesforce uses the AccountId of the primary contact.) Otherwise, Salesforce sets the value of the
	// AccountId field to null. For information on IDs, see ID Field Type.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActivityDate ...
	//
	// Contains the event’s due date if the IsAllDayEvent flag is set to true. This field is a date field with a
	// timestamp that is always set to midnight in the Coordinated Universal Time (UTC) time zone. Don’t attempt to alter
	// the timestamp to account for time zone differences. Label is Due Date Only.This field is required in versions
	// 12.0 and earlier if the IsAllDayEvent flag is set to true. The value for this field and StartDateTime must match,
	// or one of them must be null.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ActivityDate types.Date `json:"ActivityDate"`
	// ActivityDateTime ...
	//
	// Contains the event’s due date if the IsAllDayEvent flag is set to false. The time portion of this field is
	// always transferred in the Coordinated Universal Time (UTC) time zone. Translate the time portion to or from a
	// local time zone for the user or the application, as appropriate. Label is Due Date Time.This field is required in
	// versions 12.0 and earlier if the IsAllDayEvent flag is set to false. The value for this field and StartDateTime must
	// match, or one of them must be null.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ActivityDateTime types.Datetime `json:"ActivityDateTime"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Contains a text description of the event. Limit: 32,000 characters.
	//
	// Properties:Create,
	// Nillable, Update
	Description types.NullableString `json:"Description"`
	// DurationInMinutes ...
	//
	// Contains the event length, in minutes. Even though this field represents a temporal value, it is an integer
	// typenot a Date/Time type.Required in versions 12.0 and earlier if IsAllDayEvent is false. In versions 13.0 and
	// later, this field is optional, depending on the following: If IsAllDayEvent is true, you can supply a value for
	// either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if the values add up to the
	// same amount of time. If both fields are null, the duration defaults to one day. If IsAllDayEvent is false, a value
	// must be supplied for either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if
	// the values add up to the same amount of time. If the multiday event feature is enabled, then API versions 13.0 and
	// later support values greater than 1440 for the DurationInMinutes field. API versions 12.0 and earlier can’t
	// access event objects whose DurationInMinutes is greater than 1440. For more information, see Multiday Events.
	// Depending on your API version, errors with the DurationInMinutes and EndDateTime fields may appear in different
	// places. Versions 38.0 and beforeErrors always appear in the DurationInMinutes field. Versions 39.0 and laterIf
	// there’s no value for the DurationInMinutes field, errors appear in the EndDateTime field. Otherwise, they appear
	// in the DurationInMinutes field.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	DurationInMinutes types.NullableInt `json:"DurationInMinutes"`
	// EndDate ...
	//
	// Read-only. Available in versions 46.0 and later. This field supplies the date value that appears in the
	// EndDateTime field. This field is a date field with a timestamp that is always set to midnight in the Coordinated
	// Universal Time (UTC) time zone.
	//
	// Properties:Filter, Group, Nillable, Sort
	EndDate types.Date `json:"EndDate"`
	// EndDateTime ...
	//
	// Available in versions 13.0 and later. The time portion of this field is always transferred in the
	// Coordinated Universal Time (UTC) time zone. Translate the time portion to or from a local time zone for the user or the
	// application, as appropriate.This field is optional, depending on the following: If IsAllDayEvent is true, you can
	// supply a value for either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if the
	// values add up to the same amount of time. If both fields are null, the duration defaults to one day. If IsAllDayEvent
	// is false, a value must be supplied for either DurationInMinutes or EndDateTime. Supplying values in both
	// fields is allowed if the values add up to the same amount of time. Depending on your API version, errors with the
	// DurationInMinutes and EndDateTime fields may appear in different places. Versions 38.0 and beforeErrors always appear in
	// the DurationInMinutes field. Versions 39.0 and laterIf there’s no value for the DurationInMinutes field,
	// errors appear in the EndDateTime field. Otherwise, they appear in the DurationInMinutes field.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	EndDateTime types.Datetime `json:"EndDateTime"`
	// EventSubtype ...
	//
	// Provides standard subtypes to facilitate creating and searching for events. This field isn’t
	// updateable.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort
	EventSubtype types.NullableString `json:"EventSubtype"`
	// GroupEventType ...
	//
	// Read-only. Available in API versions 19.0 and later. The possible values are: 0 (Non–group event)An
	// event with no invitees. 1 (Group event)An event with invitees. 2 (Proposed event)An event created when a user
	// requests a meeting with a contact, lead, or person account using the Salesforce user interface. When the user
	// confirms the meeting, the proposed event becomes a group event. You can’t create, edit, or delete proposed events
	// in the API. This value is no longer used in API version 41.0 and later. 3 (IsRecurrence2 Series Pattern)An
	// event representing an event series recurrence pattern in Lightning Experience.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Nillable, Restricted picklist, Sort
	GroupEventType types.NullableString `json:"GroupEventType"`
	// ID ...
	ID string `json:"Id"`
	// IsAllDayEvent ...
	//
	// Indicates whether the ActivityDate field (true) or the ActivityDateTime field (false) is used to define
	// the date or time of the event. Label is All-Day Event. See also DurationInMinutes and EndDateTime.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsAllDayEvent bool `json:"IsAllDayEvent"`
	// IsArchived ...
	//
	// Indicates whether the event has been archived.
	//
	// Properties:Defaulted on create, Filter, Group,
	// Sort
	IsArchived bool `json:"IsArchived"`
	// IsChild ...
	//
	// Indicates whether the event is a child of another event (true) or not (false).
	// For a child event, you can
	// update IsReminderSet and ReminderDateTime only. You can query and delete a child event. If the objects related to
	// the child event are different from those related to the parent event (this difference is possible if you use API
	// version 25.0 or earlier) and one of the objects related to the child event is deleted, the objects related to the
	// parent event are updated to ensure data integrity.

	//
	// Properties:Defaulted on create, Filter, Group,
	// Sort
	IsChild bool `json:"IsChild"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsGroupEvent ...
	//
	// Indicates whether the event is a group eventthat is, whether it has invitees (true) or not
	// (false).
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsGroupEvent bool `json:"IsGroupEvent"`
	// IsPrivate ...
	//
	// Indicates whether users other than the creator of the event can (false) or can’t (true) see the event
	// details when viewing the event user’s calendar. However, users with the View All Data or Modify All Data
	// permission can see private events in reports and searches, or when viewing other users’ calendars. Private events
	// can’t be associated with opportunities, accounts, cases, campaigns, contracts, leads, or contacts. Label is
	// Private.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsPrivate bool `json:"IsPrivate"`
	// IsRecurrence ...
	//
	// Indicates whether a Salesforce Classic event is scheduled to repeat itself (true) or only occurs once
	// (false). This is a read-only field when updating records, but not when creating them. If this field value is true,
	// then RecurrenceEndDateOnly, RecurrenceStartDateTime, RecurrenceType, and any recurrence fields
	// associated with the given recurrence type must be populated. Label is Create recurring series of events.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort
	IsRecurrence bool `json:"IsRecurrence"`
	// IsRecurrence2 ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates whether a Lightning Experience
	// event is scheduled to repeat (true) or only occurs once (false. If this field value is true, then
	// Recurrence2PatternText and Recurrence2PatternVersion must be populated. Label is Repeat.
	//
	// Properties:Defaulted on
	// create, Filter, Group, Sort
	IsRecurrence2 bool `json:"IsRecurrence2"`
	// IsRecurrence2Exception ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates whether an individual event in a
	// Lightning Experience event series has a recurrence pattern that’s different from the rest of the series, making it
	// an exception.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsRecurrence2Exception bool `json:"IsRecurrence2Exception"`
	// IsRecurrence2Exclusion ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates when updates to a Lightning
	// Experience event series recurrence pattern have been made, but affect future event occurrences only. For past event
	// occurrences, IsRecurrence2Exclusion is set to true, excluding past occurrences from the series recurrence
	// pattern.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsRecurrence2Exclusion bool `json:"IsRecurrence2Exclusion"`
	// IsReminderSet ...
	//
	// Indicates whether the activity is a reminder (true) or not (false).
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Sort, Update
	IsReminderSet bool `json:"IsReminderSet"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Location ...
	//
	// Contains the location of the event.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Location types.NullableString `json:"Location"`
	// OwnerID ...
	//
	// Contains the ID of the user or public calendar who owns the event. Label is Assigned to ID.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Recurrence2PatternStartDate ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates the date and time when the
	// Lightning Experience event series begins. The time portion of this field is always transferred in the Coordinated
	// Universal Time (UTC) time zone. Translate the time portion to or from a local time zone for the user or the application,
	// as appropriate.
	//
	// Properties:Filter, Nillable, Sort
	Recurrence2PatternStartDate types.Datetime `json:"Recurrence2PatternStartDate"`
	// Recurrence2PatternText ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates the recurrence pattern for
	// Lightning Experience event series. Recurrence2PatternText is implemented with RFC 5545 standard specifications
	// for internet calendaring and scheduling. See Event Series section in this topic for usage examples. This
	// field has a maximum length of 512 characters.
	//
	// Properties:Nillable
	Recurrence2PatternText types.NullableString `json:"Recurrence2PatternText"`
	// Recurrence2PatternTimeZone ...
	//
	// This field available in API version 44.0 and later. Indicates the time zone in which the Lightning
	// Experience event series was created or updated. This field uses standard Java TimeZone IDs. For example,
	// America/Los_Angeles.
	//
	// Properties:, Filter, Group, Nillable, Sort
	Recurrence2PatternTimeZone types.NullableString `json:"Recurrence2PatternTimeZone"`
	// Recurrence2PatternVersion ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates the standard specifications for
	// Lightning Experience event series recurrence patterns. The only possible value is 1 (RFC 5545 v4 RRULE)RFC 5545 is a
	// standard set of specifications for internet calendaring and scheduling that IsRecurrence2 adheres to for series
	// recurrence patterns. RFC 5545 specifications for series recurrence patterns are called rrules. For examples of
	// rrule usage, see the Event Series section in this topic.
	//
	// Properties:Filter, Group, Nillable,
	// Restricted picklist, Sort,
	Recurrence2PatternVersion types.NullableString `json:"Recurrence2PatternVersion"`
	// RecurrenceActivityID ...
	//
	// Read-only. Not required on create. Contains the ID of the main record of the Salesforce Classic recurring
	// event. Subsequent occurrences have the same value in this field.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	RecurrenceActivityID types.NullableString `json:"RecurrenceActivityId"`
	// RecurrenceDayOfMonth ...
	//
	// Indicates the day of the month on which the event repeats.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	RecurrenceDayOfMonth types.NullableInt `json:"RecurrenceDayOfMonth"`
	// RecurrenceDayOfWeekMask ...
	//
	// Indicates the day or days of the week on which the Salesforce Classic recurring event repeats. This field
	// contains a bitmask. The values are as follows: Sunday = 1 Monday = 2 Tuesday = 4 Wednesday = 8 Thursday = 16 Friday = 32
	// Saturday = 64 Multiple days are represented as the sum of their numerical values. For example, Tuesday and Thursday =
	// 4 + 16 = 20.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	RecurrenceDayOfWeekMask types.NullableInt `json:"RecurrenceDayOfWeekMask"`
	// RecurrenceEndDateOnly ...
	//
	// Indicates the last date on which the event repeats. For multiday Salesforce Classic recurring events,
	// this is the day on which the last occurrence starts. This field is a date field with a timestamp that is always set
	// to midnight in the Coordinated Universal Time (UTC) time zone. Don’t attempt to alter the timestamp to
	// account for time zone differences.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	RecurrenceEndDateOnly types.Date `json:"RecurrenceEndDateOnly"`
	// RecurrenceInstance ...
	//
	// Indicates the frequency of the Salesforce Classic event’s recurrence. For example, 2nd or
	// 3rd.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	RecurrenceInstance types.NullableString `json:"RecurrenceInstance"`
	// RecurrenceInterval ...
	//
	// Indicates the interval between Salesforce Classic recurring events.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	RecurrenceInterval types.NullableInt `json:"RecurrenceInterval"`
	// RecurrenceMonthOfYear ...
	//
	// Indicates the month in which the Salesforce Classic recurring event repeats.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	RecurrenceMonthOfYear types.NullableString `json:"RecurrenceMonthOfYear"`
	// RecurrenceStartDateTime ...
	//
	// Indicates the date and time when the Salesforce Classic recurring event begins. The value must precede the
	// RecurrenceEndDateOnly. The time portion of this field is always transferred in the Coordinated Universal Time (UTC) time zone.
	// Translate the time portion to or from a local time zone for the user or the application, as appropriate.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	RecurrenceStartDateTime types.Datetime `json:"RecurrenceStartDateTime"`
	// RecurrenceTimeZoneSidKey ...
	//
	// Indicates the time zone associated with a Salesforce Classic recurring event. For example,
	// “UTC-8:00” for Pacific Standard Time.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist,
	// Sort, Update
	RecurrenceTimeZoneSidKey types.NullableString `json:"RecurrenceTimeZoneSidKey"`
	// RecurrenceType ...
	//
	// Indicates how often the Salesforce Classic event repeats. For example, daily, weekly, or every nth month
	// (where “nth” is defined in RecurrenceInstance).
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	RecurrenceType types.NullableString `json:"RecurrenceType"`
	// ReminderDateTime ...
	//
	// Represents the time when the reminder is scheduled to fire, if IsReminderSet is set to true. If
	// IsReminderSet is set to false, then the user may have deselected the reminder checkbox in the Salesforce user interface,
	// or the reminder has already fired at the time indicated by the value.
	//
	// Properties:Create, Filter,
	// Nillable, Sort, Update
	ReminderDateTime types.Datetime `json:"ReminderDateTime"`
	// ServiceAppointmentID ...
	ServiceAppointmentID types.NullableString `json:"ServiceAppointmentId"`
	// ShowAs ...
	//
	// Indicates how this event appears when another user views the calendar: Busy, Out of Office, or Free. Label
	// is Show Time As.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Restricted
	// picklist, Sort, Update
	ShowAs types.NullableString `json:"ShowAs"`
	// StartDateTime ...
	//
	// Indicates the start date and time of the event. Available in versions 13.0 and later.If the Event
	// IsAllDayEvent flag is set to true (indicating that it is an all-day Event), then the event start date information is
	// contained in the StartDateTime field. The time portion of this field is always transferred in the Coordinated
	// Universal Time (UTC) time zone. Translate the time portion to or from a local time zone for the user or the application,
	// as appropriate. If the Event IsAllDayEvent flag is set to false (indicating that it is not an all-day event),
	// then the event start date information is contained in the StartDateTime field. The time portion is always
	// transferred in the Coordinated Universal Time (UTC) time zone. You need to translate the time portion to or from a local
	// time zone for the user or the application, as appropriate. If this field has a value, then ActivityDate and
	// ActivityDateTime must either be null or match the value of this field.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	StartDateTime types.Datetime `json:"StartDateTime"`
	// Subject ...
	//
	// The subject line of the event, such as Call, Email, or Meeting. Limit: 255 characters.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WhatID ...
	//
	// The WhatId represents nonhuman objects such as accounts, opportunities, campaigns, cases, or custom
	// objects. WhatIds are polymorphic. Polymorphic means a WhatId is equivalent to the ID of a related object. The label
	// is Related To ID.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID.If Shared Activities is enabled, the
	// value of this field is the ID of the related lead or primary contact. If you add, update, or remove the WhoId field,
	// you might encounter problems with triggers, workflows, and data validation rules that are associated with
	// the record. The label is Name ID. If the JunctionIdList field is used, all WhoIds are included in the
	// relationship list. Beginning in API version 37.0, if the contact or lead ID in the WhoId field is not in the EventWhoIds
	// list, no error occurs and the ID is added to the EventWhoIds as the primary WhoId. If WhoId is set to null, an
	// arbitrary ID from the existing EventWhoIds list is promoted to the primary position.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	WhoID types.NullableString `json:"WhoId"`
}

// EventRelation ...
type EventRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EventID ...
	EventID string `json:"EventId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RelationID ...
	RelationID string `json:"RelationId"`
	// RespondedDate ...
	RespondedDate types.Datetime `json:"RespondedDate"`
	// Response ...
	Response types.NullableString `json:"Response"`
	// Status ...
	Status types.NullableString `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// Group ...
//
// A set of User records.
type Group struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DeveloperName ...
	//
	// The name of the object in the API. This name can contain only underscores and alphanumeric characters, and
	// must be unique in your org. It must begin with a letter, not include spaces, not end with an underscore, and not
	// contain two consecutive underscores. In managed packages, this field prevents naming conflicts on package
	// installations. With this field, a developer can change the object’s name in a managed package and the changes are
	// reflected in a subscriber’s organization. This name is unique by group type and corresponds to Group Name in the
	// user interface. This field is available in API version 24.0 and later. Note When creating large sets of data,
	// always specify a unique DeveloperName for each record. If no DeveloperName is specified, performance may slow
	// while Salesforce generates one for each record.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	DeveloperName types.NullableString `json:"DeveloperName"`
	// DoesIncludeBosses ...
	//
	// Indicates whether the managers have access (true) or do not have access (false) to records shared with
	// members of the group. This field is only available for public groups. This field is available in API version 18.0 and
	// later.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	DoesIncludeBosses bool `json:"DoesIncludeBosses"`
	// DoesSendEmailToMembers ...
	//
	// Indicates whether the email is sent (true) or not sent (false) to the group members. The email is sent to
	// queue members as well.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	DoesSendEmailToMembers bool `json:"DoesSendEmailToMembers"`
	// Email ...
	//
	// Email address for a group of type Case. Applies only for a case queue.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Email types.NullableString `json:"Email"`
	// ID ...
	ID string `json:"Id"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Name ...
	//
	// Required. Name of the group. Corresponds to Label on the user interface.
	//
	// Properties:Create,
	// Filter, Group, idLookup, Sort, Update
	Name string `json:"Name"`
	// OwnerID ...
	//
	// ID of the user who owns the group.
	//
	// Properties:Filter, Group, Sort
	OwnerID string `json:"OwnerId"`
	// RelatedID ...
	//
	// Represents the ID of the associated groups. For groups of type “Role,” the ID of the associated
	// UserRole. The RelatedId field is polymorphic.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelatedID types.NullableString `json:"RelatedId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Type ...
	//
	// Required. Type of the group. One of the following values: AllCustomerPortalPublic group that includes
	// all Customer Portal or Customer Community Plus users. This type is only available when a Customer Portal or a
	// Customer Site is enabled for your org. ChannelProgramGroupPublic group for partners in a channel program.
	// CollaborationGroupChatter group. ManagerPublic group that includes a user’s direct and indirect managers. This group is
	// read-only. ManagerAndSubordinatesInternalPublic group that includes a user and the user’s direct and indirect
	// reports. This group is read-only. OrganizationPublic group that includes all the User records in the
	// organization. This group is read-only. ParticipantCompliant Data Sharing group that includes internal users who have
	// the Use Compliant Data Sharing permission. A group can contain other participant groups only, or a group can
	// contain both internal users with the Use Compliant Data Sharing permission and other participant groups. This
	// value is only available when Compliant Data Sharing is enabled for your org. PRMOrganizationPublic group that
	// includes all the partners in an organization that has the partner site or portal feature enabled. QueuePublic group
	// that includes all the User records that are members of a queue. RegularStandard public group. When you create()
	// a group, its type must be Regular, unless a partner site or portal is enabled for the organization, in which
	// case the type can be Regular or PRMOrganization. RolePublic group that includes all the User records in a
	// particular UserRole. RoleAndSubordinatesPublic group that includes all the User records in a particular UserRole
	// and all the User records in any subordinate UserRole. RoleAndSubordinatesInternalPublic group that
	// includes all the User records in an internal UserRole, excluding customer and partner roles, and all the User
	// records in any subordinate internal UserRole. TerritoryPublic group that includes all the User records in an
	// organization that has the territory feature enabled. TerritoryAndSubordinatesPublic group that includes all the
	// User records in a particular UserRole and all the User records in any subordinateUserRole in an organization
	// that has the territory feature enabled. Only Personal, Regular, and Queue can be used when creating a group. The
	// other values are reserved.
	//
	// Properties:Create, Filter, Group, Restricted picklist, Sort
	Type string `json:"Type"`
}

// GroupUser ...
type GroupUser struct {
	// Group ...
	Group
	// User ...
	User
}

// Individual ...
//
// Represents a customer’s data privacy and protection preferences. Data privacy records based on the
// Individual object store your customers’ preferences. Data privacy records are associated with related leads,
// contacts, person accounts, and users. This object is available in API version 42.0 and later.
type Individual struct {
	// BirthDate ...
	//
	// The customer’s birthdate.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BirthDate types.Date `json:"BirthDate"`
	// CanStorePiiElsewhere ...
	//
	// Indication that you can store the customer’s personally identifiable information (PII) outside of
	// their legislation area. For example, you could store an EU citizen’s PII data in the US.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	CanStorePiiElsewhere bool `json:"CanStorePiiElsewhere"`
	// ChildrenCount ...
	//
	// The number of children the customer has.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	ChildrenCount types.NullableInt `json:"ChildrenCount"`
	// ConsumerCreditScore ...
	//
	// The person's credit score (for example, 740).
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	ConsumerCreditScore types.NullableInt `json:"ConsumerCreditScore"`
	// ConsumerCreditScoreProviderName ...
	//
	// The name of the company that provided the credit score.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	ConsumerCreditScoreProviderName types.NullableString `json:"ConsumerCreditScoreProviderName"`
	// ConvictionsCount ...
	//
	// The number of convictions for the customer.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	ConvictionsCount types.NullableInt `json:"ConvictionsCount"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DeathDate ...
	//
	// The customer’s death date.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	DeathDate types.Date `json:"DeathDate"`
	// FirstName ...
	//
	// The customer’s first name. Maximum size is 40 characters.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	FirstName types.NullableString `json:"FirstName"`
	// HasOptedOutGeoTracking ...
	//
	// Preference to not track geolocation on mobile devices.
	//
	// Properties:Create, Defaulted on
	// create, Filter, Group, Sort, Update
	HasOptedOutGeoTracking bool `json:"HasOptedOutGeoTracking"`
	// HasOptedOutProcessing ...
	//
	// Preference to not process personal data, which can include collecting, storing, and sharing personal
	// data.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	HasOptedOutProcessing bool `json:"HasOptedOutProcessing"`
	// HasOptedOutProfiling ...
	//
	// Preference to not process data for predicting personal attributes, such as interests, behavior, and
	// location.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	HasOptedOutProfiling bool `json:"HasOptedOutProfiling"`
	// HasOptedOutSolicit ...
	//
	// Preference to not solicit products and services.
	//
	// Properties:Create, Defaulted on create,
	// Filter, Group, Sort, Update
	HasOptedOutSolicit bool `json:"HasOptedOutSolicit"`
	// HasOptedOutTracking ...
	//
	// Preference to not track customer web activity and whether the customer opens email sent through
	// Salesforce.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	HasOptedOutTracking bool `json:"HasOptedOutTracking"`
	// ID ...
	ID string `json:"Id"`
	// IndividualsAge ...
	//
	// Indicates whether the customer is considered to be a minor.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	IndividualsAge types.NullableString `json:"IndividualsAge"`
	// InfluencerRating ...
	//
	// A measure of the person's influence, irrespective of how we do business with them.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	InfluencerRating types.NullableInt `json:"InfluencerRating"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsHomeOwner ...
	//
	// Indicates whether the customer owns a home.
	//
	// Properties:Create, Defaulted on create, Filter,
	// Group, Sort, Update
	IsHomeOwner bool `json:"IsHomeOwner"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	//
	// Required. The customer’s last name. Maximum size is 80 characters.
	//
	// Properties:Create,
	// Filter, Group, Sort, Update
	LastName string `json:"LastName"`
	// LastViewedDate ...
	//
	// The timestamp for when the current user last viewed this record.
	//
	// Properties:Filter, Nillable,
	// Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// MasterRecordID ...
	//
	// If this object was deleted as the result of a merge, this field contains the ID of the record that was kept. If
	// this object was deleted for any other reason, or hasn’t been deleted, the value is null.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	MasterRecordID types.NullableString `json:"MasterRecordId"`
	// MilitaryService ...
	//
	// Indicates whether the customer has served in the military.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	MilitaryService types.NullableString `json:"MilitaryService"`
	// Name ...
	//
	// Concatenation of FirstName and LastName. Maximum size is 203 characters, including
	// whitespaces.
	//
	// Properties:Filter, Group, Sort
	Name string `json:"Name"`
	// Occupation ...
	//
	// The customer’s occupation. Maximum size is 150 characters.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Occupation types.NullableString `json:"Occupation"`
	// OwnerID ...
	//
	// The ID of the owner of the account associated with this customer.
	//
	// Properties:Create, Defaulted
	// on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Salutation ...
	//
	// The title for addressing the customer, such as Dr. or Mrs.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Salutation types.NullableString `json:"Salutation"`
	// SendIndividualData ...
	//
	// Preference to export personal data for delivery to the customer.
	//
	// Properties:Create, Defaulted
	// on create, Filter, Group, Sort, Update
	SendIndividualData bool `json:"SendIndividualData"`
	// ShouldForget ...
	//
	// Preference to delete records and personal data related to this customer.
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Sort, Update
	ShouldForget bool `json:"ShouldForget"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Website ...
	//
	// The URL for the customer’s website.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	Website types.NullableString `json:"Website"`
}

// LeadCleanInfo ...
//
// Stores the metadata Data.com Clean uses to determine a lead record’s clean status. Helps you automate
// the cleaning or related processing of lead records.
type LeadCleanInfo struct {
	// Address ...
	//
	// The compound form of the address. Read-only. See Address Compound Fields for details on compound address
	// fields.
	//
	// Properties:Filter, Nillable
	Address types.Address `json:"Address"`
	// AnnualRevenue ...
	//
	// Estimated annual revenue of the lead.
	//
	// Properties:Filter, Nillable, Sort
	AnnualRevenue types.NullableFloat64 `json:"AnnualRevenue"`
	// City ...
	//
	// Details for the billing address of the lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	City types.NullableString `json:"City"`
	// CleanedByJob ...
	//
	// Indicates whether the lead record was cleaned by a Data.com Clean job (true) or not (false).
	//
	//
	// Properties:Filter
	CleanedByJob bool `json:"CleanedByJob"`
	// CleanedByUser ...
	//
	// Indicates whether the lead record was cleaned by a Salesforce user (true) or not (false).
	//
	//
	// Properties:Filter
	CleanedByUser bool `json:"CleanedByUser"`
	// CompanyDunsNumber ...
	//
	// The Data Universal Numbering System (D-U-N-S) number is a unique, nine-digit number assigned to every
	// business location in the Dun & Bradstreet database that has a unique, separate, and distinct operation. D-U-N-S
	// numbers are used by industries and organizations around the world as a global standard for business
	// identification and tracking.
	//
	// Properties:Filter, Group, Nillable, Sort
	CompanyDunsNumber types.NullableString `json:"CompanyDunsNumber"`
	// CompanyName ...
	//
	// The name of the company.
	//
	// Properties:Filter, Group, Nillable, Sort
	CompanyName types.NullableString `json:"CompanyName"`
	// ContactStatusDataDotCom ...
	//
	// The status of the contact associated with the lead per Data.com. Values are: Contact is Active per
	// Data.com, Phone is Wrong per Data.com , Email is Wrong per Data.com, Phone and Email are Wrong per Data.com, Contact
	// Not at Company per Data.com, Contact is Inactive per Data.com, Company this contact belongs to is out of
	// business per Data.com, Company this contact belongs to never existed per Data.com or Email address is invalid per
	// Data.com.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContactStatusDataDotCom types.NullableString `json:"ContactStatusDataDotCom"`
	// Country ...
	//
	// Details for the billing address of the lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	Country types.NullableString `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DandBCompanyDunsNumber ...
	//
	// The D-U-N-S Number on the D&B Company record (if any) that is linked to the lead.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	DandBCompanyDunsNumber types.NullableString `json:"DandBCompanyDunsNumber"`
	// DataDotComCompanyID ...
	//
	// The ID Data.com maintains for the company associated with the lead.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	DataDotComCompanyID types.NullableString `json:"DataDotComCompanyId"`
	// DataDotComID ...
	//
	// The ID Data.com maintains for the contact associated with the lead.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	DataDotComID types.NullableString `json:"DataDotComId"`
	// Email ...
	//
	// The lead’s email address.
	//
	// Properties:Filter, Group, Nillable, Sort
	Email types.NullableString `json:"Email"`
	// FirstName ...
	//
	// The lead’s first name.
	//
	// Properties:Filter, Group, Nillable, Sort
	FirstName types.NullableString `json:"FirstName"`
	// GeocodeAccuracy ...
	GeocodeAccuracy types.NullableString `json:"GeocodeAccuracy"`
	// ID ...
	ID string `json:"Id"`
	// Industry ...
	//
	// The industry the lead belongs to.
	//
	// Properties:Filter, Group, Nillable, Sort
	Industry types.NullableString `json:"Industry"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsDifferentAnnualRevenue ...
	//
	// Indicates whether the lead’s AnnualRevenue field value is different from the corresponding value on
	// its matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentAnnualRevenue bool `json:"IsDifferentAnnualRevenue"`
	// IsDifferentCity ...
	//
	// Indicates whether the lead’s City field value is different from the corresponding value on its matched
	// Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentCity bool `json:"IsDifferentCity"`
	// IsDifferentCompanyDunsNumber ...
	//
	// Indicates whether the lead’s Company D-U-N-S Number field value is different from the corresponding
	// value on its matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentCompanyDunsNumber bool `json:"IsDifferentCompanyDunsNumber"`
	// IsDifferentCompanyName ...
	//
	// Indicates whether the lead’s Company Name field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentCompanyName bool `json:"IsDifferentCompanyName"`
	// IsDifferentCountry ...
	//
	// Indicates whether the lead’s Country field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentCountry bool `json:"IsDifferentCountry"`
	// IsDifferentCountryCode ...
	//
	// Indicates whether the account’s Country Code field value is different from the corresponding value on
	// its matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentCountryCode bool `json:"IsDifferentCountryCode"`
	// IsDifferentDandBCompanyDunsNumber ...
	//
	// Indicates whether the lead’s D&B Company D-U-N-S Number field value is different from the
	// corresponding value on its matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentDandBCompanyDunsNumber bool `json:"IsDifferentDandBCompanyDunsNumber"`
	// IsDifferentEmail ...
	//
	// Indicates whether the lead’s Email field value is different from the corresponding value on its matched
	// Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentEmail bool `json:"IsDifferentEmail"`
	// IsDifferentFirstName ...
	//
	// Indicates whether the lead’s First Name field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentFirstName bool `json:"IsDifferentFirstName"`
	// IsDifferentIndustry ...
	//
	// Indicates whether the lead’s Industry field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentIndustry bool `json:"IsDifferentIndustry"`
	// IsDifferentLastName ...
	//
	// Indicates whether the lead’s Last Name field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentLastName bool `json:"IsDifferentLastName"`
	// IsDifferentNumberOfEmployees ...
	//
	// Indicates whether the lead’s No. of Employees field value is different from the corresponding value on
	// its matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentNumberOfEmployees bool `json:"IsDifferentNumberOfEmployees"`
	// IsDifferentPhone ...
	//
	// Indicates whether the lead’s Phone field value is different from the corresponding value on its matched
	// Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentPhone bool `json:"IsDifferentPhone"`
	// IsDifferentPostalCode ...
	//
	// Indicates whether the lead’s Postal Code field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentPostalCode bool `json:"IsDifferentPostalCode"`
	// IsDifferentState ...
	//
	// Indicates whether the lead’s State field value is different from the corresponding value on its matched
	// Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentState bool `json:"IsDifferentState"`
	// IsDifferentStateCode ...
	//
	// Indicates whether the account’s State Code field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentStateCode bool `json:"IsDifferentStateCode"`
	// IsDifferentStreet ...
	//
	// Indicates whether the lead’s Street field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentStreet bool `json:"IsDifferentStreet"`
	// IsDifferentTitle ...
	//
	// Indicates whether the lead’s Title field value is different from the corresponding value on its matched
	// Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentTitle bool `json:"IsDifferentTitle"`
	// IsFlaggedWrongAddress ...
	//
	// Indicates whether the lead’s Address field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongAddress bool `json:"IsFlaggedWrongAddress"`
	// IsFlaggedWrongAnnualRevenue ...
	//
	// Indicates whether the lead’s Annual Revenue field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongAnnualRevenue bool `json:"IsFlaggedWrongAnnualRevenue"`
	// IsFlaggedWrongCompanyDunsNumber ...
	//
	// Indicates whether the lead’s Company D-U-N-S Number field value is flagged as wrong to Data.com (true)
	// or not (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongCompanyDunsNumber bool `json:"IsFlaggedWrongCompanyDunsNumber"`
	// IsFlaggedWrongCompanyName ...
	//
	// Indicates whether the lead’s Company Name field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongCompanyName bool `json:"IsFlaggedWrongCompanyName"`
	// IsFlaggedWrongEmail ...
	//
	// Indicates whether the lead’s Email field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongEmail bool `json:"IsFlaggedWrongEmail"`
	// IsFlaggedWrongIndustry ...
	//
	// Indicates whether the lead’s Industry field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongIndustry bool `json:"IsFlaggedWrongIndustry"`
	// IsFlaggedWrongName ...
	//
	// Indicates whether the lead’s Name field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongName bool `json:"IsFlaggedWrongName"`
	// IsFlaggedWrongNumberOfEmployees ...
	//
	// Indicates whether the lead’s No. of Employees field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongNumberOfEmployees bool `json:"IsFlaggedWrongNumberOfEmployees"`
	// IsFlaggedWrongPhone ...
	//
	// Indicates whether the lead’s Phone field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongPhone bool `json:"IsFlaggedWrongPhone"`
	// IsFlaggedWrongTitle ...
	//
	// Indicates whether the lead’s Title field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongTitle bool `json:"IsFlaggedWrongTitle"`
	// IsInactive ...
	//
	// Indicates whether the lead has been reported to Data.com as Inactive (true) or not (false).
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsInactive bool `json:"IsInactive"`
	// IsReviewedAddress ...
	//
	// Indicates whether the lead’s Address field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedAddress bool `json:"IsReviewedAddress"`
	// IsReviewedAnnualRevenue ...
	//
	// Indicates whether the lead’s Annual Revenue field value is in a Reviewed state (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsReviewedAnnualRevenue bool `json:"IsReviewedAnnualRevenue"`
	// IsReviewedCompanyDunsNumber ...
	//
	// Indicates whether the lead’s Company D-U-N-S Number field value is in a Reviewed state (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsReviewedCompanyDunsNumber bool `json:"IsReviewedCompanyDunsNumber"`
	// IsReviewedCompanyName ...
	//
	// Indicates whether the lead’s Company Name field value is in a Reviewed state (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsReviewedCompanyName bool `json:"IsReviewedCompanyName"`
	// IsReviewedDandBCompanyDunsNumber ...
	//
	// Indicates whether the lead’s D&B Company D-U-N-S Number field value is in a Reviewed state (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsReviewedDandBCompanyDunsNumber bool `json:"IsReviewedDandBCompanyDunsNumber"`
	// IsReviewedEmail ...
	//
	// Indicates whether the lead’s Email field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedEmail bool `json:"IsReviewedEmail"`
	// IsReviewedIndustry ...
	//
	// Indicates whether the lead’s Industry field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedIndustry bool `json:"IsReviewedIndustry"`
	// IsReviewedName ...
	//
	// Indicates whether the lead’s Name field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedName bool `json:"IsReviewedName"`
	// IsReviewedNumberOfEmployees ...
	//
	// Indicates whether the lead’s No. of Employees field value is in a Reviewed state (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsReviewedNumberOfEmployees bool `json:"IsReviewedNumberOfEmployees"`
	// IsReviewedPhone ...
	//
	// Indicates whether the lead’s Phone field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedPhone bool `json:"IsReviewedPhone"`
	// IsReviewedTitle ...
	//
	// Indicates whether the lead’s Title field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedTitle bool `json:"IsReviewedTitle"`
	// LastMatchedDate ...
	//
	// The date the lead record was last matched and linked to a Data.com record.
	//
	// Properties:Filter,
	// Sort
	LastMatchedDate types.Datetime `json:"LastMatchedDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	//
	// The lead’s last name.
	//
	// Properties:Filter, Group, Nillable, Sort
	LastName types.NullableString `json:"LastName"`
	// LastStatusChangedByID ...
	//
	// The ID of who or what last changed the record’s Clean Status field value: a Salesforce user or a Clean
	// job.
	//
	// Properties:Filter, Group, Nillable, Sort
	LastStatusChangedByID types.NullableString `json:"LastStatusChangedById"`
	// LastStatusChangedDate ...
	//
	// The date on which the record’s Clean Status field value was last changed.
	//
	// Properties:Filter,
	// Nillable, Sort
	LastStatusChangedDate types.Datetime `json:"LastStatusChangedDate"`
	// Latitude ...
	//
	// Used with Longitude to specify the precise geolocation of a billing address. Data not currently
	// provided.
	//
	// Properties:Filter, Nillable, Sort
	Latitude types.NullableFloat64 `json:"Latitude"`
	// LeadID ...
	//
	// The unique, system-generated ID assigned when the lead record was created.
	//
	// Properties:Filter,
	// Group, Sort
	LeadID string `json:"LeadId"`
	// Longitude ...
	//
	// Used with Latitude to specify the precise geolocation of a billing address. Data not currently
	// provided.
	//
	// Properties:Filter, Nillable, Sort
	Longitude types.NullableFloat64 `json:"Longitude"`
	// Name ...
	//
	// Field label is Lead Clean Info Name. The name of the lead. Maximum size is 255 characters.
	//
	//
	// Properties:Filter, Group, Sort, Update
	Name string `json:"Name"`
	// NumberOfEmployees ...
	//
	// The number of employees working at the lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	NumberOfEmployees types.NullableInt `json:"NumberOfEmployees"`
	// Phone ...
	//
	// The phone number for the lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	//
	// Details for the billing address of the lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	PostalCode types.NullableString `json:"PostalCode"`
	// State ...
	//
	// Details for the billing address of the lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	State types.NullableString `json:"State"`
	// Street ...
	//
	// Details for the billing address of the lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	Street types.NullableString `json:"Street"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	//
	// The lead’s title.
	//
	// Properties:Filter, Group, Nillable, Sort
	Title types.NullableString `json:"Title"`
}

// LeadFeed ...
type LeadFeed struct {
	// BestCommentID ...
	BestCommentID types.NullableString `json:"BestCommentId"`
	// Body ...
	Body types.NullableString `json:"Body"`
	// CommentCount ...
	CommentCount int `json:"CommentCount"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// InsertedByID ...
	InsertedByID types.NullableString `json:"InsertedById"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsRichText ...
	IsRichText bool `json:"IsRichText"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LikeCount ...
	LikeCount int `json:"LikeCount"`
	// LinkURL ...
	LinkURL types.NullableString `json:"LinkUrl"`
	// ParentID ...
	ParentID string `json:"ParentId"`
	// RelatedRecordID ...
	RelatedRecordID types.NullableString `json:"RelatedRecordId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	Title types.NullableString `json:"Title"`
	// Type ...
	Type types.NullableString `json:"Type"`
}

// LeadHistory ...
type LeadHistory struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DataType ...
	DataType types.NullableString `json:"DataType"`
	// Field ...
	Field string `json:"Field"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LeadID ...
	LeadID string `json:"LeadId"`
	// NewValue ...
	NewValue json.RawMessage `json:"NewValue"`
	// OldValue ...
	OldValue json.RawMessage `json:"OldValue"`
}

// LeadShare ...
//
// Represents a sharing entry on a Lead.
type LeadShare struct {
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LeadAccessLevel ...
	//
	// Level of access that the User or Group has to the Lead. The possible values are: Read Edit All This value is not
	// valid when creating or updating these records.
	// This field must be set to an access level that is higher than
	// the organization’s default access level for leads.

	//
	// Properties:Create, Filter, Group,
	// Restricted picklist, Sort, Update
	LeadAccessLevel string `json:"LeadAccessLevel"`
	// LeadID ...
	//
	// ID of the Lead associated with this sharing entry. This field can’t be updated.
	//
	//
	// Properties:Create, Filter, Group, Sort
	LeadID string `json:"LeadId"`
	// RowCause ...
	//
	// Reason that this sharing entry exists. You can only write a value in this field when its value is either
	// omitted or set to Manual (default). You can create a value for this field in API versions 32.0 and later with the
	// correct organization-wide sharing settings.
	// Values include: ManualThe User or Group has access because a
	// user with “All” access manually shared the Lead with them. OwnerThe User is the owner of the Lead. RuleThe
	// User or Group has access via a Lead sharing rule. GuestRuleThe User or Group has access via a Lead guest user
	// sharing rule. LpuImplicitThe User has access to records owned by high-volume Experience Cloud site users via a
	// share group. ARImplicitThe User, who belongs to a partner or customer account, has access to the Lead via an
	// account relationship data sharing rule.

	//
	// Properties:Create, Filter, Group, Nillable, Restricted
	// picklist, Sort
	RowCause types.NullableString `json:"RowCause"`
	// UserOrGroupID ...
	//
	// ID of the User or Group that has been given access to the Lead. This field can’t be updated.
	//
	//
	// Properties:Create, Filter, Group, Sort
	UserOrGroupID string `json:"UserOrGroupId"`
}

// ListEmailIndividualRecipient ...
type ListEmailIndividualRecipient struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// ListEmailID ...
	ListEmailID string `json:"ListEmailId"`
	// Name ...
	Name string `json:"Name"`
	// RecipientID ...
	RecipientID string `json:"RecipientId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// Note ...
//
// Represents a note, which is text associated with a custom object or a standard object, such as a Contact,
// Contract, or Opportunity.
type Note struct {
	// Body ...
	//
	// Body of the note. Limited to 32 KB.
	//
	// Properties:Create, Nillable, Update
	Body types.NullableString `json:"Body"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsPrivate ...
	//
	// If true, only the note owner or a user with the “Modify All Data” permission can view the note or query it
	// via the API. Note that if a user who does not have the “Modify All Data” permission sets this field to true on a
	// note that they do not own, then they can no longer query, delete, or update the note. Label is Private.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsPrivate bool `json:"IsPrivate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// OwnerID ...
	//
	// ID of the user who owns the note.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort,
	// Update
	OwnerID string `json:"OwnerId"`
	// ParentID ...
	//
	// Required. ID of the object associated with the note.
	//
	// Properties:Create, Filter, Group, Sort
	ParentID string `json:"ParentId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	//
	// Title of the note.
	//
	// Properties:Create, Filter, Group, idLookup, Sort, Update
	Title string `json:"Title"`
}

// NoteAndAttachment ...
//
// This read-only object contains all notes and attachments associated with an object.
type NoteAndAttachment struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsNote ...
	//
	// Indicates whether the object contains a note (true) or an attachment (false).
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsNote bool `json:"IsNote"`
	// IsPrivate ...
	//
	// If true, only the note owner or a user with the “Modify All Data” permission can view the note or query it
	// via the API. Note that if a regular user who does not have “Modify All Data” permission sets this field to
	// true on a note that they do not own, then they can no longer query, delete, or update that note. Label is
	// Private.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsPrivate bool `json:"IsPrivate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// OwnerID ...
	//
	// ID of the user who owns the note and attachment.
	//
	// Properties:Filter, Group, Sort
	OwnerID string `json:"OwnerId"`
	// ParentID ...
	//
	// ID of the parent object.
	//
	// Properties:Filter, Group, Sort
	ParentID string `json:"ParentId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	//
	// Title of the note.
	//
	// Properties:Filter, Nillable, Group, Sort
	Title types.NullableString `json:"Title"`
}

// OpenActivity ...
//
// This read-only object is displayed in a related list of open activitiesfuture events and open
// tasksrelated to an object. It includes activities for all contacts related to the object. OpenActivity fields for phone
// calls are only available if your organization uses Salesforce CRM Call Center.
type OpenActivity struct {
	// AccountID ...
	//
	// Indicates the ID of the related account, which is determined as follows: The account associated with the
	// WhatId, if it exists; or The account associated with the WhoId, if it exists; otherwise null
	// For information on
	// IDs, see ID Field Type.

	//
	// Properties:Filter, Group, Nillable, Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActivityDate ...
	//
	// Indicates one of the following: The due date of a task The date of an event if IsAllDayEvent is set to true This
	// field has a time stamp that is always set to midnight in the Universal Time Coordinated (UTC) time zone. The time
	// stamp doesn’t represent the time of the activity; don’t attempt to alter it to accommodate time zone
	// differences. Label is Date.
	//
	// Properties:Filter, Group, Nillable, Sort
	ActivityDate types.Date `json:"ActivityDate"`
	// ActivityDateTime ...
	//
	// Contains the event’s due date if the IsAllDayEvent flag is set to false. The time portion of this field is
	// always transferred in the Coordinated Universal Time (UTC) time zone. Translate the time portion to or from a
	// local time zone for the user or the application, as appropriate. Label is Due Date Time.The value for this field
	// and StartDateTime must match, or one of them must be null.
	//
	// Properties:Aggregate, Filter, Nillable,
	// Sort
	ActivityDateTime types.Datetime `json:"ActivityDateTime"`
	// ActivitySubtype ...
	//
	// Provides standard subtypes to facilitate creating and searching for specific activity subtypes. This
	// field isn’t updateable. ActivitySubtype values: Task Email Call Event List Email
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ActivitySubtype types.NullableString `json:"ActivitySubtype"`
	// ActivityType ...
	//
	// Represents one of the following values: Call, Email, Meeting, or Other. Label is Type. These are default
	// values, and can be changed.
	//
	// Properties:Filter, Group, Nillable, Sort
	ActivityType types.NullableString `json:"ActivityType"`
	// AlternateDetailID ...
	//
	// The ID of a record the activity is related to which contains more details about the activity. For example, an
	// activity can be related to an EmailMessage record.
	//
	// Properties:Filter, Group, Nillable, Sort
	AlternateDetailID types.NullableString `json:"AlternateDetailId"`
	// CallDisposition ...
	//
	// Represents the result of a given call, for example, “we'll call back,” or “call unsuccessful.”
	// Limit is 255 characters.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallDisposition types.NullableString `json:"CallDisposition"`
	// CallDurationInSeconds ...
	//
	// Duration of the call in seconds.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallDurationInSeconds types.NullableInt `json:"CallDurationInSeconds"`
	// CallObject ...
	//
	// Name of a call center. Limit is 255 characters.
	//
	// Properties:Filter, Group,Nillable, Sort
	CallObject types.NullableString `json:"CallObject"`
	// CallType ...
	//
	// The type of call being answered: Inbound, Internal, or Outbound.
	//
	// Properties:Filter, Group,
	// Nillable, Restricted picklist, Sort
	CallType types.NullableString `json:"CallType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Contains a description of the event or task. Limit is 32 KB.
	//
	// Properties:Nillable
	Description types.NullableString `json:"Description"`
	// DurationInMinutes ...
	//
	// Indicates the duration of the event or task.
	//
	// Properties:Filter, Group, Nillable, Sort
	DurationInMinutes types.NullableInt `json:"DurationInMinutes"`
	// EndDateTime ...
	//
	// Indicates the end date and time of the event or task. Available in versions 27.0 and later. This field is
	// optional, depending on the following: If IsAllDayEvent is true, you can supply a value for either DurationInMinutes
	// or EndDateTime. Supplying values in both fields is allowed if the values add up to the same amount of time. If
	// both fields are null, the duration defaults to one day. If IsAllDayEvent is false, a value must be supplied for
	// either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if the values add up to the
	// same amount of time.
	//
	// Properties:Filter, Nillable, Sort
	EndDateTime types.Datetime `json:"EndDateTime"`
	// ID ...
	ID string `json:"Id"`
	// IsAllDayEvent ...
	//
	// If the value of this field is set to true, then the activity is an event spanning a full day, and the
	// ActivityDate defines the date of the event. If the value of this field is set to false, then the activity may be an event
	// spanning less than a full day, or it may be a task. Label is All-Day Event.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsAllDayEvent bool `json:"IsAllDayEvent"`
	// IsClosed ...
	//
	// Indicates whether a task is closed; value is always false). This field is set indirectly by setting Status
	// on the taskeach picklist value has a corresponding IsClosed value. Label is Closed.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	//
	// Indicates whether the activity has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsHighPriority ...
	//
	// Indicates a high-priority task. This field is derived from the Priority field.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsHighPriority bool `json:"IsHighPriority"`
	// IsReminderSet ...
	//
	// Indicates whether a reminder is set for an activity (true) or not (false).
	//
	// Properties:Defaulted
	// on create, Filter, Group, Sort
	IsReminderSet bool `json:"IsReminderSet"`
	// IsTask ...
	//
	// If the value of this field is set to true, then the activity is a task; if the value is set to false, then the
	// activity is an event. Label is Task.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsTask bool `json:"IsTask"`
	// IsVisibleInSelfService ...
	//
	// If the value of this field is set to true, then the activity can be viewed in the self-service portal. Label is
	// Visible in Self-Service.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsVisibleInSelfService bool `json:"IsVisibleInSelfService"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Location ...
	//
	// If the activity is an event, then this field represents the location of the event. If the activity is a task,
	// then the value is null.
	//
	// Properties:Filter, Group, Nillable, Sort
	Location types.NullableString `json:"Location"`
	// OwnerID ...
	//
	// Indicates the ID of the user or group who owns the activity.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	OwnerID types.NullableString `json:"OwnerId"`
	// Priority ...
	//
	// Indicates the priority of a task, such as high, normal, or low.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Nillable, Sort
	Priority types.NullableString `json:"Priority"`
	// ReminderDateTime ...
	//
	// Represents the time at which a reminder is scheduled to fire if IsReminderSet is set to true. If
	// IsReminderSet is set to false, then either the user has deselected the reminder checkbox in the user interface or the
	// reminder has already fired at the time indicated by the value.
	//
	// Properties:Filter, Nillable, Sort
	ReminderDateTime types.Datetime `json:"ReminderDateTime"`
	// StartDateTime ...
	StartDateTime types.Datetime `json:"StartDateTime"`
	// Status ...
	//
	// Indicates the current status of a task, such as in progress or complete. Each predefined status field sets a
	// value for IsClosed. To obtain picklist values, query TaskStatus.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Nillable, Sort
	Status types.NullableString `json:"Status"`
	// Subject ...
	//
	// Contains the subject of the task or event.
	//
	// Properties:Filter, Nillable, Sort
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WhatID ...
	//
	// The WhatId represents nonhuman objects such as accounts, opportunities, campaigns, cases, or custom
	// objects. WhatIds are polymorphic. Polymorphic means a WhatId is equivalent to the ID of a related object. The label
	// is Related To ID.
	//
	// Properties:Filter, Group, Nillable, Sort
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID. If Shared Activities is enabled, the
	// value of this field is the ID of the related lead or primary contact. If you add, update, or remove the WhoId field,
	// you might encounter problems with triggers, workflows, and data validation rules that are associated with
	// the record. The label is Name ID.
	//
	// Properties:Filter, Group, Nillable, Sort
	WhoID types.NullableString `json:"WhoId"`
}

// Opportunity ...
//
// Represents an opportunity, which is a sale or pending deal.
type Opportunity struct {
	// AccountID ...
	//
	// ID of the account associated with this opportunity.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	AccountID types.NullableString `json:"AccountId"`
	// Amount ...
	//
	// Estimated total sale amount. For opportunities with products, the amount is the sum of the related
	// products. Any attempt to update this field, if the record has products, will be ignored. The update call will not be
	// rejected, and other fields will be updated as specified, but the Amount will be unchanged.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Amount types.NullableFloat64 `json:"Amount"`
	// CampaignID ...
	//
	// ID of a related Campaign. This field is defined only for those organizations that have the campaign feature
	// Campaigns enabled. The User must have read access rights to the cross-referenced Campaign object in order to create
	// or update that campaign into this field on the opportunity.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	CampaignID types.NullableString `json:"CampaignId"`
	// CloseDate ...
	//
	// Required. Date when the opportunity is expected to close.
	//
	// Properties:Create, Filter, Group,
	// Sort, Update
	CloseDate types.Date `json:"CloseDate"`
	// ContactID ...
	//
	// ID of the contact associated with this opportunity, set as the primary contact. Read-only field that is
	// derived from the opportunity contact role, which is created at the same time the opportunity is created. This field
	// can only be populated when it’s created, and can’t be updated. To update the value in this field, change the
	// IsPrimary flag on the OpportunityContactRole associated with this opportunity. Available in API version 46.0 and
	// later.
	//
	// Properties:Create, Filter, Group, Nillable, Sort
	ContactID types.NullableString `json:"ContactId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// CurrentGenerators__c ...
	CurrentGenerators__c types.NullableString `json:"CurrentGenerators__c"`
	// DeliveryInstallationStatus__c ...
	DeliveryInstallationStatus__c types.NullableString `json:"DeliveryInstallationStatus__c"`
	// Description ...
	//
	// Text description of the opportunity. Limit: 32,000 characters.
	//
	// Properties:Create, Nillable,
	// Update
	Description types.NullableString `json:"Description"`
	// ExpectedRevenue ...
	//
	// Read-only field that is equal to the product of the opportunity Amount field and the Probability. You
	// can’t directly set this field, but you can indirectly set it by setting the Amount or Probability
	// fields.
	//
	// Properties:Filter, Nillable, Sort
	ExpectedRevenue types.NullableFloat64 `json:"ExpectedRevenue"`
	// Fiscal ...
	//
	// If fiscal years are not enabled, the name of the fiscal quarter or period in which the opportunity CloseDate
	// falls. Value should be in YYY Q format, for example, '2006 1' for first quarter of 2006.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	Fiscal types.NullableString `json:"Fiscal"`
	// FiscalQuarter ...
	//
	// Represents the fiscal quarter. Valid values are 1, 2, 3, or 4.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	FiscalQuarter types.NullableInt `json:"FiscalQuarter"`
	// FiscalYear ...
	//
	// Represents the fiscal year, for example, 2006.
	//
	// Properties:Filter, Group, Nillable, Sort
	FiscalYear types.NullableInt `json:"FiscalYear"`
	// ForecastCategory ...
	//
	// Restricted picklist field. It is implied, but not directly controlled, by the StageName field. You can
	// override this field to a different value than is implied by the StageName value. The values of this field are fixed
	// enumerated values. The field labels are localized to the language of the user performing the operation, if localized
	// versions of those labels are available for that language in the user interface.In API version 12.0 and later, the
	// value of this field is automatically set based on the value of the ForecastCategoryName and can’t be updated
	// any other way. The field properties Create, Defaulted on create, Nillable, and Update are not available in
	// version 12.0.
	//
	// Properties:Filter, Group, Restricted picklist, Sort
	ForecastCategory string `json:"ForecastCategory"`
	// ForecastCategoryName ...
	//
	// Available in API version 12.0 and later. The name of the forecast category. It is implied, but not directly
	// controlled, by the StageName field. You can override this field to a different value than is implied by the StageName
	// value.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ForecastCategoryName types.NullableString `json:"ForecastCategoryName"`
	// HasOpenActivity ...
	//
	// Indicates whether an opportunity has an open event or task (true) or not (false). Available in API version
	// 35.0 and later.
	//
	// Properties:Defaulted on create, Group,
	HasOpenActivity bool `json:"HasOpenActivity"`
	// HasOpportunityLineItem ...
	//
	// Read-only field that indicates whether the opportunity has associated line items. A value of true means
	// that Opportunity line items have been created for the opportunity. An opportunity can have opportunity line
	// items only if the opportunity has a price book. The opportunity line items must correspond to PricebookEntry
	// objects that are listed in the opportunity Pricebook2. However, you can insert opportunity line items on an
	// opportunity that does not have an associated Pricebook2. For the first opportunity line item that you insert on an
	// opportunity without a Pricebook2, the API automatically sets the Pricebook2Id field, if the opportunity line item
	// corresponds to a PricebookEntry in an active Pricebook2 that has a CurrencyIsoCode field that matches the
	// CurrencyIsoCode field of the opportunity. If the Pricebook2 is not active or the CurrencyIsoCode fields do not match, then
	// the API returns an error. You can’t update the Pricebook2Id or PricebookId fields if opportunity line items
	// exist on the Opportunity. You must delete the line items before attempting to update the PricebookId
	// field.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	HasOpportunityLineItem bool `json:"HasOpportunityLineItem"`
	// HasOverdueTask ...
	//
	// Indicates whether an opportunity has an overdue task (true) or not (false). Available in API version 35.0
	// and later.
	//
	// Properties:Defaulted on create, Group,
	HasOverdueTask bool `json:"HasOverdueTask"`
	// ID ...
	ID string `json:"Id"`
	// IsClosed ...
	//
	// Directly controlled by StageName. You can query and filter on this field, but you can’t directly set it in
	// a create, upsert, or update request. It can only be set via StageName. Label is Closed.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsPrivate ...
	IsPrivate bool `json:"IsPrivate"`
	// IsWon ...
	//
	// Directly controlled by StageName. You can query and filter on this field, but you can’t directly set the
	// value. It can only be set via StageName. Label is Won.
	//
	// Properties:Defaulted on create, Filter, Group,
	// Sort
	IsWon bool `json:"IsWon"`
	// LastActivityDate ...
	//
	// Value is one of the following, whichever is the most recent: Due date of the most recent event logged against
	// the record. Due date of the most recently closed task associated with the record.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	LastActivityDate types.Date `json:"LastActivityDate"`
	// LastAmountChangedHistoryID ...
	//
	// ID of the OpportunityHistory record that contains information about when the opportunity Amount field
	// was last updated in Winter ’21 or later. Information includes the date and time of the change and the user who
	// made the change. Available in API version 50.0 and later.
	//
	// Properties:Filter, Group, Nillable, Sort
	LastAmountChangedHistoryID types.NullableString `json:"LastAmountChangedHistoryId"`
	// LastCloseDateChangedHistoryID ...
	//
	// ID of the OpportunityHistory record that contains information about when the opportunity Close Date
	// field was last updated in Winter ’21 or later. Information includes the date and time of the change and the user
	// who made the change. Available in API version 50.0 and later.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	LastCloseDateChangedHistoryID types.NullableString `json:"LastCloseDateChangedHistoryId"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp when the current user last accessed this record, a record related to this record, or a list
	// view.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp when the current user last viewed this record or list view. If this value is null, the user
	// might have only accessed this record or list view (LastReferencedDate) but not viewed it.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// LeadSource ...
	//
	// Source of this opportunity, such as Advertisement or Trade Show.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	LeadSource types.NullableString `json:"LeadSource"`
	// MainCompetitors__c ...
	MainCompetitors__c types.NullableString `json:"MainCompetitors__c"`
	// Name ...
	//
	// Required. A name for this opportunity. Limit: 120 characters.
	//
	// Properties:Create, Filter,
	// Group, idLookup, Sort, Update
	Name string `json:"Name"`
	// NextStep ...
	//
	// Description of next task in closing opportunity. Limit: 255 characters.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	NextStep types.NullableString `json:"NextStep"`
	// OrderNumber__c ...
	OrderNumber__c types.NullableString `json:"OrderNumber__c"`
	// OwnerID ...
	//
	// ID of the User who has been assigned to work this opportunity.If you update this field, the previous owner's
	// access becomes Read Only or the access specified in your organization-wide default for opportunities,
	// whichever is greater. If you have set up opportunity teams in your organization, updating this field has different
	// consequences depending on your version of the API: For API version 12.0 and later, sharing records are kept, as they are
	// for all objects. For API version before 12.0, sharing records are deleted. For API version 16.0 and later,
	// users must have the “Transfer Record” permission in order to update (transfer) account ownership using
	// this field.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Pricebook2ID ...
	//
	// ID of a related Pricebook2 object. The Pricebook2Id field indicates which Pricebook2 applies to this
	// opportunity. The Pricebook2Id field is defined only for those organizations that have products enabled as a feature.
	// You can specify values for only one field (Pricebook2Id or PricebookId)not both fields. For this reason, both
	// fields are declared nillable.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable,
	// Sort, Update
	Pricebook2ID types.NullableString `json:"Pricebook2Id"`
	// Probability ...
	//
	// Percentage of estimated confidence in closing the opportunity. It is implied, but not directly
	// controlled, by the StageName field. You can override this field to a different value than what is implied by the
	// StageName. Note If you're changing the Probability field through the API using a partner WSDL call, or an Apex before
	// trigger, and the value may have several decimal places, we recommend rounding the value to a whole number. For
	// example, the following Apex in a before trigger uses the round method to change the field value: o.probability =
	// o.probability.round();
	//
	// Properties:Create, Defaulted on create, Filter, Nillable, Sort, Update
	Probability types.NullableFloat64 `json:"Probability"`
	// StageName ...
	//
	// Required. Current stage of this record. The StageName field controls several other fields on an
	// opportunity. Each of the fields can be directly set or implied by changing the StageName field. In addition, the
	// StageName field is a picklist, so it has additional members in the returned describeSObjectResult to indicate how it
	// affects the other fields. To obtain the stage name values in the picklist, query the OpportunityStage object. If
	// the StageName is updated, then the ForecastCategoryName, IsClosed, IsWon, and Probability are
	// automatically updated based on the stage-category mapping.
	//
	// Properties:Create, Filter, Group, Sort, Update
	StageName string `json:"StageName"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TotalOpportunityQuantity ...
	//
	// Number of items included in this opportunity. Used in quantity-based forecasting.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	TotalOpportunityQuantity types.NullableFloat64 `json:"TotalOpportunityQuantity"`
	// TrackingNumber__c ...
	TrackingNumber__c types.NullableString `json:"TrackingNumber__c"`
	// Type ...
	//
	// Type of opportunity. For example, Existing Business or New Business. Label is Opportunity Type.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Type types.NullableString `json:"Type"`
}

// OutgoingEmailRelation ...
type OutgoingEmailRelation struct {
	// ExternalID ...
	ExternalID types.NullableString `json:"ExternalId"`
	// ID ...
	ID string `json:"Id"`
	// OutgoingEmailID ...
	OutgoingEmailID types.NullableString `json:"OutgoingEmailId"`
	// RelationAddress ...
	RelationAddress types.NullableString `json:"RelationAddress"`
	// RelationID ...
	RelationID types.NullableString `json:"RelationId"`
}

// ProcessInstance ...
//
// Represents an instance of a single, end-to-end approval process. Use this and the node, step, and workitem
// process instance objects to create approval history reports.
type ProcessInstance struct {
	// CompletedDate ...
	//
	// The completion date and time of the approval process. The ElapsedTimeDay, ElapsedTimeHours, and
	// ElapsedTimeMinutes field values are calculated using CompletedDate.
	//
	// Properties:Filter, Nillable, Sort
	CompletedDate types.Datetime `json:"CompletedDate"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ElapsedTimeInDays ...
	//
	// The total elapsed time in days between when the approval process instance was started and now.
	//
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInDays types.NullableFloat64 `json:"ElapsedTimeInDays"`
	// ElapsedTimeInHours ...
	//
	// The total elapsed time in hours between when the approval process instance was started and now.
	//
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInHours types.NullableFloat64 `json:"ElapsedTimeInHours"`
	// ElapsedTimeInMinutes ...
	//
	// The total elapsed time in minutes between when the approval process instance was started and now.
	//
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInMinutes types.NullableFloat64 `json:"ElapsedTimeInMinutes"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastActorID ...
	//
	// The last actor that approved, rejected, or recalled the process.
	//
	// Properties:Group, Filter,
	// Nillable, Sort
	LastActorID types.NullableString `json:"LastActorId"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// ProcessDefinitionID ...
	//
	// The ID of this approval process instance.
	//
	// Properties:Group, Filter, Sort
	ProcessDefinitionID string `json:"ProcessDefinitionId"`
	// Status ...
	//
	// The status of this approval process instance, for example Started, Pending, or Approved.
	//
	//
	// Properties:Filter, Group, Restricted picklist, Sort
	Status string `json:"Status"`
	// SubmittedByID ...
	SubmittedByID types.NullableString `json:"SubmittedById"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TargetObjectID ...
	//
	// ID of the object affected by this approval process instance.
	//
	// Properties:Filter, Group, Sort
	TargetObjectID string `json:"TargetObjectId"`
}

// ProcessInstanceHistory ...
//
// This read-only object shows all steps and pending approval requests associated with an approval process
// (ProcessInstance).
type ProcessInstanceHistory struct {
	// ActorID ...
	//
	// ID of the user who is currently assigned to this ProcessInstance.
	//
	// Properties:Filter, Group,
	// Sort
	ActorID string `json:"ActorId"`
	// Comments ...
	//
	// Comments for a ProcessInstanceStep. This field doesn't apply to ProcessInstanceWorkitem
	// records.
	//
	// Properties:Filter, Nillable, Sort
	Comments types.NullableString `json:"Comments"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ElapsedTimeInDays ...
	//
	// The total time in days between when the approval process instance was started and when it was
	// completed.
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInDays types.NullableFloat64 `json:"ElapsedTimeInDays"`
	// ElapsedTimeInHours ...
	//
	// The total time in hours between when the approval process instance was started and when it was
	// completed.
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInHours types.NullableFloat64 `json:"ElapsedTimeInHours"`
	// ElapsedTimeInMinutes ...
	//
	// The total time in minutes between when the approval process instance was started and when it was
	// completed.
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInMinutes types.NullableFloat64 `json:"ElapsedTimeInMinutes"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsPending ...
	//
	// Indicates whether the ProcessInstance is pending (true) or not (false).
	//
	// Properties:Defaulted
	// on create, Filter, Group, Sort
	IsPending bool `json:"IsPending"`
	// OriginalActorID ...
	//
	// ID of the user who was originally assigned this ProcessInstance.
	//
	// Properties:Filter, Group,
	// Sort
	OriginalActorID string `json:"OriginalActorId"`
	// ProcessInstanceID ...
	//
	// ID of the ProcessInstance.
	//
	// Properties:Filter, Group, Sort
	ProcessInstanceID string `json:"ProcessInstanceId"`
	// ProcessNodeID ...
	//
	// ID of this step.
	//
	// Properties:Filter, Group, Nillable, Sort
	ProcessNodeID types.NullableString `json:"ProcessNodeId"`
	// RemindersSent ...
	//
	// Number of reminders that have been sent. Default is 0 (zero).
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	RemindersSent types.NullableInt `json:"RemindersSent"`
	// StepStatus ...
	//
	// Indicates the current status of the ProcessInstanceStep.
	//
	// Properties:Filter, Group,
	// Nillable, Restricted picklist, Sort
	StepStatus types.NullableString `json:"StepStatus"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TargetObjectID ...
	//
	// ID of the object being approved.
	//
	// Properties:Filter, Group, Nillable, Sort
	TargetObjectID types.NullableString `json:"TargetObjectId"`
}

// RecordAction ...
//
// Represents a relationship between a record and an action, such as a flow. Create a RecordAction for every
// action that you want to associate with a particular record. Available in API version 42.0 and later.
type RecordAction struct {
	// ActionDefinition ...
	//
	// Required in Lightning Flow for Service implementations that use version 44.0 or later of the API. The API
	// name of the action to associate with the record; for example, the API name of a flow. Use this field rather than
	// FlowDefinition. To distinguish a quick action from a flow with the same API name, we prepend "QuickAction" to the API name of
	// every quick action.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ActionDefinition types.NullableString `json:"ActionDefinition"`
	// ActionType ...
	//
	// Required in Lightning Flow for Service implementations that use version 46.0 or later of the API. The type
	// of action. Possible values are: Flow (default) QuickAction For versions of the API prior to version 46.0,
	// this field is set to Flow.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	ActionType types.NullableString `json:"ActionType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// FlowDefinition ...
	//
	// Optional in Lightning Flow for Service implementations using version 42.0 or 43.0 of the API. An upgrade to
	// Winter '19 or later, which uses API version 44.0 or later, copies FlowDefinition to ActionDefinition. For
	// versions 42.0 and 43.0, this field is the API name of the flow that’s associated with the record.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	FlowDefinition types.NullableString `json:"FlowDefinition"`
	// FlowInterviewID ...
	//
	// Optional. The flow interview ID of the paused or completed flow. This field can’t be set in Process
	// Builder.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FlowInterviewID types.NullableString `json:"FlowInterviewId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsMandatory ...
	//
	// Optional. Specifies whether the action is mandatory. The default value is false. Note At runtime, we show a
	// reminder when the user closes a mandatory flow without completing it. We don't show the reminder for quick
	// actions.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsMandatory bool `json:"IsMandatory"`
	// IsUIRemoveHidden ...
	//
	// Optional. Specifies whether the ability to remove the action is hidden in the UI. The default value is
	// false. If true, the UI hides the ability to remove the action. However, actions can still be deleted using the
	// API.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsUIRemoveHidden bool `json:"IsUiRemoveHidden"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Order ...
	//
	// Required. The order of the action among all actions associated with this record.
	//
	//
	// Properties:Create, Filter, Group, Sort, Update
	Order int `json:"Order"`
	// Pinned ...
	//
	// Required. Specifies whether the action is pinned to the top or bottom of the component. If an action is
	// pinned, users see the Remove option in the UI unless IsUiRemoveHidden is set to true. Possible values are: None
	// (default) Top Bottom
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Restricted
	// picklist, Sort, Update
	Pinned types.NullableString `json:"Pinned"`
	// RecordID ...
	//
	// Required. Record associated with the action. In version 46.0 and above, we support most object types. To
	// learn about supported objects, see the Lightning Flow for Service Developer’s Guide.
	//
	//
	// Properties:Create, Filter, Group, Sort, Update
	RecordID string `json:"RecordId"`
	// Status ...
	//
	// Required. The current state of the action. Possible values are: New (default) Paused Complete Started
	// UnlinkedThe action was unlinked because the flow was paused and the current record for the flow interview changed.
	// Paused and unlinked statuses do not apply to quick actions. This field can’t be set in Process Builder.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	Status types.NullableString `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// RecordActionHistory ...
//
// Represents the lifecycle of a RecordAction as it goes through different states. Available in API version
// 44.0 and later.
type RecordActionHistory struct {
	// ActionDefinitionAPIName ...
	//
	//
	//
	// Properties:Required. The API name of the action associated with the record. To distinguish a
	// quick action from a flow with the same API name, we prepend "QuickAction" to the API name of every quick action.
	ActionDefinitionAPIName string `json:"ActionDefinitionApiName"`
	// ActionDefinitionLabel ...
	//
	//
	//
	// Properties:Required. The label of the action that took place.
	ActionDefinitionLabel string `json:"ActionDefinitionLabel"`
	// ActionType ...
	//
	// Required. The type of action associated with the record. Possible values are: Flow (default)
	// QuickAction
	//
	// Properties:Defaulted on create, Restricted picklist
	ActionType string `json:"ActionType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsMandatory ...
	//
	// Optional. Specifies whether the action is mandatory. The default value is false.
	//
	//
	// Properties:Defaulted on create
	IsMandatory bool `json:"IsMandatory"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LoggedTime ...
	//
	// Required. The timestamp when the state change occurred.
	//
	// Properties:Filter, Sort
	LoggedTime types.Datetime `json:"LoggedTime"`
	// ParentRecordID ...
	//
	// Required. The parent record for the associated action.
	//
	// Properties:Filter, Sort
	ParentRecordID string `json:"ParentRecordId"`
	// Pinned ...
	//
	// Optional. Specifies whether the action is pinned to the top or bottom, or unpinned. Possible values are:
	// None Top Bottom
	//
	// Properties:Defaulted on create, Nillable, Restricted picklist
	Pinned types.NullableString `json:"Pinned"`
	// RecordActionID ...
	//
	// Required. The ID of the RecordAction.
	//
	// Properties:Filter, Sort
	RecordActionID string `json:"RecordActionId"`
	// State ...
	//
	// Required. The state of the action. A state change triggers the logging of a history event. Possible values
	// are: New (default) Paused Complete Started UnlinkedThe action was unlinked because the flow was paused and the
	// current record for the flow interview changed.
	//
	// Properties:Defaulted on create, Restricted picklist
	State string `json:"State"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// UserID ...
	//
	//
	//
	// Properties:Required. The user that conducted the action.
	UserID string `json:"UserId"`
}

// ServiceAppointment ...
//
// Represents an appointment to complete work for a customer in Field Service and Lightning Scheduler. This
// object is available in API version 38.0 and later.
type ServiceAppointment struct {
	// AccountID ...
	//
	// (Read only) The account associated with the appointment. If the parent record is a work order or work order
	// line item, this field’s value is inherited from the parent. Otherwise, it remains blank.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActualDuration ...
	//
	// The number of minutes that it took the resource to complete the appointment after arriving at the address.
	// When values are first added to the Actual Start and Actual End fields, the Actual Duration is automatically
	// populated to list the difference between the Actual Start and Actual End. If the Actual Start and Actual End fields are
	// subsequently updated, the Actual Duration field doesn’t re-update, but you can manually update it.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ActualDuration types.NullableFloat64 `json:"ActualDuration"`
	// ActualEndTime ...
	//
	// The actual date and time the appointment ended.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	ActualEndTime types.Datetime `json:"ActualEndTime"`
	// ActualStartTime ...
	//
	// The actual date and time the appointment started.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	ActualStartTime types.Datetime `json:"ActualStartTime"`
	// AdditionalInformation ...
	AdditionalInformation types.NullableString `json:"AdditionalInformation"`
	// Address ...
	//
	// The address where the appointment is taking place. The address is inherited from the parent record if the
	// parent record is a work order or work order line item.
	//
	// Properties:Filter
	Address types.Address `json:"Address"`
	// AppointmentNumber ...
	//
	// An auto-assigned number that identifies the appointment.
	//
	// Properties:Autonumber, Defaulted
	// on create, Filter, idLookup, Sort
	AppointmentNumber string `json:"AppointmentNumber"`
	// AppointmentType ...
	AppointmentType types.NullableString `json:"AppointmentType"`
	// ArrivalWindowEndTime ...
	//
	// The end of the window of time in which the technician is scheduled to arrive at the site. This window is
	// typically larger than the Scheduled Start and End window to allow time for delays and scheduling changes. You may
	// choose to share the Arrival Window Start and End with the customer, but keep the Scheduled Start and End
	// internal-only.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ArrivalWindowEndTime types.Datetime `json:"ArrivalWindowEndTime"`
	// ArrivalWindowStartTime ...
	//
	// The beginning of the window of time in which the technician is scheduled to arrive at the site. This window is
	// typically larger than the Scheduled Start and End window to allow time for delays and scheduling changes. You may
	// choose to share the Arrival Window Start and End with the customer, but keep the Scheduled Start and End
	// internal-only.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ArrivalWindowStartTime types.Datetime `json:"ArrivalWindowStartTime"`
	// CancellationReason ...
	CancellationReason types.NullableString `json:"CancellationReason"`
	// City ...
	//
	// The city where the appointment is completed. Maximum length is 40 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	City types.NullableString `json:"City"`
	// Comments ...
	Comments types.NullableString `json:"Comments"`
	// ContactID ...
	//
	// The contact associated with the parent record. If needed, you can manually update the service appointment
	// contact.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ContactID types.NullableString `json:"ContactId"`
	// Country ...
	//
	// The country where the work order is completed. Maximum length is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Country types.NullableString `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// The description of the appointment.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// DueDate ...
	//
	// The date by which the appointment must be completed. Earliest Start Permitted and Due Date typically
	// reflect terms in the customer’s service-level agreement.
	//
	// Properties:Create, Filter, Sort, Update
	DueDate types.Datetime `json:"DueDate"`
	// Duration ...
	//
	// The estimated length of the appointment. If the parent record is work order or work order line item, the
	// appointment inherits its parent’s duration, but it can be manually updated. The duration is in minutes or hours based
	// on the value selected in the Duration Type field.
	//
	// Properties:Create, Nillable, Filter, Sort,
	// Update
	Duration types.NullableFloat64 `json:"Duration"`
	// DurationInMinutes ...
	DurationInMinutes types.NullableFloat64 `json:"DurationInMinutes"`
	// DurationType ...
	//
	// The unit of the Duration: Minutes or Hours.
	//
	// Properties:Create, Defaulted on create, Filter,
	// Group, Nillable, Restricted picklist, Sort, Update
	DurationType types.NullableString `json:"DurationType"`
	// EarliestStartTime ...
	//
	// The date after which the appointment must be completed. Earliest Start Permitted and Due Date typically
	// reflect terms in the customer’s service-level agreement.
	//
	// Properties:Create, Filter, Sort, Update
	EarliestStartTime types.Datetime `json:"EarliestStartTime"`
	// Email ...
	Email types.NullableString `json:"Email"`
	// GeocodeAccuracy ...
	//
	// The level of accuracy of a location’s geographical coordinates compared with its physical address.
	// Usually provided by a geocoding service based on the address’s latitude and longitude coordinates. Note This
	// field is available in the API only.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted
	// picklist, Sort, Update
	GeocodeAccuracy types.NullableString `json:"GeocodeAccuracy"`
	// ID ...
	ID string `json:"Id"`
	// IsAnonymousBooking ...
	//
	// Indicates whether a service resource was automatically assigned to the appointment. The default value is
	// false.
	// This field is available in API version 49.0 and later.

	//
	// Properties:Create, Defaulted on create,
	// Filter, Group, Sort, Update
	IsAnonymousBooking bool `json:"IsAnonymousBooking"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The date when the service appointment was last modified. Its label in the user interface is Last Modified
	// Date.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The date when the service appointment was last viewed.
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Latitude ...
	//
	// Used with Longitude to specify the precise geolocation of the address where the service appointments is
	// completed. Acceptable values are numbers between –90 and 90 with up to 15 decimal places. Note This field is
	// available in the API only.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Latitude types.NullableFloat64 `json:"Latitude"`
	// Longitude ...
	//
	// Used with Latitude to specify the precise geolocation of the address where the service appointment is
	// completed. Acceptable values are numbers between –180 and 180 with up to 15 decimal places. Note This field is
	// available in the API only.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Longitude types.NullableFloat64 `json:"Longitude"`
	// OwnerID ...
	//
	// The owner of the service appointment.
	//
	// Properties:Create, Defaulted on create, Filter, Group,
	// Sort, Update
	OwnerID string `json:"OwnerId"`
	// ParentRecordID ...
	//
	// The parent record associated with the appointment. The parent record can’t be updated after the service
	// appointment is created.
	//
	// Properties:Create, Filter, Group, Nillable, Sort
	ParentRecordID types.NullableString `json:"ParentRecordId"`
	// ParentRecordStatusCategory ...
	//
	// (Read only) The Status Category of the parent record. If the parent record is a work order or work order line
	// item, this field is populated; otherwise, it remains blank.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Nillable, Restricted picklist, Sort
	ParentRecordStatusCategory types.NullableString `json:"ParentRecordStatusCategory"`
	// ParentRecordType ...
	//
	// (Read only) The type of parent record: Account, Asset, Lead, Opportunity, Work Order, or Work Order Line
	// Item.
	//
	// Properties:Filter, Group, Nillable, Sort
	ParentRecordType types.NullableString `json:"ParentRecordType"`
	// Phone ...
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	//
	// The postal code where the work order is completed. Maximum length is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PostalCode types.NullableString `json:"PostalCode"`
	// SchedEndTime ...
	//
	// The time at which the appointment is scheduled to end. If you are using the Field Service managed package
	// with the scheduling optimizer, this field is populated once the appointment is assigned to a resource.
	// Scheduled End – Scheduled Start = Estimated Duration.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	SchedEndTime types.Datetime `json:"SchedEndTime"`
	// SchedStartTime ...
	//
	// The time at which the appointment is scheduled to start. If you are using the Field Service managed package
	// with the scheduling optimizer, this field is populated once the appointment is assigned to a
	// resource.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	SchedStartTime types.Datetime `json:"SchedStartTime"`
	// ServiceNote ...
	ServiceNote types.NullableString `json:"ServiceNote"`
	// ServiceTerritoryID ...
	//
	// The service territory associated with the appointment. If the parent record is a work order or work order
	// line item, the appointment inherits its parent’s service territory.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	ServiceTerritoryID types.NullableString `json:"ServiceTerritoryId"`
	// State ...
	//
	// The state where the service appointment is completed. Maximum length is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	State types.NullableString `json:"State"`
	// Status ...
	//
	// The status of the appointment. The picklist includes the following values, which can be customized:
	// NoneDefault value. ScheduledAppointment has been assigned to a service resource. DispatchedAssigned service
	// resource has been notified about their assignment. In ProgressWork has begun. CompletedWork is complete. Cannot
	// CompleteWork could not be completed. CanceledWork is canceled, typically before any work began
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Sort, Update
	Status types.NullableString `json:"Status"`
	// StatusCategory ...
	//
	// The category that each Status value falls into. The Status Category field’s values are identical to the
	// default Status values.If you create custom Status values, you must indicate which category it belongs to. For
	// example, if you create a Customer Absent value, you may decide that it belongs in the Cannot Complete category. To
	// learn which processes reference StatusCategory, see How are Status Categories Used?
	//
	//
	// Properties:Defaulted on create, Filter, Group, Nillable, Restricted picklist, Sort
	StatusCategory types.NullableString `json:"StatusCategory"`
	// Street ...
	//
	// The street number and name where the service appointment is completed.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	Street types.NullableString `json:"Street"`
	// Subject ...
	//
	// A short phrase describing the appointment.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WorkTypeID ...
	//
	// The work type associated with the service appointment. The work type is inherited from the
	// appointment’s parent record if the parent is a work order or work order line item. Note If Lightning Scheduler is also in
	// use, this field is editable. However, users see an error if they update it to list a different work type than the
	// parent record’s work type.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WorkTypeID types.NullableString `json:"WorkTypeId"`
}

// Task ...
type Task struct {
	// AccountID ...
	AccountID types.NullableString `json:"AccountId"`
	// ActivityDate ...
	ActivityDate types.Date `json:"ActivityDate"`
	// CallDisposition ...
	CallDisposition types.NullableString `json:"CallDisposition"`
	// CallDurationInSeconds ...
	CallDurationInSeconds types.NullableInt `json:"CallDurationInSeconds"`
	// CallObject ...
	CallObject types.NullableString `json:"CallObject"`
	// CallType ...
	CallType types.NullableString `json:"CallType"`
	// CompletedDateTime ...
	CompletedDateTime types.Datetime `json:"CompletedDateTime"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	Description types.NullableString `json:"Description"`
	// ID ...
	ID string `json:"Id"`
	// IsArchived ...
	IsArchived bool `json:"IsArchived"`
	// IsClosed ...
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsHighPriority ...
	IsHighPriority bool `json:"IsHighPriority"`
	// IsRecurrence ...
	IsRecurrence bool `json:"IsRecurrence"`
	// IsReminderSet ...
	IsReminderSet bool `json:"IsReminderSet"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// OwnerID ...
	OwnerID string `json:"OwnerId"`
	// Priority ...
	Priority string `json:"Priority"`
	// RecurrenceActivityID ...
	RecurrenceActivityID types.NullableString `json:"RecurrenceActivityId"`
	// RecurrenceDayOfMonth ...
	RecurrenceDayOfMonth types.NullableInt `json:"RecurrenceDayOfMonth"`
	// RecurrenceDayOfWeekMask ...
	RecurrenceDayOfWeekMask types.NullableInt `json:"RecurrenceDayOfWeekMask"`
	// RecurrenceEndDateOnly ...
	RecurrenceEndDateOnly types.Date `json:"RecurrenceEndDateOnly"`
	// RecurrenceInstance ...
	RecurrenceInstance types.NullableString `json:"RecurrenceInstance"`
	// RecurrenceInterval ...
	RecurrenceInterval types.NullableInt `json:"RecurrenceInterval"`
	// RecurrenceMonthOfYear ...
	RecurrenceMonthOfYear types.NullableString `json:"RecurrenceMonthOfYear"`
	// RecurrenceRegeneratedType ...
	RecurrenceRegeneratedType types.NullableString `json:"RecurrenceRegeneratedType"`
	// RecurrenceStartDateOnly ...
	RecurrenceStartDateOnly types.Date `json:"RecurrenceStartDateOnly"`
	// RecurrenceTimeZoneSidKey ...
	RecurrenceTimeZoneSidKey types.NullableString `json:"RecurrenceTimeZoneSidKey"`
	// RecurrenceType ...
	RecurrenceType types.NullableString `json:"RecurrenceType"`
	// ReminderDateTime ...
	ReminderDateTime types.Datetime `json:"ReminderDateTime"`
	// Status ...
	Status string `json:"Status"`
	// Subject ...
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TaskSubtype ...
	TaskSubtype types.NullableString `json:"TaskSubtype"`
	// WhatID ...
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	WhoID types.NullableString `json:"WhoId"`
}

// TopicAssignment ...
//
// Represents the assignment of a topic to a specific feed item, record, or file. This object is available in
// API version 28.0 and later.
type TopicAssignment struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EntityID ...
	//
	// Identifier of the feed item, record, or file.
	//
	// Properties:Create, Filter, Group, Sort
	EntityID string `json:"EntityId"`
	// EntityKeyPrefix ...
	//
	// The first three digits of the EntityID field, which identify the object type (account, opportunity, etc).
	// This read-only field is available in API version 32.0 and later. Interface label is “Record Key Prefix,”
	// which appears only in reports.
	//
	// Properties:Filter, Group, idLookup, Sort
	EntityKeyPrefix string `json:"EntityKeyPrefix"`
	// EntityType ...
	//
	// The standard name for the object type (account, opportunity, etc). This read-only field is available in
	// API version 33.0 and later. Note Querying topic assignments for the ManagedContentVersion entity type
	// isn’t supported. Interface label is “Object Type,” which appears only in reports. Tip In most cases, you
	// should use this field rather than EntityKeyPrefix, which exists primarily to support older reports.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	EntityType types.NullableString `json:"EntityType"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TopicID ...
	//
	// Identifier of the topic.
	//
	// Properties:Create, Filter, Group, Sort
	TopicID string `json:"TopicId"`
}

// UndecidedEventRelation ...
//
// Represents event participants (invitees or attendees) with the status Not Responded for a given event.
// This object is available in API versions 29.0 and later.
type UndecidedEventRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EventID ...
	//
	// Indicates the ID of the event.
	//
	// Properties:Filter, Group, Nillable, Sort
	EventID types.NullableString `json:"EventId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RelationID ...
	//
	// Indicates the ID of the invitee.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationID types.NullableString `json:"RelationId"`
	// RespondedDate ...
	//
	// This field is always null.
	//
	// Properties:Filter, Nillable, Sort
	RespondedDate types.Datetime `json:"RespondedDate"`
	// Response ...
	//
	// Indicates the content of the response field. Label is Comment.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Response types.NullableString `json:"Response"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Type ...
	//
	// Indicates whether the invitee is a user, lead or contact, or resource.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	Type types.NullableString `json:"Type"`
}

// User ...
type User struct {
	// AboutMe ...
	AboutMe types.NullableString `json:"AboutMe"`
	// AccountID ...
	AccountID types.NullableString `json:"AccountId"`
	// Address ...
	Address types.Address `json:"Address"`
	// Alias ...
	Alias string `json:"Alias"`
	// BadgeText ...
	BadgeText types.NullableString `json:"BadgeText"`
	// BannerPhotoURL ...
	BannerPhotoURL types.NullableString `json:"BannerPhotoUrl"`
	// CallCenterID ...
	CallCenterID types.NullableString `json:"CallCenterId"`
	// City ...
	City types.NullableString `json:"City"`
	// CommunityNickname ...
	CommunityNickname string `json:"CommunityNickname"`
	// CompanyName ...
	CompanyName types.NullableString `json:"CompanyName"`
	// ContactID ...
	ContactID types.NullableString `json:"ContactId"`
	// Country ...
	Country types.NullableString `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DefaultGroupNotificationFrequency ...
	DefaultGroupNotificationFrequency string `json:"DefaultGroupNotificationFrequency"`
	// DelegatedApproverID ...
	DelegatedApproverID types.NullableString `json:"DelegatedApproverId"`
	// Department ...
	Department types.NullableString `json:"Department"`
	// DigestFrequency ...
	DigestFrequency string `json:"DigestFrequency"`
	// Division ...
	Division types.NullableString `json:"Division"`
	// Email ...
	Email string `json:"Email"`
	// EmailEncodingKey ...
	EmailEncodingKey string `json:"EmailEncodingKey"`
	// EmailPreferencesAutoBcc ...
	EmailPreferencesAutoBcc bool `json:"EmailPreferencesAutoBcc"`
	// EmailPreferencesAutoBccStayInTouch ...
	EmailPreferencesAutoBccStayInTouch bool `json:"EmailPreferencesAutoBccStayInTouch"`
	// EmailPreferencesStayInTouchReminder ...
	EmailPreferencesStayInTouchReminder bool `json:"EmailPreferencesStayInTouchReminder"`
	// EmployeeNumber ...
	EmployeeNumber types.NullableString `json:"EmployeeNumber"`
	// Extension ...
	Extension types.NullableString `json:"Extension"`
	// Fax ...
	Fax types.NullableString `json:"Fax"`
	// FederationIDentifier ...
	FederationIDentifier types.NullableString `json:"FederationIdentifier"`
	// FirstName ...
	FirstName types.NullableString `json:"FirstName"`
	// ForecastEnabled ...
	ForecastEnabled bool `json:"ForecastEnabled"`
	// FullPhotoURL ...
	FullPhotoURL types.NullableString `json:"FullPhotoUrl"`
	// GeocodeAccuracy ...
	GeocodeAccuracy types.NullableString `json:"GeocodeAccuracy"`
	// ID ...
	ID string `json:"Id"`
	// IndividualID ...
	IndividualID types.NullableString `json:"IndividualId"`
	// IsActive ...
	IsActive bool `json:"IsActive"`
	// IsExtIndicatorVisible ...
	IsExtIndicatorVisible bool `json:"IsExtIndicatorVisible"`
	// IsProfilePhotoActive ...
	IsProfilePhotoActive bool `json:"IsProfilePhotoActive"`
	// JigsawImportLimitOverride ...
	JigsawImportLimitOverride types.NullableInt `json:"JigsawImportLimitOverride"`
	// LanguageLocaleKey ...
	LanguageLocaleKey string `json:"LanguageLocaleKey"`
	// LastLoginDate ...
	LastLoginDate types.Datetime `json:"LastLoginDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	LastName string `json:"LastName"`
	// LastPasswordChangeDate ...
	LastPasswordChangeDate types.Datetime `json:"LastPasswordChangeDate"`
	// LastReferencedDate ...
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Latitude ...
	Latitude types.NullableFloat64 `json:"Latitude"`
	// LocaleSidKey ...
	LocaleSidKey string `json:"LocaleSidKey"`
	// Longitude ...
	Longitude types.NullableFloat64 `json:"Longitude"`
	// ManagerID ...
	ManagerID types.NullableString `json:"ManagerId"`
	// MediumBannerPhotoURL ...
	MediumBannerPhotoURL types.NullableString `json:"MediumBannerPhotoUrl"`
	// MediumPhotoURL ...
	MediumPhotoURL types.NullableString `json:"MediumPhotoUrl"`
	// MobilePhone ...
	MobilePhone types.NullableString `json:"MobilePhone"`
	// Name ...
	Name string `json:"Name"`
	// NumberOfFailedLogins ...
	NumberOfFailedLogins types.NullableInt `json:"NumberOfFailedLogins"`
	// OfflinePdaTrialExpirationDate ...
	OfflinePdaTrialExpirationDate types.Datetime `json:"OfflinePdaTrialExpirationDate"`
	// OfflineTrialExpirationDate ...
	OfflineTrialExpirationDate types.Datetime `json:"OfflineTrialExpirationDate"`
	// OutOfOfficeMessage ...
	OutOfOfficeMessage types.NullableString `json:"OutOfOfficeMessage"`
	// Phone ...
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	PostalCode types.NullableString `json:"PostalCode"`
	// ProfileID ...
	ProfileID string `json:"ProfileId"`
	// ReceivesAdminInfoEmails ...
	ReceivesAdminInfoEmails bool `json:"ReceivesAdminInfoEmails"`
	// ReceivesInfoEmails ...
	ReceivesInfoEmails bool `json:"ReceivesInfoEmails"`
	// SenderEmail ...
	SenderEmail types.NullableString `json:"SenderEmail"`
	// SenderName ...
	SenderName types.NullableString `json:"SenderName"`
	// Signature ...
	Signature types.NullableString `json:"Signature"`
	// SmallBannerPhotoURL ...
	SmallBannerPhotoURL types.NullableString `json:"SmallBannerPhotoUrl"`
	// SmallPhotoURL ...
	SmallPhotoURL types.NullableString `json:"SmallPhotoUrl"`
	// State ...
	State types.NullableString `json:"State"`
	// StayInTouchNote ...
	StayInTouchNote types.NullableString `json:"StayInTouchNote"`
	// StayInTouchSignature ...
	StayInTouchSignature types.NullableString `json:"StayInTouchSignature"`
	// StayInTouchSubject ...
	StayInTouchSubject types.NullableString `json:"StayInTouchSubject"`
	// Street ...
	Street types.NullableString `json:"Street"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TimeZoneSidKey ...
	TimeZoneSidKey string `json:"TimeZoneSidKey"`
	// Title ...
	Title types.NullableString `json:"Title"`
	// UserPermissionsCallCenterAutoLogin ...
	UserPermissionsCallCenterAutoLogin bool `json:"UserPermissionsCallCenterAutoLogin"`
	// UserPermissionsInteractionUser ...
	UserPermissionsInteractionUser bool `json:"UserPermissionsInteractionUser"`
	// UserPermissionsJigsawProspectingUser ...
	UserPermissionsJigsawProspectingUser bool `json:"UserPermissionsJigsawProspectingUser"`
	// UserPermissionsKnowledgeUser ...
	UserPermissionsKnowledgeUser bool `json:"UserPermissionsKnowledgeUser"`
	// UserPermissionsMarketingUser ...
	UserPermissionsMarketingUser bool `json:"UserPermissionsMarketingUser"`
	// UserPermissionsOfflineUser ...
	UserPermissionsOfflineUser bool `json:"UserPermissionsOfflineUser"`
	// UserPermissionsSFContentUser ...
	UserPermissionsSFContentUser bool `json:"UserPermissionsSFContentUser"`
	// UserPermissionsSiteforceContributorUser ...
	UserPermissionsSiteforceContributorUser bool `json:"UserPermissionsSiteforceContributorUser"`
	// UserPermissionsSiteforcePublisherUser ...
	UserPermissionsSiteforcePublisherUser bool `json:"UserPermissionsSiteforcePublisherUser"`
	// UserPermissionsSupportUser ...
	UserPermissionsSupportUser bool `json:"UserPermissionsSupportUser"`
	// UserPermissionsWorkDotComUserFeature ...
	UserPermissionsWorkDotComUserFeature bool `json:"UserPermissionsWorkDotComUserFeature"`
	// UserPreferencesActivityRemindersPopup ...
	UserPreferencesActivityRemindersPopup bool `json:"UserPreferencesActivityRemindersPopup"`
	// UserPreferencesApexPagesDeveloperMode ...
	UserPreferencesApexPagesDeveloperMode bool `json:"UserPreferencesApexPagesDeveloperMode"`
	// UserPreferencesCacheDiagnostics ...
	UserPreferencesCacheDiagnostics bool `json:"UserPreferencesCacheDiagnostics"`
	// UserPreferencesContentEmailAsAndWhen ...
	UserPreferencesContentEmailAsAndWhen bool `json:"UserPreferencesContentEmailAsAndWhen"`
	// UserPreferencesContentNoEmail ...
	UserPreferencesContentNoEmail bool `json:"UserPreferencesContentNoEmail"`
	// UserPreferencesCreateLEXAppsWTShown ...
	UserPreferencesCreateLEXAppsWTShown bool `json:"UserPreferencesCreateLEXAppsWTShown"`
	// UserPreferencesDisCommentAfterLikeEmail ...
	UserPreferencesDisCommentAfterLikeEmail bool `json:"UserPreferencesDisCommentAfterLikeEmail"`
	// UserPreferencesDisMentionsCommentEmail ...
	UserPreferencesDisMentionsCommentEmail bool `json:"UserPreferencesDisMentionsCommentEmail"`
	// UserPreferencesDisProfPostCommentEmail ...
	UserPreferencesDisProfPostCommentEmail bool `json:"UserPreferencesDisProfPostCommentEmail"`
	// UserPreferencesDisableAllFeedsEmail ...
	UserPreferencesDisableAllFeedsEmail bool `json:"UserPreferencesDisableAllFeedsEmail"`
	// UserPreferencesDisableBookmarkEmail ...
	UserPreferencesDisableBookmarkEmail bool `json:"UserPreferencesDisableBookmarkEmail"`
	// UserPreferencesDisableChangeCommentEmail ...
	UserPreferencesDisableChangeCommentEmail bool `json:"UserPreferencesDisableChangeCommentEmail"`
	// UserPreferencesDisableEndorsementEmail ...
	UserPreferencesDisableEndorsementEmail bool `json:"UserPreferencesDisableEndorsementEmail"`
	// UserPreferencesDisableFeedbackEmail ...
	UserPreferencesDisableFeedbackEmail bool `json:"UserPreferencesDisableFeedbackEmail"`
	// UserPreferencesDisableFileShareNotificationsForAPI ...
	UserPreferencesDisableFileShareNotificationsForAPI bool `json:"UserPreferencesDisableFileShareNotificationsForApi"`
	// UserPreferencesDisableFollowersEmail ...
	UserPreferencesDisableFollowersEmail bool `json:"UserPreferencesDisableFollowersEmail"`
	// UserPreferencesDisableLaterCommentEmail ...
	UserPreferencesDisableLaterCommentEmail bool `json:"UserPreferencesDisableLaterCommentEmail"`
	// UserPreferencesDisableLikeEmail ...
	UserPreferencesDisableLikeEmail bool `json:"UserPreferencesDisableLikeEmail"`
	// UserPreferencesDisableMentionsPostEmail ...
	UserPreferencesDisableMentionsPostEmail bool `json:"UserPreferencesDisableMentionsPostEmail"`
	// UserPreferencesDisableMessageEmail ...
	UserPreferencesDisableMessageEmail bool `json:"UserPreferencesDisableMessageEmail"`
	// UserPreferencesDisableProfilePostEmail ...
	UserPreferencesDisableProfilePostEmail bool `json:"UserPreferencesDisableProfilePostEmail"`
	// UserPreferencesDisableSharePostEmail ...
	UserPreferencesDisableSharePostEmail bool `json:"UserPreferencesDisableSharePostEmail"`
	// UserPreferencesDisableWorkEmail ...
	UserPreferencesDisableWorkEmail bool `json:"UserPreferencesDisableWorkEmail"`
	// UserPreferencesEnableAutoSubForFeeds ...
	UserPreferencesEnableAutoSubForFeeds bool `json:"UserPreferencesEnableAutoSubForFeeds"`
	// UserPreferencesEventRemindersCheckboxDefault ...
	UserPreferencesEventRemindersCheckboxDefault bool `json:"UserPreferencesEventRemindersCheckboxDefault"`
	// UserPreferencesExcludeMailAppAttachments ...
	UserPreferencesExcludeMailAppAttachments bool `json:"UserPreferencesExcludeMailAppAttachments"`
	// UserPreferencesFavoritesShowTopFavorites ...
	UserPreferencesFavoritesShowTopFavorites bool `json:"UserPreferencesFavoritesShowTopFavorites"`
	// UserPreferencesFavoritesWTShown ...
	UserPreferencesFavoritesWTShown bool `json:"UserPreferencesFavoritesWTShown"`
	// UserPreferencesGlobalNavBarWTShown ...
	UserPreferencesGlobalNavBarWTShown bool `json:"UserPreferencesGlobalNavBarWTShown"`
	// UserPreferencesGlobalNavGridMenuWTShown ...
	UserPreferencesGlobalNavGridMenuWTShown bool `json:"UserPreferencesGlobalNavGridMenuWTShown"`
	// UserPreferencesHasCelebrationBadge ...
	UserPreferencesHasCelebrationBadge bool `json:"UserPreferencesHasCelebrationBadge"`
	// UserPreferencesHideBiggerPhotoCallout ...
	UserPreferencesHideBiggerPhotoCallout bool `json:"UserPreferencesHideBiggerPhotoCallout"`
	// UserPreferencesHideCSNDesktopTask ...
	UserPreferencesHideCSNDesktopTask bool `json:"UserPreferencesHideCSNDesktopTask"`
	// UserPreferencesHideCSNGetChatterMobileTask ...
	UserPreferencesHideCSNGetChatterMobileTask bool `json:"UserPreferencesHideCSNGetChatterMobileTask"`
	// UserPreferencesHideChatterOnboardingSplash ...
	UserPreferencesHideChatterOnboardingSplash bool `json:"UserPreferencesHideChatterOnboardingSplash"`
	// UserPreferencesHideEndUserOnboardingAssistantModal ...
	UserPreferencesHideEndUserOnboardingAssistantModal bool `json:"UserPreferencesHideEndUserOnboardingAssistantModal"`
	// UserPreferencesHideLegacyRetirementModal ...
	UserPreferencesHideLegacyRetirementModal bool `json:"UserPreferencesHideLegacyRetirementModal"`
	// UserPreferencesHideLightningMigrationModal ...
	UserPreferencesHideLightningMigrationModal bool `json:"UserPreferencesHideLightningMigrationModal"`
	// UserPreferencesHideS1BrowserUI ...
	UserPreferencesHideS1BrowserUI bool `json:"UserPreferencesHideS1BrowserUI"`
	// UserPreferencesHideSecondChatterOnboardingSplash ...
	UserPreferencesHideSecondChatterOnboardingSplash bool `json:"UserPreferencesHideSecondChatterOnboardingSplash"`
	// UserPreferencesHideSfxWelcomeMat ...
	UserPreferencesHideSfxWelcomeMat bool `json:"UserPreferencesHideSfxWelcomeMat"`
	// UserPreferencesJigsawListUser ...
	UserPreferencesJigsawListUser bool `json:"UserPreferencesJigsawListUser"`
	// UserPreferencesLightningExperiencePreferred ...
	UserPreferencesLightningExperiencePreferred bool `json:"UserPreferencesLightningExperiencePreferred"`
	// UserPreferencesNativeEmailClient ...
	UserPreferencesNativeEmailClient bool `json:"UserPreferencesNativeEmailClient"`
	// UserPreferencesNewLightningReportRunPageEnabled ...
	UserPreferencesNewLightningReportRunPageEnabled bool `json:"UserPreferencesNewLightningReportRunPageEnabled"`
	// UserPreferencesPathAssistantCollapsed ...
	UserPreferencesPathAssistantCollapsed bool `json:"UserPreferencesPathAssistantCollapsed"`
	// UserPreferencesPreviewCustomTheme ...
	UserPreferencesPreviewCustomTheme bool `json:"UserPreferencesPreviewCustomTheme"`
	// UserPreferencesPreviewLightning ...
	UserPreferencesPreviewLightning bool `json:"UserPreferencesPreviewLightning"`
	// UserPreferencesReceiveNoNotificationsAsApprover ...
	UserPreferencesReceiveNoNotificationsAsApprover bool `json:"UserPreferencesReceiveNoNotificationsAsApprover"`
	// UserPreferencesReceiveNotificationsAsDelegatedApprover ...
	UserPreferencesReceiveNotificationsAsDelegatedApprover bool `json:"UserPreferencesReceiveNotificationsAsDelegatedApprover"`
	// UserPreferencesRecordHomeReservedWTShown ...
	UserPreferencesRecordHomeReservedWTShown bool `json:"UserPreferencesRecordHomeReservedWTShown"`
	// UserPreferencesRecordHomeSectionCollapseWTShown ...
	UserPreferencesRecordHomeSectionCollapseWTShown bool `json:"UserPreferencesRecordHomeSectionCollapseWTShown"`
	// UserPreferencesReminderSoundOff ...
	UserPreferencesReminderSoundOff bool `json:"UserPreferencesReminderSoundOff"`
	// UserPreferencesSRHOverrideActivities ...
	UserPreferencesSRHOverrideActivities bool `json:"UserPreferencesSRHOverrideActivities"`
	// UserPreferencesShowCityToExternalUsers ...
	UserPreferencesShowCityToExternalUsers bool `json:"UserPreferencesShowCityToExternalUsers"`
	// UserPreferencesShowCityToGuestUsers ...
	UserPreferencesShowCityToGuestUsers bool `json:"UserPreferencesShowCityToGuestUsers"`
	// UserPreferencesShowCountryToExternalUsers ...
	UserPreferencesShowCountryToExternalUsers bool `json:"UserPreferencesShowCountryToExternalUsers"`
	// UserPreferencesShowCountryToGuestUsers ...
	UserPreferencesShowCountryToGuestUsers bool `json:"UserPreferencesShowCountryToGuestUsers"`
	// UserPreferencesShowEmailToExternalUsers ...
	UserPreferencesShowEmailToExternalUsers bool `json:"UserPreferencesShowEmailToExternalUsers"`
	// UserPreferencesShowEmailToGuestUsers ...
	UserPreferencesShowEmailToGuestUsers bool `json:"UserPreferencesShowEmailToGuestUsers"`
	// UserPreferencesShowFaxToExternalUsers ...
	UserPreferencesShowFaxToExternalUsers bool `json:"UserPreferencesShowFaxToExternalUsers"`
	// UserPreferencesShowFaxToGuestUsers ...
	UserPreferencesShowFaxToGuestUsers bool `json:"UserPreferencesShowFaxToGuestUsers"`
	// UserPreferencesShowManagerToExternalUsers ...
	UserPreferencesShowManagerToExternalUsers bool `json:"UserPreferencesShowManagerToExternalUsers"`
	// UserPreferencesShowManagerToGuestUsers ...
	UserPreferencesShowManagerToGuestUsers bool `json:"UserPreferencesShowManagerToGuestUsers"`
	// UserPreferencesShowMobilePhoneToExternalUsers ...
	UserPreferencesShowMobilePhoneToExternalUsers bool `json:"UserPreferencesShowMobilePhoneToExternalUsers"`
	// UserPreferencesShowMobilePhoneToGuestUsers ...
	UserPreferencesShowMobilePhoneToGuestUsers bool `json:"UserPreferencesShowMobilePhoneToGuestUsers"`
	// UserPreferencesShowPostalCodeToExternalUsers ...
	UserPreferencesShowPostalCodeToExternalUsers bool `json:"UserPreferencesShowPostalCodeToExternalUsers"`
	// UserPreferencesShowPostalCodeToGuestUsers ...
	UserPreferencesShowPostalCodeToGuestUsers bool `json:"UserPreferencesShowPostalCodeToGuestUsers"`
	// UserPreferencesShowProfilePicToGuestUsers ...
	UserPreferencesShowProfilePicToGuestUsers bool `json:"UserPreferencesShowProfilePicToGuestUsers"`
	// UserPreferencesShowStateToExternalUsers ...
	UserPreferencesShowStateToExternalUsers bool `json:"UserPreferencesShowStateToExternalUsers"`
	// UserPreferencesShowStateToGuestUsers ...
	UserPreferencesShowStateToGuestUsers bool `json:"UserPreferencesShowStateToGuestUsers"`
	// UserPreferencesShowStreetAddressToExternalUsers ...
	UserPreferencesShowStreetAddressToExternalUsers bool `json:"UserPreferencesShowStreetAddressToExternalUsers"`
	// UserPreferencesShowStreetAddressToGuestUsers ...
	UserPreferencesShowStreetAddressToGuestUsers bool `json:"UserPreferencesShowStreetAddressToGuestUsers"`
	// UserPreferencesShowTitleToExternalUsers ...
	UserPreferencesShowTitleToExternalUsers bool `json:"UserPreferencesShowTitleToExternalUsers"`
	// UserPreferencesShowTitleToGuestUsers ...
	UserPreferencesShowTitleToGuestUsers bool `json:"UserPreferencesShowTitleToGuestUsers"`
	// UserPreferencesShowWorkPhoneToExternalUsers ...
	UserPreferencesShowWorkPhoneToExternalUsers bool `json:"UserPreferencesShowWorkPhoneToExternalUsers"`
	// UserPreferencesShowWorkPhoneToGuestUsers ...
	UserPreferencesShowWorkPhoneToGuestUsers bool `json:"UserPreferencesShowWorkPhoneToGuestUsers"`
	// UserPreferencesSortFeedByComment ...
	UserPreferencesSortFeedByComment bool `json:"UserPreferencesSortFeedByComment"`
	// UserPreferencesSuppressEventSFXReminders ...
	UserPreferencesSuppressEventSFXReminders bool `json:"UserPreferencesSuppressEventSFXReminders"`
	// UserPreferencesSuppressTaskSFXReminders ...
	UserPreferencesSuppressTaskSFXReminders bool `json:"UserPreferencesSuppressTaskSFXReminders"`
	// UserPreferencesTaskRemindersCheckboxDefault ...
	UserPreferencesTaskRemindersCheckboxDefault bool `json:"UserPreferencesTaskRemindersCheckboxDefault"`
	// UserPreferencesUserDebugModePref ...
	UserPreferencesUserDebugModePref bool `json:"UserPreferencesUserDebugModePref"`
	// UserRoleID ...
	UserRoleID types.NullableString `json:"UserRoleId"`
	// UserType ...
	UserType types.NullableString `json:"UserType"`
	// Username ...
	Username string `json:"Username"`
}

// UserEmailPreferredPerson ...
//
// Represents a mapping for a user’s preferred record for an email address when multiple records match an
// email field.This object is available in API version 44.0 and later.
type UserEmailPreferredPerson struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Email ...
	//
	// Required. The unique email the mapping applies to. This field is unique for each user.
	//
	//
	// Properties:Create, Filter,Group, idLookup, Sort, Update
	Email string `json:"Email"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Name ...
	//
	// Read-only. Auto-generated field.
	//
	// Properties:Autonumber, Defaulted on create, Filter,
	// idLookup, Sort
	Name string `json:"Name"`
	// OwnerID ...
	//
	// Required. The userId that owns the record. Each record is only accessible to the owner.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// PersonRecordID ...
	//
	// Required. The recordId of a contact, lead, or user that represents the preferred record for the email
	// address. Use cascade delete for contact and lead, and delete if the personId is a deactivated user record.
	//
	//
	// Properties:Create, Filter, Group, Sort, Update
	PersonRecordID string `json:"PersonRecordId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}
