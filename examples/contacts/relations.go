package contacts

// THIS PACKAGE IS AUTOGENERATED DO NOT EDIT

import (
	"encoding/json"

	"github.com/b3ntly/salesforce/types"
)

// AcceptedEventRelation ...
//
// Represents event participants (invitees or attendees) with the status Accepted for a given event.
type AcceptedEventRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EventID ...
	//
	// Indicates the ID of the event.
	//
	// Properties:Filter, Group, Nillable, Sort
	EventID types.NullableString `json:"EventId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RelationID ...
	//
	// Indicates the ID of the invitee.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationID types.NullableString `json:"RelationId"`
	// RespondedDate ...
	//
	// Indicates the most recent date and time when the invitee accepted an invitation to the event.
	//
	//
	// Properties:Filter, Nillable, Sort
	RespondedDate types.Datetime `json:"RespondedDate"`
	// Response ...
	//
	// Indicates the content of the response field. Label is Comment.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Response types.NullableString `json:"Response"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Type ...
	//
	// Indicates whether the invitee is a user, lead or contact, or resource.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	Type types.NullableString `json:"Type"`
}

// Account ...
//
// Represents an individual account, which is an organization or person involved with your business (such as
// customers, competitors, and partners).
type Account struct {
	// AccountNumber ...
	//
	// Account number assigned to this account (not the unique, system-generated ID assigned during creation).
	// Maximum size is 40 characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	AccountNumber types.NullableString `json:"AccountNumber"`
	// AccountSource ...
	//
	// The source of the account record. For example, Advertisement, Data.com, or Trade Show. The source is
	// selected from a picklist of available values, which are set by an administrator. Each picklist value can have up to 40
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	AccountSource types.NullableString `json:"AccountSource"`
	// Active__c ...
	Active__c types.NullableString `json:"Active__c"`
	// AnnualRevenue ...
	//
	// Estimated annual revenue of the account.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	AnnualRevenue types.NullableFloat64 `json:"AnnualRevenue"`
	// BillingAddress ...
	//
	// The compound form of the billing address. Read-only. See Address Compound Fields for details on compound
	// address fields.
	//
	// Properties:Filter, Nillable
	BillingAddress types.Address `json:"BillingAddress"`
	// BillingCity ...
	//
	// Details for the billing address of this account. Maximum size is 40 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingCity types.NullableString `json:"BillingCity"`
	// BillingCountry ...
	//
	// Details for the billing address of this account. Maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingCountry types.NullableString `json:"BillingCountry"`
	// BillingGeocodeAccuracy ...
	//
	// Accuracy level of the geocode for the billing address. See Compound Field Considerations and Limitations
	// for details on geolocation compound fields.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	BillingGeocodeAccuracy types.NullableString `json:"BillingGeocodeAccuracy"`
	// BillingLatitude ...
	//
	// Used with BillingLongitude to specify the precise geolocation of a billing address. Acceptable values
	// are numbers between –90 and 90 with up to 15 decimal places. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	BillingLatitude types.NullableFloat64 `json:"BillingLatitude"`
	// BillingLongitude ...
	//
	// Used with BillingLatitude to specify the precise geolocation of a billing address. Acceptable values are
	// numbers between –180 and 180 with up to 15 decimal places. See Compound Field Considerations and Limitations for
	// details on geolocation compound fields.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	BillingLongitude types.NullableFloat64 `json:"BillingLongitude"`
	// BillingPostalCode ...
	//
	// Details for the billing address of this account. Maximum size is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingPostalCode types.NullableString `json:"BillingPostalCode"`
	// BillingState ...
	//
	// Details for the billing address of this account. Maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingState types.NullableString `json:"BillingState"`
	// BillingStreet ...
	//
	// Street address for the billing address of this account.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	BillingStreet types.NullableString `json:"BillingStreet"`
	// CleanStatus ...
	//
	// Indicates the record’s clean status as compared with Data.com. Values are: Matched, Different,
	// Acknowledged, NotFound, Inactive, Pending, SelectMatch, or Skipped.Several values for CleanStatus display with
	// different labels on the account record detail page. Matched displays as In Sync Acknowledged displays as Reviewed
	// Pending displays as Not Compared
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist,
	// Sort, Update
	CleanStatus types.NullableString `json:"CleanStatus"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// CustomerPriority__c ...
	CustomerPriority__c types.NullableString `json:"CustomerPriority__c"`
	// DandbCompanyID ...
	DandbCompanyID types.NullableString `json:"DandbCompanyId"`
	// Description ...
	//
	// Text description of the account. Limited to 32,000 KB.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// DunsNumber ...
	//
	// The Data Universal Numbering System (D-U-N-S) number is a unique, nine-digit number assigned to every
	// business location in the Dun & Bradstreet database that has a unique, separate, and distinct operation. D-U-N-S
	// numbers are used by industries and organizations around the world as a global standard for business
	// identification and tracking. Maximum size is 9 characters. This field is available on business accounts, not person
	// accounts. Note This field is only available to organizations that use Data.com Prospector or Data.com
	// Clean.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	DunsNumber types.NullableString `json:"DunsNumber"`
	// Fax ...
	//
	// Fax number for the account.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Fax types.NullableString `json:"Fax"`
	// ID ...
	ID string `json:"Id"`
	// Industry ...
	//
	// An industry associated with this account. Maximum size is 40 characters.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	Industry types.NullableString `json:"Industry"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// Jigsaw ...
	//
	// References the ID of a company in Data.com. If an account has a value in this field, it means that the account
	// was imported from Data.com. If the field value is null, the account was not imported from Data.com. Maximum
	// size is 20 characters. Available in API version 22.0 and later. Label is Data.com Key. This field is available on
	// business accounts, not person accounts. Important The Jigsaw field is exposed in the API to support
	// troubleshooting for import errors and reimporting of corrected data. Do not modify the value in the Jigsaw field.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Jigsaw types.NullableString `json:"Jigsaw"`
	// JigsawCompanyID ...
	JigsawCompanyID types.NullableString `json:"JigsawCompanyId"`
	// LastActivityDate ...
	//
	// Value is one of the following, whichever is the most recent: Due date of the most recent event logged against
	// the record. Due date of the most recently closed task associated with the record.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	LastActivityDate types.Date `json:"LastActivityDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp when the current user last accessed this record, a record related to this record, or a list
	// view.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp when the current user last viewed this record or list view. If this value is null, the user
	// might have only accessed this record or list view (LastReferencedDate) but not viewed it.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// MasterRecordID ...
	//
	// If this object was deleted as the result of a merge, this field contains the ID of the record that was kept. If
	// this object was deleted for any other reason, or has not been deleted, the value is null.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	MasterRecordID types.NullableString `json:"MasterRecordId"`
	// NaicsCode ...
	//
	// The six-digit North American Industry Classification System (NAICS) code is the standard used by
	// business and government to classify business establishments into industries, according to their economic
	// activity for the purpose of collecting, analyzing, and publishing statistical data related to the U.S. business
	// economy. Maximum size is 8 characters. This field is available on business accounts, not person accounts. Note This
	// field is only available to organizations that use Data.com Prospector or Data.com Clean.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	NaicsCode types.NullableString `json:"NaicsCode"`
	// NaicsDesc ...
	//
	// A brief description of an org’s line of business, based on its NAICS code. Maximum size is 120 characters.
	// This field is available on business accounts, not person accounts. Note This field is only available to
	// organizations that use Data.com Prospector or Data.com Clean.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	NaicsDesc types.NullableString `json:"NaicsDesc"`
	// Name ...
	//
	// Required. Label is Account Name. Name of the account. Maximum size is 255 characters. If the account has a
	// record type of Person Account: This value is the concatenation of the FirstName, MiddleName, LastName, and
	// Suffix of the associated person contact. You can't modify this value.
	//
	// Properties:Create, Filter,
	// Group, Sort, Update
	Name string `json:"Name"`
	// NumberOfEmployees ...
	//
	// Label is Employees. Number of employees working at the company represented by this account. Maximum size
	// is eight digits.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	NumberOfEmployees types.NullableInt `json:"NumberOfEmployees"`
	// NumberofLocations__c ...
	NumberofLocations__c types.NullableFloat64 `json:"NumberofLocations__c"`
	// OperatingHoursID ...
	//
	// The operating hours associated with the account. Available only if Field Service is enabled.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	OperatingHoursID types.NullableString `json:"OperatingHoursId"`
	// OwnerID ...
	//
	// The ID of the user who currently owns this account. Default value is the user logged in to the API to perform
	// the create.If you have set up account teams in your org, updating this field has different consequences
	// depending on your version of the API: For API version 12.0 and later, sharing records are kept, as they are for all
	// objects. For API version before 12.0, sharing records are deleted. For API version 16.0 and later, users must have
	// the “Transfer Record” permission in order to update (transfer) account ownership using this
	// field.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Ownership ...
	//
	// Ownership type for the account, for example Private, Public, or Subsidiary.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Ownership types.NullableString `json:"Ownership"`
	// ParentID ...
	//
	// ID of the parent object, if any.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ParentID types.NullableString `json:"ParentId"`
	// Phone ...
	//
	// Phone number for this account. Maximum size is 40 characters.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Phone types.NullableString `json:"Phone"`
	// PhotoURL ...
	//
	// Path to be combined with the URL of a Salesforce instance (for example,
	// https://yourInstance.salesforce.com/) to generate a URL to request the social network profile image associated with the account. Generated URL
	// returns an HTTP redirect (code 302) to the social network profile image for the account. Blank if Social Accounts
	// and Contacts isn't enabled for the org or if Social Accounts and Contacts is disabled for the requesting
	// user.
	//
	// Properties:Filter, Group, Nillable, Sort
	PhotoURL types.NullableString `json:"PhotoUrl"`
	// Rating ...
	//
	// The account’s prospect rating, for example Hot, Warm, or Cold.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Rating types.NullableString `json:"Rating"`
	// SLAExpirationDate__c ...
	SLAExpirationDate__c types.Date `json:"SLAExpirationDate__c"`
	// SLASerialNumber__c ...
	SLASerialNumber__c types.NullableString `json:"SLASerialNumber__c"`
	// SLA__c ...
	SLA__c types.NullableString `json:"SLA__c"`
	// ShippingAddress ...
	//
	// The compound form of the shipping address. Read-only. See Address Compound Fields for details on compound
	// address fields.
	//
	// Properties:Filter, Nillable
	ShippingAddress types.Address `json:"ShippingAddress"`
	// ShippingCity ...
	//
	// Details of the shipping address for this account. City maximum size is 40 characters
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingCity types.NullableString `json:"ShippingCity"`
	// ShippingCountry ...
	//
	// Details of the shipping address for this account. Country maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingCountry types.NullableString `json:"ShippingCountry"`
	// ShippingGeocodeAccuracy ...
	//
	// Accuracy level of the geocode for the shipping address. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	ShippingGeocodeAccuracy types.NullableString `json:"ShippingGeocodeAccuracy"`
	// ShippingLatitude ...
	//
	// Used with ShippingLongitude to specify the precise geolocation of a shipping address. Acceptable values
	// are numbers between –90 and 90 with up to 15 decimal places. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	ShippingLatitude types.NullableFloat64 `json:"ShippingLatitude"`
	// ShippingLongitude ...
	//
	// Used with ShippingLatitude to specify the precise geolocation of an address. Acceptable values are
	// numbers between –180 and 180 with up to 15 decimal places. See Compound Field Considerations and Limitations for
	// details on geolocation compound fields.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ShippingLongitude types.NullableFloat64 `json:"ShippingLongitude"`
	// ShippingPostalCode ...
	//
	// Details of the shipping address for this account. Postal code maximum size is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingPostalCode types.NullableString `json:"ShippingPostalCode"`
	// ShippingState ...
	//
	// Details of the shipping address for this account. State maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingState types.NullableString `json:"ShippingState"`
	// ShippingStreet ...
	//
	// The street address of the shipping address for this account. Maximum of 255 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShippingStreet types.NullableString `json:"ShippingStreet"`
	// Sic ...
	//
	// Standard Industrial Classification code of the company’s main business categorization, for example,
	// 57340 for Electronics. Maximum of 20 characters. This field is available on business accounts, not person
	// accounts.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Sic types.NullableString `json:"Sic"`
	// SicDesc ...
	//
	// A brief description of an org’s line of business, based on its SIC code. Maximum length is 80 characters.
	// This field is available on business accounts, not person accounts.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	SicDesc types.NullableString `json:"SicDesc"`
	// Site ...
	//
	// Name of the account’s location, for example Headquarters or London. Label is Account Site. Maximum of 80
	// characters.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Site types.NullableString `json:"Site"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TickerSymbol ...
	//
	// The stock market symbol for this account. Maximum of 20 characters. This field is available on business
	// accounts, not person accounts.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	TickerSymbol types.NullableString `json:"TickerSymbol"`
	// Tradestyle ...
	//
	// A name, different from its legal name, that an org may use for conducting business. Similar to “Doing
	// business as” or “DBA”. Maximum length is 255 characters. This field is available on business accounts, not
	// person accounts. Note This field is only available to organizations that use Data.com Prospector or Data.com
	// Clean.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Tradestyle types.NullableString `json:"Tradestyle"`
	// Type ...
	//
	// Type of account, for example, Customer, Competitor, or Partner.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Type types.NullableString `json:"Type"`
	// UpsellOpportunity__c ...
	UpsellOpportunity__c types.NullableString `json:"UpsellOpportunity__c"`
	// Website ...
	//
	// The website of this account. Maximum of 255 characters.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Website types.NullableString `json:"Website"`
	// YearStarted ...
	//
	// The date when an org was legally established. Maximum length is 4 characters. This field is available on
	// business accounts, not person accounts. Note This field is only available to organizations that use Data.com
	// Prospector or Data.com Clean.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	YearStarted types.NullableString `json:"YearStarted"`
}

// AccountContactRole ...
//
// Represents the role that a Contact plays on an Account.
type AccountContactRole struct {
	// AccountID ...
	//
	// Required. ID of the Account.
	//
	// Properties:Create, Filter, Group, Sort
	AccountID string `json:"AccountId"`
	// ContactID ...
	//
	// Required. ID of the Contact associated with this account.
	//
	// Properties:Create, Filter, Group,
	// Sort, Update
	ContactID string `json:"ContactId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsPrimary ...
	//
	// Specifies whether the Contact plays the primary role on the Account (true) or not (false). Note that each
	// account has only one primary contact role. Label is Primary. Default value is false.
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Sort, Update
	IsPrimary bool `json:"IsPrimary"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Role ...
	//
	// Name of the role played by the Contact on this Account, such as Decision Maker, Approver, Buyer, and so on.
	// Must be uniquethere can't be multiple records in which the AccountId, ContactId, and Role values are
	// identical. Different contacts can play the same role on the same account. A contact can play different roles on the same
	// account.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Role types.NullableString `json:"Role"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// ActivityHistory ...
//
// This read-only object is displayed in a related list of closed activitiespast events and closed
// tasksrelated to an object. It includes activities for all contacts related to the object. ActivityHistory fields for
// phone calls are only available if your organization uses Salesforce CRM Call Center.
type ActivityHistory struct {
	// AccountID ...
	//
	// Indicates the ID of the related account, which is determined as follows: The account associated with the
	// WhatId, if it exists; or The account associated with the WhoId, if it exists; otherwise null For information on IDs,
	// see ID Field Type.
	//
	// Properties:Filter, Group, Nillable, Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActivityDate ...
	//
	// Indicates one of the following: The due date of a task The due date of an event if IsAllDayEvent is set to
	// true
	// This field has a time stamp that is always set to midnight in the Universal Time Coordinated (UTC) time zone.
	// The time stamp doesn’t represent the time of the activity; don’t attempt to alter it to accommodate time
	// zone differences. Label is Date.

	//
	// Properties:Filter, Group, Nillable, Sort
	ActivityDate types.Date `json:"ActivityDate"`
	// ActivityDateTime ...
	//
	// Contains the event’s due date if the IsAllDayEvent flag is set to false. The time portion of this field is
	// always transferred in the Coordinated Universal Time (UTC) time zone. Translate the time portion to or from a
	// local time zone for the user or the application, as appropriate. Label is Due Date Time.The value for this field
	// and StartDateTime must match, or one of them must be null.
	//
	// Properties:Aggregate, Filter, Nillable,
	// Sort
	ActivityDateTime types.Datetime `json:"ActivityDateTime"`
	// ActivitySubtype ...
	//
	// Provides standard subtypes to facilitate creating and searching for specific activity subtypes. This
	// field isn’t updateable. ActivitySubtype values: Task Email Call Event List Email
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ActivitySubtype types.NullableString `json:"ActivitySubtype"`
	// ActivityType ...
	//
	// Represents one of the following values: Call, Email, Meeting, or Other. Label is Type. These are default
	// values, and can be changed.
	//
	// Properties:Filter, Group, Nillable, Sort
	ActivityType types.NullableString `json:"ActivityType"`
	// AlternateDetailID ...
	//
	// The ID of a record the activity is related to which contains more details about the activity. For example, an
	// activity can be related to an EmailMessage record.
	//
	// Properties:Filter, Group, Nillable, Sort
	AlternateDetailID types.NullableString `json:"AlternateDetailId"`
	// CallDisposition ...
	//
	// Represents the result of a given call, for example, “we'll call back,” or “call unsuccessful.”
	// Limit is 255 characters.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallDisposition types.NullableString `json:"CallDisposition"`
	// CallDurationInSeconds ...
	//
	// Duration of the call in seconds.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallDurationInSeconds types.NullableInt `json:"CallDurationInSeconds"`
	// CallObject ...
	//
	// Name of a call center. Limit is 255 characters.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallObject types.NullableString `json:"CallObject"`
	// CallType ...
	//
	// The type of call being answered: Inbound, Internal, or Outbound.
	//
	// Properties:Filter, Group,
	// Nillable, Restricted picklist, Sort
	CallType types.NullableString `json:"CallType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Contains a description of the event or task. Limit is 32 KB.
	//
	// Properties:Nillable
	Description types.NullableString `json:"Description"`
	// DurationInMinutes ...
	//
	// Indicates the duration of the event or task.
	//
	// Properties:Filter, Group, Nillable, Sort
	DurationInMinutes types.NullableInt `json:"DurationInMinutes"`
	// EndDateTime ...
	//
	// Indicates the end date and time of the event or task. Available in versions 27.0 and later. This field is
	// optional, depending on the following: If IsAllDayEvent is true, you can supply a value for either DurationInMinutes
	// or EndDateTime. Supplying values in both fields is allowed if the values add up to the same amount of time. If
	// both fields are null, the duration defaults to one day. If IsAllDayEvent is false, a value must be supplied for
	// either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if the values add up to the
	// same amount of time.
	//
	// Properties:Filter, Nillable, Sort
	EndDateTime types.Datetime `json:"EndDateTime"`
	// ID ...
	ID string `json:"Id"`
	// IsAllDayEvent ...
	//
	// If the value of this field is set to true, then the activity is an event spanning a full day, and the
	// ActivityDate defines the date of the event. If the value of this field is set to false, then the activity may be an event
	// spanning less than a full day, or it may be a task. Label is All-Day Event.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsAllDayEvent bool `json:"IsAllDayEvent"`
	// IsClosed ...
	//
	// Indicates whether a task is closed; value is always true. This field is set indirectly by setting the Status
	// field on the taskeach picklist value has a corresponding IsClosed value. Label is Closed.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	//
	// Indicates whether the activity has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsDeleted bool `json:"IsDeleted"`
	// IsHighPriority ...
	//
	// Indicates a high-priority task. This field is derived from the Priority field.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsHighPriority bool `json:"IsHighPriority"`
	// IsReminderSet ...
	//
	// Indicates whether a reminder is set for an activity (true) or not (false).
	//
	// Properties:Defaulted
	// on create, Filter, Group, Sort
	IsReminderSet bool `json:"IsReminderSet"`
	// IsTask ...
	//
	// If the value of this field is set to true, then the activity is a task. If the value is set to false, then the
	// activity is an event. Label is Task.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsTask bool `json:"IsTask"`
	// IsVisibleInSelfService ...
	//
	// If the value of this field is set to true, then the activity can be viewed in the self-service portal. Label is
	// Visible in Self-Service.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsVisibleInSelfService bool `json:"IsVisibleInSelfService"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Location ...
	//
	// If the activity is an event, then this field contains the location of the event. If the activity is a task,
	// then the value is null.
	//
	// Properties:Filter, Group, Nillable, Sort
	Location types.NullableString `json:"Location"`
	// OwnerID ...
	//
	// Indicates the ID of the user or group who owns the activity.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	OwnerID types.NullableString `json:"OwnerId"`
	// Priority ...
	//
	// Indicates the priority of a task, such as high, normal, or low.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Nillable, Sort
	Priority types.NullableString `json:"Priority"`
	// ReminderDateTime ...
	//
	// Represents the time when the reminder is scheduled to fire, if IsReminderSet is set to true. If
	// IsReminderSet is set to false, then the user may have deselected the reminder checkbox in the Salesforce user interface,
	// or the reminder has already fired at the time indicated by the value.
	//
	// Properties:Filter, Nillable,
	// Sort
	ReminderDateTime types.Datetime `json:"ReminderDateTime"`
	// StartDateTime ...
	//
	// Indicates the start date and time of the event. Available in versions 29.0 and later. If the event’s
	// IsAllDayEvent flag is set to true (indicating an all-day event), then the time stamp in StartDateTime is always set to
	// midnight in the Coordinated Universal Time (UTC) time zone. Note Don’t attempt to alter the time stamp to account
	// for any time zone differences. If the event’s IsAllDayEvent flag is set to false, then you must translate the
	// time portion of the time stamp in StartDateTime to or from a local time zone for the user or the application, as
	// appropriate. The translation must be in the Coordinated Universal Time (UTC) time zone. If this field has a value, then
	// ActivityDate and ActivityDateTime either must be null or must match the value of this field. If the activity is a task,
	// StartDateTime is null
	//
	// Properties:Filter, Nillable, Sort
	StartDateTime types.Datetime `json:"StartDateTime"`
	// Status ...
	//
	// Indicates the current status of a task, such as in progress or complete. Each predefined status field sets a
	// value for IsClosed. To obtain picklist values, query TaskStatus.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Nillable, Sort
	Status types.NullableString `json:"Status"`
	// Subject ...
	//
	// Contains the subject of the task or event.
	//
	// Properties:Filter, Nillable, Sort
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WhatID ...
	//
	// The WhatId represents nonhuman objects such as accounts, opportunities, campaigns, cases, or custom
	// objects. WhatIds are polymorphic. Polymorphic means a WhatId is equivalent to the ID of a related object. The label
	// is Related To ID.
	//
	// Properties:Filter, Group, Nillable, Sort
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID. If Shared Activities is enabled, the
	// value of this field is the ID of the related lead or primary contact. If you add, update, or remove the WhoId field,
	// you might encounter problems with triggers, workflows, and data validation rules that are associated with
	// the record. The label is Name ID. If your organization uses Shared Activities, when you query activities in API
	// version 30.0 or later, the returned value of the WhoId field matches the value in the queried object, not
	// necessarily in the activity record itself. If Shared Activities is enabled, the value of this field is not populated and
	// the field PrimaryWhoId should be queried instead.
	//
	// Properties:Filter, Group, Nillable, Sort
	WhoID types.NullableString `json:"WhoId"`
}

// Asset ...
//
// Represents an item of commercial value, such as a product sold by your company or a competitor, that a
// customer has purchased and installed.
type Asset struct {
	// AccountID ...
	//
	// (Required) ID of the Account associated with this asset. Must be a valid account ID. Required if ContactId
	// isn’t specified.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	AccountID types.NullableString `json:"AccountId"`
	// AssetLevel ...
	//
	// The asset’s position in an asset hierarchy. If the asset has no parent or child assets, its level is 1.
	// Assets that belong to a hierarchy have a level of 1 for the root asset, 2 for the child assets of the root asset, 3 for
	// their children, and so forth. Note On assets created before the introduction of this field, the asset level
	// defaults to –1. After the asset record is updated, the asset level is calculated and automatically
	// updated.
	//
	// Properties:Filter, Group, Nillable, Sort
	AssetLevel types.NullableInt `json:"AssetLevel"`
	// AssetProvidedByID ...
	//
	// The account that provided the asset, typically a manufacturer.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	AssetProvidedByID types.NullableString `json:"AssetProvidedById"`
	// AssetServicedByID ...
	//
	// The account in charge of servicing the asset.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	AssetServicedByID types.NullableString `json:"AssetServicedById"`
	// ContactID ...
	//
	// Required if AccountId isn’t specified. ID of the Contact associated with this asset. Must be a valid
	// contact ID that has an account parent (but doesn’t need to match the asset’s AccountId).
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ContactID types.NullableString `json:"ContactId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// CurrentAmount ...
	CurrentAmount types.NullableFloat64 `json:"CurrentAmount"`
	// CurrentLifecycleEndDate ...
	CurrentLifecycleEndDate types.Datetime `json:"CurrentLifecycleEndDate"`
	// CurrentMrr ...
	CurrentMrr types.NullableFloat64 `json:"CurrentMrr"`
	// CurrentQuantity ...
	CurrentQuantity types.NullableFloat64 `json:"CurrentQuantity"`
	// Description ...
	//
	// Description of the asset.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// HasLifecycleManagement ...
	HasLifecycleManagement bool `json:"HasLifecycleManagement"`
	// ID ...
	ID string `json:"Id"`
	// InstallDate ...
	//
	// Date when the asset was installed.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	InstallDate types.Date `json:"InstallDate"`
	// IsCompetitorProduct ...
	//
	// Indicates whether this Asset represents a product sold by a competitor (true) or not (false). Default
	// value is false. Its UI label is Competitor Asset.
	//
	// Properties:Create, Defaulted on create, Filter,
	// Group, Sort, Update
	IsCompetitorProduct bool `json:"IsCompetitorProduct"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsInternal ...
	//
	// Indicates that the asset is produced or used internally (true) or not (false). Default value is false. Its
	// UI label is Internal Asset.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsInternal bool `json:"IsInternal"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The date and time that the asset was last modified. Its UI label is Last Modified Date.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The date and time that the asset was last viewed.
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// LifecycleEndDate ...
	LifecycleEndDate types.Datetime `json:"LifecycleEndDate"`
	// LifecycleStartDate ...
	LifecycleStartDate types.Datetime `json:"LifecycleStartDate"`
	// Name ...
	//
	// (Required) Name of the asset. Label is Asset Name.
	//
	// Properties:Create, Filter, Group, idLookup,
	// Sort, Update
	Name string `json:"Name"`
	// OwnerID ...
	//
	// The asset’s owner. By default, the asset owner is the user who created the asset record. Its UI label is
	// Asset Owner.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// ParentID ...
	//
	// The asset’s parent asset. Its UI label is Parent Asset.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	ParentID types.NullableString `json:"ParentId"`
	// Price ...
	//
	// Price paid for this asset.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Price types.NullableFloat64 `json:"Price"`
	// Product2ID ...
	//
	// (Optional) ID of the Product2 associated with this asset. Must be a valid Product2 ID. Its UI label is
	// Product.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Product2ID types.NullableString `json:"Product2Id"`
	// ProductCode ...
	//
	// The product code of the related product.
	//
	// Properties:Filter, Group, Nillable, Sort
	ProductCode types.NullableString `json:"ProductCode"`
	// PurchaseDate ...
	//
	// Date on which this asset was purchased.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	PurchaseDate types.Date `json:"PurchaseDate"`
	// Quantity ...
	//
	// Quantity purchased or installed.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Quantity types.NullableFloat64 `json:"Quantity"`
	// RootAssetID ...
	//
	// (Read only) The top-level asset in an asset hierarchy. Depending on where an asset lies in the hierarchy,
	// its root could be the same as its parent. Its UI label is Root Asset.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	RootAssetID types.NullableString `json:"RootAssetId"`
	// SerialNumber ...
	//
	// Serial number for this asset.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SerialNumber types.NullableString `json:"SerialNumber"`
	// Status ...
	//
	// Customizable picklist of values. The default picklist includes the following values: Purchased Shipped
	// Installed Registered Obsolete
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Status types.NullableString `json:"Status"`
	// StockKeepingUnit ...
	//
	// The SKU assigned to the related product.
	//
	// Properties:Filter, Group, Nillable, Sort
	StockKeepingUnit types.NullableString `json:"StockKeepingUnit"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TotalLifecycleAmount ...
	//
	// The total amount of revenue for the asset, including revenue from each stage in the asset
	// lifecycle.
	//
	// Properties:Filter, Nillable, Sort
	TotalLifecycleAmount types.NullableFloat64 `json:"TotalLifecycleAmount"`
	// UsageEndDate ...
	//
	// Date when usage for this asset ends or expires.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	UsageEndDate types.Date `json:"UsageEndDate"`
}

// AttachedContentDocument ...
//
// This read-only object contains all ContentDocument objects associated with an object.
type AttachedContentDocument struct {
	// ContentDocumentID ...
	//
	// ID of the attached ContentDocument.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContentDocumentID types.NullableString `json:"ContentDocumentId"`
	// ContentSize ...
	//
	// Size of the document in bytes.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContentSize types.NullableInt `json:"ContentSize"`
	// ContentURL ...
	//
	// URL for links and Google Docs. This field is set only for links and Google Docs, and is one of the fields that
	// determine the FileType. This field is available in API version 31.0 and later.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	ContentURL types.NullableString `json:"ContentUrl"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ExternalDataSourceName ...
	//
	// Name of the external data source in which the document is stored. This field is set only for external
	// documents that are connected to Salesforce.This field is available in API version 32.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ExternalDataSourceName types.NullableString `json:"ExternalDataSourceName"`
	// ExternalDataSourceType ...
	//
	// Type of external data source in which the document is stored. This field is set only for external documents
	// that are connected to Salesforce.This field is available in APIAPI version 35.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ExternalDataSourceType types.NullableString `json:"ExternalDataSourceType"`
	// FileExtension ...
	//
	// File extension of the attached ContentDocument. This field is available in API version 31.0 and
	// later.
	//
	// Properties:Filter, Group, Nillable, Sort
	FileExtension types.NullableString `json:"FileExtension"`
	// FileType ...
	//
	// Type of document, determined by the file extension.
	//
	// Properties:Filter, Group, Nillable, Sort
	FileType types.NullableString `json:"FileType"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LinkedEntityID ...
	//
	// ID of the record the ContentDocument is attached to.
	//
	// Properties:Filter, Group, Sort
	LinkedEntityID string `json:"LinkedEntityId"`
	// SharingOption ...
	//
	// Controls whether or not sharing is frozen for a file. Only administrators and file owners with
	// Collaborator access to the file can modify this field. Default is Allowed, which means that new shares are allowed. When
	// set to Restricted, new shares are prevented without affecting existing shares.This field is available in API
	// versions 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Nillable, Restricted
	// picklist, Sort
	SharingOption types.NullableString `json:"SharingOption"`
	// Title ...
	//
	// Title of the attached ContentDocument.
	//
	// Properties:Filter, Group, idLookup, Sort
	Title string `json:"Title"`
}

// Attachment ...
//
// Represents a file that a User has uploaded and attached to a parent object.
type Attachment struct {
	// Body ...
	//
	// Required. Encoded file data.
	//
	// Properties:Create, Update
	Body string `json:"Body"`
	// BodyLength ...
	//
	// Size of the file (in bytes).
	//
	// Properties:Filter, Group, Nillable, Sort
	BodyLength types.NullableInt `json:"BodyLength"`
	// ContentType ...
	//
	// The content type of the attachment.If the Don't allow HTML uploads as attachments or document records
	// security setting is enabled for your organization, you cannot upload files with the following file extensions:
	// .htm, .html, .htt, .htx, .mhtm, .mhtml, .shtm, .shtml, .acgi, .svg. When you insert a document or attachment
	// through the API, make sure that this field is set to the appropriate MIME type.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	ContentType types.NullableString `json:"ContentType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Description of the attachment. Maximum size is 500 characters. This field is available in API version 18.0
	// and later.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Description types.NullableString `json:"Description"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsPrivate ...
	//
	// Indicates whether this record is viewable only by the owner and administrators (true) or viewable by all
	// otherwise-allowed users (false). During a create or update call, it is possible to mark an Attachment record as private even if
	// you are not the owner. This can result in a situation in which you can no longer access the record that you just
	// inserted or updated. Label is Private.Attachments on tasks or events can't be marked private.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsPrivate bool `json:"IsPrivate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Name ...
	//
	// Required. Name of the attached file. Maximum size is 255 characters. Label is File Name.
	//
	//
	// Properties:Create, Filter, Group, idLookup, Sort, Update
	Name string `json:"Name"`
	// OwnerID ...
	//
	// ID of the User who owns the attachment. This field was required previous to release 9.0. Beginning with
	// release 9.0, it can be null on create.The owner of an attachment on a task or event must be the same as the owner of the
	// task or event.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// ParentID ...
	//
	// Required. ID of the parent object of the attachment. The following objects are supported as parents of
	// attachments: Account Asset Campaign Case Contact Contract Custom objects EmailMessage EmailTemplate Event Lead
	// Opportunity Product2 Solution Task
	//
	// Properties:Create, Filter, Group, Sort
	ParentID string `json:"ParentId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// AuthorizationFormConsent ...
//
// Represents the date and way in which a user consented to an authorization form. This object is available in
// API version 46.0 and later.
type AuthorizationFormConsent struct {
	// AuthorizationFormTextID ...
	//
	// Required. The authorization form text that the Individual consented to.
	//
	// Properties:Create,
	// Filter, Group, Sort, Update
	AuthorizationFormTextID string `json:"AuthorizationFormTextId"`
	// ConsentCapturedDateTime ...
	//
	// Required. The date and time that consent was given.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	ConsentCapturedDateTime types.Datetime `json:"ConsentCapturedDateTime"`
	// ConsentCapturedSource ...
	//
	// Required. The source through which consent was captured. For example, user@example.com,
	// www.example.com.
	//
	// Properties:Create, Filter, Group, Nillable Sort, Update
	ConsentCapturedSource types.NullableString `json:"ConsentCapturedSource"`
	// ConsentCapturedSourceType ...
	//
	// Required. The source type through which consent was captured. For example, phone, email, or
	// website.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ConsentCapturedSourceType types.NullableString `json:"ConsentCapturedSourceType"`
	// ConsentGiverID ...
	//
	// Required. The ID of the person consenting to the authorization form.
	//
	// Properties:Create,
	// Filter, Group, Sort, Update
	ConsentGiverID string `json:"ConsentGiverId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DocumentVersionID ...
	//
	// The ID of the document version for which consent is given.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	DocumentVersionID types.NullableString `json:"DocumentVersionId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp for when the current user last viewed a record related to this record.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp for when the current user last viewed this record. If this value is null, it’s possible that
	// this record was referenced (LastReferencedDate) and not viewed.
	//
	// Properties:Filter, Nillable,
	// Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Name ...
	//
	// Required. The name of the authorization form consent.
	//
	// Properties:Create, Filter, Group,
	// idLookup, Sort, Update
	Name string `json:"Name"`
	// OwnerID ...
	//
	// Required. The ID of the owner of the account associated with this customer.
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// RelatedRecordID ...
	//
	// The ID of a record showing consent of an authorization form.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	RelatedRecordID types.NullableString `json:"RelatedRecordId"`
	// Status ...
	//
	// The status of the authorization form.
	// Possible values are: Seen Signed

	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	Status types.NullableString `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// CampaignMember ...
//
// Represents the association between a campaign and either a lead or a contact.
type CampaignMember struct {
	// CampaignID ...
	//
	// Required. ID of the Campaign to which this Lead or Contact is associated.
	//
	// Properties:Create,
	// Filter, Group, Sort
	CampaignID string `json:"CampaignId"`
	// City ...
	//
	// The city for the address of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	City types.NullableString `json:"City"`
	// CompanyOrAccount ...
	//
	// The company or account of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	CompanyOrAccount types.NullableString `json:"CompanyOrAccount"`
	// ContactID ...
	//
	// Required. ID of the Contact who is associated with a Campaign.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort
	ContactID types.NullableString `json:"ContactId"`
	// Country ...
	//
	// The country for the address of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Country types.NullableString `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// The description of the associated lead or contact.
	//
	// Properties:Nillable
	Description types.NullableString `json:"Description"`
	// DoNotCall ...
	//
	// Indicates that the contact does not wish to be called.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	DoNotCall bool `json:"DoNotCall"`
	// Email ...
	//
	// Email address for the contact or lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	Email types.NullableString `json:"Email"`
	// Fax ...
	//
	// Fax number for the contact or lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	Fax types.NullableString `json:"Fax"`
	// FirstName ...
	//
	// The first name of the contact or lead.
	//
	// Properties:Filter, Group, Nillable, Sort
	FirstName types.NullableString `json:"FirstName"`
	// FirstRespondedDate ...
	//
	// Indicates the date on which the campaign member was first given a responded status.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	FirstRespondedDate types.Date `json:"FirstRespondedDate"`
	// HasOptedOutOfEmail ...
	//
	// Indicates whether the contact or lead would prefer not to receive email from Salesforce (true) or not
	// (false).
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	HasOptedOutOfEmail bool `json:"HasOptedOutOfEmail"`
	// HasOptedOutOfFax ...
	//
	// Indicates that the contact or lead does not wish to receive faxes.
	//
	// Properties:Defaulted on
	// create, Filter, Group, Sort
	HasOptedOutOfFax bool `json:"HasOptedOutOfFax"`
	// HasResponded ...
	//
	// Indicates whether the campaign member has responded to the campaign (true) or not (false). Label is
	// Responded.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	HasResponded bool `json:"HasResponded"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	//
	// The last name of the contact or lead. Limit is 80 characters.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	LastName types.NullableString `json:"LastName"`
	// LeadID ...
	//
	// Required. ID of the Lead who is associated with a Campaign.
	//
	// Properties:Create, Filter, Group,
	// Nillable,Sort
	LeadID types.NullableString `json:"LeadId"`
	// LeadOrContactID ...
	//
	// The ID of the associated lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	LeadOrContactID types.NullableString `json:"LeadOrContactId"`
	// LeadOrContactOwnerID ...
	//
	// The ID of the owner of the associated lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	LeadOrContactOwnerID types.NullableString `json:"LeadOrContactOwnerId"`
	// LeadSource ...
	//
	// The source from which the lead was obtained.
	//
	// Properties:Filter, Group, Nillable, Sort
	LeadSource types.NullableString `json:"LeadSource"`
	// MobilePhone ...
	//
	// The mobile phone number of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	MobilePhone types.NullableString `json:"MobilePhone"`
	// Name ...
	//
	// First and last name of the contact or lead with which the campaign member is associated.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	Name types.NullableString `json:"Name"`
	// Phone ...
	//
	// The phone number of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	//
	// The postal code of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	PostalCode types.NullableString `json:"PostalCode"`
	// Salutation ...
	//
	// Salutation for the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Salutation types.NullableString `json:"Salutation"`
	// State ...
	//
	// The state for the address of the lead or contact. Limit is 80 characters.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	State types.NullableString `json:"State"`
	// Status ...
	//
	// Controls the HasResponded flag on this object. You can't directly set the HasResponded flag, as it is
	// read-only. You can set it indirectly by setting this field in a create or update call. Each predefined value implies a
	// HasResponded flag value. Each time you update this field, you implicitly update the HasResponded flag. In the
	// Salesforce user interface, Marketing users can define valid status values for the Status picklist. They can choose
	// one status as the default status. For each Status field value, they can also select which values to count as
	// “Responded,” meaning that the HasResponded flag is set to true for those values.40 character limit. Note When creating
	// or updating campaign members, use the text value for Status instead of the ID from the CampaignMemberStatus
	// object.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Status types.NullableString `json:"Status"`
	// Street ...
	//
	// The street for the address of the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Street types.NullableString `json:"Street"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	//
	// Title for the lead or contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Title types.NullableString `json:"Title"`
	// Type ...
	//
	// Indicates whether the campaign member is a lead or a contact.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Type types.NullableString `json:"Type"`
}

// Case ...
//
// Represents a case, which is a customer issue or problem.
type Case struct {
	// AccountID ...
	//
	// ID of the account associated with this case.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	AccountID types.NullableString `json:"AccountId"`
	// AssetID ...
	AssetID types.NullableString `json:"AssetId"`
	// CaseNumber ...
	//
	// Assigned automatically when each case is inserted. It can't be set directly, and it can't be modified after
	// the case is created.
	//
	// Properties:Autonumber, Defaulted on create, Filter, idLookup, Sort
	CaseNumber string `json:"CaseNumber"`
	// ClosedDate ...
	//
	// The date and time when the case was closed.
	//
	// Properties:Filter, Nillable, Sort
	ClosedDate types.Datetime `json:"ClosedDate"`
	// Comments ...
	//
	// Used to insert a new CaseComment. Email textarea has a length of 4000 chars.
	//
	// Properties:Create,
	// Delete, Layout, Nillable, Query, Retrieve, Search, Sort, Undelete, Update
	Comments types.NullableString `json:"Comments"`
	// ContactEmail ...
	//
	// Email address for the contact. The Case.ContactEmail field displays the Email field on the contact that is
	// referenced by Case.ContactId. Label is Contact Email. This field is available in API version 38.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ContactEmail types.NullableString `json:"ContactEmail"`
	// ContactFax ...
	//
	// Fax number for the contact. Label is Contact Fax. This field is available in API version 38.0 and
	// later.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContactFax types.NullableString `json:"ContactFax"`
	// ContactID ...
	//
	// ID of the associated contact.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ContactID types.NullableString `json:"ContactId"`
	// ContactMobile ...
	//
	// Mobile telephone number for the contact. Label is Contact Mobile. This field is available in API version
	// 38.0 and later.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContactMobile types.NullableString `json:"ContactMobile"`
	// ContactPhone ...
	//
	// Telephone number for the contact. Label is Contact Phone. This field is available in API version 38.0 and
	// later.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContactPhone types.NullableString `json:"ContactPhone"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// A text description of the case. Limit: 32 KB.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// EngineeringReqNumber__c ...
	EngineeringReqNumber__c types.NullableString `json:"EngineeringReqNumber__c"`
	// ID ...
	ID string `json:"Id"`
	// IsClosed ...
	//
	// Indicates whether the case is closed (true) or open (false). This field is controlled by the Status field;
	// it can't be set directly. Label is Closed.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsEscalated ...
	//
	// Indicates whether the case has been escalated (true) or not. A case's escalated state does not affect how
	// you can use a case, or whether you can query, delete, or update it. You can set this flag via the API. Label is
	// Escalated.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsEscalated bool `json:"IsEscalated"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp when the current user last accessed this record, a record related to this record, or a list
	// view.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp when the current user last viewed this record or list view. If this value is null, the user
	// might have only accessed this record or list view (LastReferencedDate) but not viewed it.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// MasterRecordID ...
	//
	// If this object was deleted as the result of a merge, this field contains the ID of the record that was kept. If
	// this object was deleted for any other reason, or has not been deleted, the value is null.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	MasterRecordID types.NullableString `json:"MasterRecordId"`
	// Origin ...
	//
	// The source of the case, such as Email, Phone, or Web. Label is Case Origin.
	//
	// Properties:Create,
	// Filter, Group, Nillable,Sort, Update
	Origin types.NullableString `json:"Origin"`
	// OwnerID ...
	//
	// ID of the contact who owns the case.
	//
	// Properties:Create, Defaulted on create, Filter, Group,
	// Sort, Update
	OwnerID string `json:"OwnerId"`
	// ParentID ...
	//
	// The ID of the parent case in the hierarchy. The label is Parent Case.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	ParentID types.NullableString `json:"ParentId"`
	// PotentialLiability__c ...
	PotentialLiability__c types.NullableString `json:"PotentialLiability__c"`
	// Priority ...
	//
	// The importance or urgency of the case, such as High, Medium, or Low.
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Nillable, Sort, Update
	Priority types.NullableString `json:"Priority"`
	// Product__c ...
	Product__c types.NullableString `json:"Product__c"`
	// Reason ...
	//
	// The reason why the case was created, such as Instructions not clear, or User didn’t attend
	// training.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Reason types.NullableString `json:"Reason"`
	// SLAViolation__c ...
	SLAViolation__c types.NullableString `json:"SLAViolation__c"`
	// SourceID ...
	//
	// The ID of the social post source.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SourceID types.NullableString `json:"SourceId"`
	// Status ...
	//
	// The status of the case, such as New, Closed, or Escalated. This field directly controls the IsClosed flag.
	// Each predefined Status value implies an IsClosed flag value. For more information, see CaseStatus.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Sort, Update
	Status types.NullableString `json:"Status"`
	// Subject ...
	//
	// The subject of the case. Limit: 255 characters.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	Subject types.NullableString `json:"Subject"`
	// SuppliedCompany ...
	//
	// The company name that was entered when the case was created. Label is Company.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SuppliedCompany types.NullableString `json:"SuppliedCompany"`
	// SuppliedEmail ...
	//
	// The email address that was entered when the case was created. Label is Email.If your organization has an
	// active auto-response rule, SuppliedEmail is required when creating a case via the API. Auto-response rules use
	// the email in the contact specified by ContactId. If no email address is in the contact record, the email
	// specified here is used.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SuppliedEmail types.NullableString `json:"SuppliedEmail"`
	// SuppliedName ...
	//
	// The name that was entered when the case was created. Label is Name.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	SuppliedName types.NullableString `json:"SuppliedName"`
	// SuppliedPhone ...
	//
	// The phone number that was entered when the case was created. Label is Phone.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	SuppliedPhone types.NullableString `json:"SuppliedPhone"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Type ...
	//
	// The type of case, such as Feature Request or Question.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Type types.NullableString `json:"Type"`
}

// CaseContactRole ...
//
// Represents the role that a given Contact plays on a Case.
type CaseContactRole struct {
	// CasesID ...
	//
	// ID of the cases associated with this contact.
	//
	// Properties:Create, Filter, Group, Sort
	CasesID string `json:"CasesId"`
	// ContactID ...
	//
	// Required. ID of the contact.
	//
	// Properties:Create, Filter, Group, Sort, Update
	ContactID string `json:"ContactId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Role ...
	//
	// Name of the role played by the contact on this case, such as Technical Contact, Business Contact, Decision
	// Maker, and so on. Must be uniquethere can't be multiple records in which the CaseId, ContactId , and Role values are
	// identical. Different contacts can play the same role on the same case. A contact can play different roles on the same
	// case.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Role types.NullableString `json:"Role"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// CollaborationGroupRecord ...
//
// Represents the records associated with Chatter groups.
type CollaborationGroupRecord struct {
	// CollaborationGroupID ...
	//
	// Required. ID of the Chatter group.
	//
	// Properties:Create, Filter, Group, Sort
	CollaborationGroupID string `json:"CollaborationGroupId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RecordID ...
	//
	// Required. The ID of the record associated with the Chatter group.
	//
	// Properties:Create, Filter,
	// Group, Sort
	RecordID string `json:"RecordId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// CombinedAttachment ...
//
// This read-only object contains all notes, attachments, Google Docs, documents uploaded to libraries in
// Salesforce CRM Content, and files added to Chatter that are associated with a record.
type CombinedAttachment struct {
	// ContentSize ...
	//
	// Size of the document in bytes.
	//
	// Properties:Filter, Group, Nillable, Sort
	ContentSize types.NullableInt `json:"ContentSize"`
	// ContentURL ...
	//
	// URL for links and Google Docs. This field is set only for links and Google Docs, and is one of the fields that
	// determine the FileType. This field is available in API version 31.0 and later.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	ContentURL types.NullableString `json:"ContentUrl"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ExternalDataSourceName ...
	//
	// Name of the external data source in which the document is stored. This field is set only for external
	// documents that are connected to Salesforce.This field is available in API version 32.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ExternalDataSourceName types.NullableString `json:"ExternalDataSourceName"`
	// ExternalDataSourceType ...
	//
	// Type of external data source in which the document is stored. This field is set only for external documents
	// that are connected to Salesforce.This field is available in API version 35.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ExternalDataSourceType types.NullableString `json:"ExternalDataSourceType"`
	// FileExtension ...
	//
	// File extension of the document. This field is available in API version 31.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	FileExtension types.NullableString `json:"FileExtension"`
	// FileType ...
	//
	// Type of document, determined by the file extension.
	//
	// Properties:Filter, Group, Nillable, Sort
	FileType types.NullableString `json:"FileType"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// ParentID ...
	//
	// The ID of the parent object.
	//
	// Properties:Filter, Group, Sort
	ParentID string `json:"ParentId"`
	// RecordType ...
	//
	// The parent object type.
	//
	// Properties:Filter, Group, Nillable, Sort
	RecordType types.NullableString `json:"RecordType"`
	// SharingOption ...
	//
	// Controls whether or not sharing is frozen for a file. Only administrators and file owners with
	// Collaborator access to the file can modify this field. Default is Allowed, which means that new shares are allowed. When
	// set to Restricted, new shares are prevented without affecting existing shares.This field is available in API
	// versions 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Nillable, Restricted
	// picklist, Sort
	SharingOption types.NullableString `json:"SharingOption"`
	// Title ...
	//
	// Title of the attached file.
	//
	// Properties:Filter, Group, Nillable, Sort
	Title types.NullableString `json:"Title"`
}

// CommSubscriptionConsent ...
//
// Represents a customer’s consent to a communication subscription. This object is available in API
// version 48.0 and later.
type CommSubscriptionConsent struct {
	// CommSubscriptionChannelTypeID ...
	//
	// ID of the associated communication subscription channel type record.
	//
	// Properties:Create,
	// Filter, Group, Sort, Update
	CommSubscriptionChannelTypeID string `json:"CommSubscriptionChannelTypeId"`
	// ConsentCapturedDateTime ...
	//
	// Required. Date when the customer’s consent was captured.
	//
	// Properties:Create, Filter,
	// Nillable, Sort, Update
	ConsentCapturedDateTime types.Datetime `json:"ConsentCapturedDateTime"`
	// ConsentCapturedSource ...
	//
	// Required. Source through which consent was captured. For example, user@example.com or
	// www.example.com.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ConsentCapturedSource types.NullableString `json:"ConsentCapturedSource"`
	// ConsentGiverID ...
	//
	// ID of the person who gave consent to the communication subscription on behalf of the contact point. Note If
	// the contact point gave consent, don't use ConsentGiverId.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	ConsentGiverID types.NullableString `json:"ConsentGiverId"`
	// ContactPointID ...
	//
	// ID of the contact point, such as an Individual or person account, associated with the communication
	// subscription consent.
	//
	// Properties:Create, Filter, Group, Sort, Update
	ContactPointID string `json:"ContactPointId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EffectiveFromDate ...
	//
	// Required. Date when consent starts.
	//
	// Properties:Create, Filter, Group, Sort, Update
	EffectiveFromDate types.Date `json:"EffectiveFromDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp for when the current user last viewed a record related to this record.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp for when the current user last viewed this record. If this value is null, it’s possible that
	// this record was referenced (LastReferencedDate) and not viewed.
	//
	// Properties:Filter, Nillable,
	// Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Name ...
	//
	// Required. Name of the communication subscription consent record.
	//
	// Properties:Create, Filter,
	// Group, idLookup, Sort, Update
	Name string `json:"Name"`
	// OwnerID ...
	//
	// The ID of the account owner associated with this customer.
	//
	// Properties:Create, Defaulted on
	// create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// ContactCleanInfo ...
//
// Stores the metadata Data.com Clean uses to determine a contact record’s clean status. Helps you
// automate the cleaning or related processing of contact records. ContactCleanInfo includes a number of bit vector
// fields.
type ContactCleanInfo struct {
	// Address ...
	//
	// The compound form of the address. Read-only. See Address Compound Fields for details on compound address
	// fields.
	//
	// Properties:Filter, Nillable
	Address types.Address `json:"Address"`
	// City ...
	//
	// Details for the billing address of the contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	City types.NullableString `json:"City"`
	// CleanedByJob ...
	//
	// Indicates whether the contact record was cleaned by a Data.com Clean job (true) or not (false).
	//
	//
	// Properties:Filter
	CleanedByJob bool `json:"CleanedByJob"`
	// CleanedByUser ...
	//
	// Indicates whether the contact record was cleaned by a Salesforce user (true) or not (false).
	//
	//
	// Properties:Filter
	CleanedByUser bool `json:"CleanedByUser"`
	// ContactID ...
	//
	// The unique, system-generated ID assigned when the contact record was created.
	//
	//
	// Properties:Filter, Group, Sort
	ContactID string `json:"ContactId"`
	// ContactStatusDataDotCom ...
	//
	// The status of the contact per Data.com. Values are: Contact is Active per Data.com, Phone is Wrong per
	// Data.com , Email is Wrong per Data.com, Phone and Email are Wrong per Data.com, Contact Not at Company per Data.com,
	// Contact is Inactive per Data.com, Company this contact belongs to is out of business per Data.com, Company this
	// contact belongs to never existed per Data.com or Email address is invalid per Data.com.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ContactStatusDataDotCom types.NullableString `json:"ContactStatusDataDotCom"`
	// Country ...
	//
	// Details for the billing address of the contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Country types.NullableString `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DataDotComID ...
	//
	// The ID Data.com maintains for the contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	DataDotComID types.NullableString `json:"DataDotComId"`
	// Email ...
	//
	// The email address for the contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Email types.NullableString `json:"Email"`
	// FirstName ...
	//
	// The contact’s first name.
	//
	// Properties:Filter, Group, Nillable, Sort
	FirstName types.NullableString `json:"FirstName"`
	// GeocodeAccuracy ...
	GeocodeAccuracy types.NullableString `json:"GeocodeAccuracy"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsDifferentCity ...
	//
	// Indicates whether the contact’s City field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentCity bool `json:"IsDifferentCity"`
	// IsDifferentCountry ...
	//
	// Indicates whether the contact’s Country field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentCountry bool `json:"IsDifferentCountry"`
	// IsDifferentCountryCode ...
	//
	// Indicates whether the contact’s Country Code field value is different from the corresponding value on
	// its matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentCountryCode bool `json:"IsDifferentCountryCode"`
	// IsDifferentEmail ...
	//
	// Indicates whether the contact’s Email field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentEmail bool `json:"IsDifferentEmail"`
	// IsDifferentFirstName ...
	//
	// Indicates whether the contact’s First Name field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentFirstName bool `json:"IsDifferentFirstName"`
	// IsDifferentLastName ...
	//
	// Indicates whether the contact’s Last Name field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentLastName bool `json:"IsDifferentLastName"`
	// IsDifferentPhone ...
	//
	// Indicates whether the contact’s Phone field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentPhone bool `json:"IsDifferentPhone"`
	// IsDifferentPostalCode ...
	//
	// Indicates whether the contact’s Postal Code field value is different from the corresponding value on
	// its matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentPostalCode bool `json:"IsDifferentPostalCode"`
	// IsDifferentState ...
	//
	// Indicates whether the contact’s State field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentState bool `json:"IsDifferentState"`
	// IsDifferentStateCode ...
	//
	// Indicates whether the contact’s State Code field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentStateCode bool `json:"IsDifferentStateCode"`
	// IsDifferentStreet ...
	//
	// Indicates whether the contact’s Street field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentStreet bool `json:"IsDifferentStreet"`
	// IsDifferentTitle ...
	//
	// Indicates whether the contact’s Title field value is different from the corresponding value on its
	// matched Data.com record (true) or not (false).
	//
	// Properties:Filter
	IsDifferentTitle bool `json:"IsDifferentTitle"`
	// IsFlaggedWrongAddress ...
	//
	// Indicates whether the contact’s Address field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongAddress bool `json:"IsFlaggedWrongAddress"`
	// IsFlaggedWrongEmail ...
	//
	// Indicates whether the contact’s Email field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongEmail bool `json:"IsFlaggedWrongEmail"`
	// IsFlaggedWrongName ...
	//
	// Indicates whether the contact’s Name field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongName bool `json:"IsFlaggedWrongName"`
	// IsFlaggedWrongPhone ...
	//
	// Indicates whether the contact’s Phone field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongPhone bool `json:"IsFlaggedWrongPhone"`
	// IsFlaggedWrongTitle ...
	//
	// Indicates whether the contact’s Title field value is flagged as wrong to Data.com (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsFlaggedWrongTitle bool `json:"IsFlaggedWrongTitle"`
	// IsInactive ...
	//
	// Indicates whether the contact has been reported to Data.com as Inactive (true) or not (false).
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsInactive bool `json:"IsInactive"`
	// IsReviewedAddress ...
	//
	// Indicates whether the contact’s Address field value is in a Reviewed state (true) or not
	// (false).
	//
	// Properties:Filter, Update
	IsReviewedAddress bool `json:"IsReviewedAddress"`
	// IsReviewedEmail ...
	//
	// Indicates whether the contact’s Email field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedEmail bool `json:"IsReviewedEmail"`
	// IsReviewedName ...
	//
	// Indicates whether the contact’s Name field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedName bool `json:"IsReviewedName"`
	// IsReviewedPhone ...
	//
	// Indicates whether the contact’s Phone field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedPhone bool `json:"IsReviewedPhone"`
	// IsReviewedTitle ...
	//
	// Indicates whether the contact’s Title field value is in a Reviewed state (true) or not (false).
	//
	//
	// Properties:Filter, Update
	IsReviewedTitle bool `json:"IsReviewedTitle"`
	// LastMatchedDate ...
	//
	// The date the contact record was last matched and linked to a Data.com record.
	//
	// Properties:Filter,
	// Sort
	LastMatchedDate types.Datetime `json:"LastMatchedDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	//
	// The contact’s last name.
	//
	// Properties:Filter, Group, Nillable, Sort
	LastName types.NullableString `json:"LastName"`
	// LastStatusChangedByID ...
	//
	// The ID of who or what last changed the record’s Clean Status field value: a Salesforce user or a Clean
	// job.
	//
	// Properties:Filter, Group, Nillable, Sort
	LastStatusChangedByID types.NullableString `json:"LastStatusChangedById"`
	// LastStatusChangedDate ...
	//
	// The date on which the record’s Clean Status field value was last changed.
	//
	// Properties:Filter,
	// Nillable, Sort
	LastStatusChangedDate types.Datetime `json:"LastStatusChangedDate"`
	// Latitude ...
	//
	// Used with Longitude to specify the precise geolocation of a billing address. Data not currently
	// provided.
	//
	// Properties:Filter, Nillable, Sort
	Latitude types.NullableFloat64 `json:"Latitude"`
	// Longitude ...
	//
	// Used with Latitude to specify the precise geolocation of a billing address. Data not currently
	// provided.
	//
	// Properties:Filter, Nillable, Sort
	Longitude types.NullableFloat64 `json:"Longitude"`
	// Name ...
	//
	// Field label is Contact Clean Info Name. The name of the contact. Maximum size is 255 characters.
	//
	//
	// Properties:Filter, Group, Sort, Update
	Name string `json:"Name"`
	// Phone ...
	//
	// The phone number for the contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	//
	// Details for the billing address of the contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	PostalCode types.NullableString `json:"PostalCode"`
	// State ...
	//
	// Details for the billing address of the contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	State types.NullableString `json:"State"`
	// Street ...
	//
	// Details for the billing address of the contact.
	//
	// Properties:Filter, Group, Nillable, Sort
	Street types.NullableString `json:"Street"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	//
	// The contact’s title.
	//
	// Properties:Filter, Group, Nillable, Sort
	Title types.NullableString `json:"Title"`
}

// ContactFeed ...
type ContactFeed struct {
	// BestCommentID ...
	BestCommentID types.NullableString `json:"BestCommentId"`
	// Body ...
	Body types.NullableString `json:"Body"`
	// CommentCount ...
	CommentCount int `json:"CommentCount"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// InsertedByID ...
	InsertedByID types.NullableString `json:"InsertedById"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsRichText ...
	IsRichText bool `json:"IsRichText"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LikeCount ...
	LikeCount int `json:"LikeCount"`
	// LinkURL ...
	LinkURL types.NullableString `json:"LinkUrl"`
	// ParentID ...
	ParentID string `json:"ParentId"`
	// RelatedRecordID ...
	RelatedRecordID types.NullableString `json:"RelatedRecordId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	Title types.NullableString `json:"Title"`
	// Type ...
	Type types.NullableString `json:"Type"`
}

// ContactHistory ...
type ContactHistory struct {
	// ContactID ...
	ContactID string `json:"ContactId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DataType ...
	DataType types.NullableString `json:"DataType"`
	// Field ...
	Field string `json:"Field"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// NewValue ...
	NewValue json.RawMessage `json:"NewValue"`
	// OldValue ...
	OldValue json.RawMessage `json:"OldValue"`
}

// ContactRequest ...
//
// Represents a customer’s request for support to get back to them about an issue. This object is available
// in API version 45.0 and later.
type ContactRequest struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp for when the current user last viewed a record related to this record.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp for when the current user last viewed this record. If this value is null, this record might
	// only have been referenced (LastReferencedDate) and not viewed.
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Name ...
	//
	// The contact request number.
	//
	// Properties:Autonumber, Defaulted on create, Filter, idLookup,
	// Sort
	Name string `json:"Name"`
	// OwnerID ...
	//
	// ID of the Salesforce record that owns the request.
	//
	// Properties:Create, Defaulted on create,
	// Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// PreferredChannel ...
	//
	// The channel the customer selected as their preferred method of communication in the contact request flow.
	// For example: Phone
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	PreferredChannel string `json:"PreferredChannel"`
	// PreferredPhone ...
	//
	// The phone number the customer provided when requesting help in the contact request flow.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PreferredPhone types.NullableString `json:"PreferredPhone"`
	// RequestDescription ...
	//
	// The description of the customer’s issue that they provided when requesting help in the contact request
	// flow.
	//
	// Properties:Create, Nillable, Update
	RequestDescription types.NullableString `json:"RequestDescription"`
	// RequestReason ...
	//
	// The reason the customer provided when requesting help in the contact request flow. These values are
	// customizable in Object Manager. The default values are: Account Billing Case General Order Other Product
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Sort, Update
	RequestReason types.NullableString `json:"RequestReason"`
	// Status ...
	//
	// The status of the contact request. For example: Abandoned Attempted Contacted New
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	Status string `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WhatID ...
	//
	// ID of the Salesforce record the contact request is related to, such as an account, case, opportunity, or
	// work order.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// ID of the Salesforce contact record the contact request is related to, such as a contact, lead, or
	// user.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WhoID types.NullableString `json:"WhoId"`
}

// ContactShare ...
//
// Represents a list of access levels to a Contact along with an explanation of the access level. For example,
// if you have access to a record because you own it, the ContactAccessLevel is All and RowCause is Owner.
type ContactShare struct {
	// ContactAccessLevel ...
	//
	// Level of access that the User or Group has to cases associated with the account Contact. The possible values
	// are: Read Edit All This value is not valid for create or update. This field must be set to an access level that is
	// higher than the organization’s default access level for contacts.
	//
	// Properties:Filter, Group,
	// Restricted picklist, Sort
	ContactAccessLevel string `json:"ContactAccessLevel"`
	// ContactID ...
	//
	// ID of the Contact associated with this sharing entry. This field can't be updated.
	//
	//
	// Properties:Filter, Group, Sort
	ContactID string `json:"ContactId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RowCause ...
	//
	// Reason that this sharing entry exists. You can only write to this field when its value is either omitted or
	// set to Manual (default). There are many possible values, including: RuleThe User or Group has access via a
	// Contact sharing rule. GuestRuleThe User or Group has access via a Contact guest user sharing rule.
	// ImplicitChildThe User or Group has access to the Contact via sharing access on the associated Account. ImplicitPersonThe
	// User or Group has access to the business contact of a person account via a Contact sharing rule.
	// GuestPersonImplicitThe guest user has access to the business contact of a person account via a Contact sharing rule.
	// PortalImplicitThe Contact is associated with the portal user. LpuImplicitThe User has access to records owned by
	// high-volume Experience Cloud site users via a share group. ARImplicitThe User, who belongs to a partner or customer
	// account, has access to the Contact via an account relationship data sharing rule. ManualThe User or Group has access
	// because a User with “All” access manually shared the Contact with them. OwnerThe User is the owner of the
	// Contact.
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	RowCause types.NullableString `json:"RowCause"`
	// UserOrGroupID ...
	//
	// ID of the User or Group that has been given access to the Contact. This field can't be updated.
	//
	//
	// Properties:Filter, Group, Sort
	UserOrGroupID string `json:"UserOrGroupId"`
}

// ContentDocumentLink ...
//
// Represents the link between a Salesforce CRM Content document or Salesforce file and where it's shared. A
// file can be shared with other users, groups, records, and Salesforce CRM Content libraries. This object is
// available in versions 21.0 and later for Salesforce CRM Content documents and Salesforce Files.
type ContentDocumentLink struct {
	// ContentDocumentID ...
	//
	// ID of the document.
	//
	// Properties:Create, Filter, Group, Sort
	ContentDocumentID string `json:"ContentDocumentId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LinkedEntityID ...
	//
	// ID of the linked object. Can include Chatter users, groups, records (any that support Chatter feed
	// tracking including custom objects), and Salesforce CRM Content libraries.
	// Using the API only, you can relate
	// notes to custom settings.

	//
	// Properties:Create, Filter, Group, Sort
	LinkedEntityID string `json:"LinkedEntityId"`
	// ShareType ...
	//
	// Required. The permission granted to the user of the shared file in a library. This is determined by the
	// permission the user already has in the library. This field is available in API version 25.0 and later. V Viewer
	// permission. The user can explicitly view but not edit the shared file. C Collaborator permission. The user can
	// explicitly view and edit the shared file. I Inferred permission. The user’s permission is determined by the related
	// record. For shares with a library, this is defined by the permissions the user has in that library. Inferred
	// permission on shares with libraries and file owners is available in API versions 21.0 and later. Inferred permission
	// on shares with standard objects is available in API versions 36.0 and later.
	// V

	// Viewer permission.
	// The user can explicitly view but not edit the shared file.

	// C

	// Collaborator permission. The user can
	// explicitly view and edit the shared file.

	// I

	// Inferred permission. The user’s permission is determined by
	// the related record. For shares with a library, this is defined by the permissions the user has in that library.
	// Inferred permission on shares with libraries and file owners is available in API versions 21.0 and later. Inferred
	// permission on shares with standard objects is available in API versions 36.0 and later.

	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ShareType types.NullableString `json:"ShareType"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Visibility ...
	//
	// Specifies whether this file is available to all users, internal users, or shared users. This field is
	// available in API version 26.0 and later. Visibility can have the following values. AllUsersThe file is available to
	// all users who have permission to see the file. InternalUsersThe file is available only to internal users who
	// have permission to see the file. SharedUsersThe file is available to all users who can see the feed to which the
	// file is posted. SharedUsers is used only for files shared with users, and is available only when an org has
	// private org-wide sharing on by default. The SharedUsers value is available in API version 32.0 and later. Note the
	// following exceptions for Visibility. AllUsers & InternalUsers values apply to files posted on standard and custom
	// object records, but not to users, groups, or content libraries. For posts to a record feed, Visibility is set to
	// InternalUsers for all internal users by default. External users can set Visibility only to AllUsers. On user and group
	// posts, only internal users can set Visibility to InternalUsers. For posts to a user feed, if the
	// organization-wide default for user sharing is set to private, Visibility is set to SharedUsers. Only internal users can
	// update Visibility. Visibility can be updated on links to files posted on standard and custom object records, but
	// not to users, groups, or content libraries. Visibility is updatable in API version 43.0 and later.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Visibility types.NullableString `json:"Visibility"`
}

// Contract ...
//
// Represents a contract (a business agreement) associated with an Account.
type Contract struct {
	// AccountID ...
	//
	// Required. ID of the Account associated with this contract.
	//
	// Properties:Create, Filter, Group,
	// Sort,Update
	AccountID string `json:"AccountId"`
	// ActivatedByID ...
	//
	// ID of the User who activated this contract.
	//
	// Properties:Filter, Group, Nillable, Sort,Update
	ActivatedByID types.NullableString `json:"ActivatedById"`
	// ActivatedDate ...
	//
	// Date and time when this contract was activated.
	//
	// Properties:Filter, Nillable, Sort, Update
	ActivatedDate types.Datetime `json:"ActivatedDate"`
	// BillingAddress ...
	//
	// The compound form of the billing address. Read-only. See Address Compound Fields for details on compound
	// address fields.
	//
	// Properties:Filter, Nillable
	BillingAddress types.Address `json:"BillingAddress"`
	// BillingCity ...
	//
	// Details for the billing address. Maximum size is 40 characters.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	BillingCity types.NullableString `json:"BillingCity"`
	// BillingCountry ...
	//
	// Details for the billing address of this account. Maximum size is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingCountry types.NullableString `json:"BillingCountry"`
	// BillingGeocodeAccuracy ...
	//
	// The accuracy of the geocode for the billing address.
	// Possible values are: Address Block City County
	// ExtendedZip NearAddress Neighborhood State Street Unknown Zip

	//
	// Properties:Create, Filter, Group,
	// Nillable, Restricted picklist, Sort, Update
	BillingGeocodeAccuracy types.NullableString `json:"BillingGeocodeAccuracy"`
	// BillingLatitude ...
	//
	// Used with BillingLongitude to specify the precise geolocation of a billing address. Acceptable values
	// are numbers between –90 and 90 with up to 15 decimal places.
	//
	// Properties:Create, Filter, Nillable,
	// Sort, Update
	BillingLatitude types.NullableFloat64 `json:"BillingLatitude"`
	// BillingLongitude ...
	//
	// Used with BillingLatitude to specify the precise geolocation of a billing address. Acceptable values are
	// numbers between –180 and 180 with up to 15 decimal places.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	BillingLongitude types.NullableFloat64 `json:"BillingLongitude"`
	// BillingPostalCode ...
	//
	// Details for the billing address of this account. Maximum size is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BillingPostalCode types.NullableString `json:"BillingPostalCode"`
	// BillingState ...
	//
	// Details for the billing address. Maximum size is 80 characters.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	BillingState types.NullableString `json:"BillingState"`
	// BillingStreet ...
	//
	// Street address for the billing address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	BillingStreet types.NullableString `json:"BillingStreet"`
	// CompanySignedDate ...
	//
	// Date on which the contract was signed by your organization.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	CompanySignedDate types.Date `json:"CompanySignedDate"`
	// CompanySignedID ...
	//
	// ID of the User who signed the contract.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	CompanySignedID types.NullableString `json:"CompanySignedId"`
	// ContractNumber ...
	//
	// Number of the contract.
	//
	// Properties:Autonumber, Defaulted on create, Filter, idLookup, Sort
	ContractNumber string `json:"ContractNumber"`
	// ContractTerm ...
	//
	// Number of months that the contract is valid.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	ContractTerm types.NullableInt `json:"ContractTerm"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// CustomerSignedDate ...
	//
	// Date on which the customer signed the contract.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	CustomerSignedDate types.Date `json:"CustomerSignedDate"`
	// CustomerSignedID ...
	//
	// ID of the Contact who signed this contract.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	CustomerSignedID types.NullableString `json:"CustomerSignedId"`
	// CustomerSignedTitle ...
	//
	// Title of the customer who signed the contract.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	CustomerSignedTitle types.NullableString `json:"CustomerSignedTitle"`
	// Description ...
	//
	// Description of the contract.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// EndDate ...
	//
	// Read-only. Calculated end date of the contract. This value is calculated by adding the ContractTerm to the
	// StartDate.
	//
	// Properties:Filter, Group, Nillable, Sort,
	EndDate types.Date `json:"EndDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// LastActivityDate ...
	//
	// Value is one of the following, whichever is the most recent: Due date of the most recent event logged against
	// the record. Due date of the most recently closed task associated with the record.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	LastActivityDate types.Date `json:"LastActivityDate"`
	// LastApprovedDate ...
	//
	// Last date the contract was approved.
	//
	// Properties:Filter, Nillable, Sort
	LastApprovedDate types.Datetime `json:"LastApprovedDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp when the current user last accessed this record, a record related to this record, or a list
	// view.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp when the current user last viewed this record or list view. If this value is null, the user
	// might have only accessed this record or list view (LastReferencedDate) but not viewed it.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// OwnerExpirationNotice ...
	//
	// Number of days ahead of the contract end date (15, 30, 45, 60, 90, and 120). Used to notify the owner in advance
	// that the contract is ending.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist,
	// Sort, Update
	OwnerExpirationNotice types.NullableString `json:"OwnerExpirationNotice"`
	// OwnerID ...
	//
	// ID of the user who owns the contract.
	//
	// Properties:Create, Defaulted on create, Filter, Group,
	// Sort, Update
	OwnerID string `json:"OwnerId"`
	// Pricebook2ID ...
	//
	// ID of the pricebook, if any, associated with this contract.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Pricebook2ID types.NullableString `json:"Pricebook2Id"`
	// SpecialTerms ...
	//
	// Special terms that apply to the contract.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	SpecialTerms types.NullableString `json:"SpecialTerms"`
	// StartDate ...
	//
	// Start date for this contract. Label is Contract Start Date.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort,Update
	StartDate types.Date `json:"StartDate"`
	// Status ...
	//
	// The picklist of values that indicate order status. Each value is within one of two status categories
	// defined in StatusCode. For example, the status picklist may contain: Ready to Ship, Shipped, Received as values
	// within the Activated StatusCode.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Restricted
	// picklist, Sort, Update
	Status string `json:"Status"`
	// StatusCode ...
	//
	// The status category for the contract. A contract can be Draft, InApproval, or Activated. Label is Status
	// Category.
	//
	// Properties:Filter, Group, Restricted picklist, Sort
	StatusCode string `json:"StatusCode"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// ContractContactRole ...
//
// Represents the role that a given Contact plays on a Contract.
type ContractContactRole struct {
	// ContactID ...
	//
	// ID of the Contact associated with this Contract.
	//
	// Properties:Create, Filter, Group, Sort,
	// Update
	ContactID string `json:"ContactId"`
	// ContractID ...
	//
	// Required. ID of the Contract.
	//
	// Properties:Create, Filter, Group, Sort
	ContractID string `json:"ContractId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsPrimary ...
	//
	// Specifies whether this Contact plays the primary role on this Contract (true) or not (false). Note that
	// each contract has only one primary contact role. Default is false. Labels is Primary.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort,Update
	IsPrimary bool `json:"IsPrimary"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Role ...
	//
	// Name of the role played by the Contact on this Contract, such as Decision Maker, Approver, Buyer, and so on.
	// Must be uniquethere can't be multiple records in which the ContractId, ContactId, and Role values are
	// identical. Different contacts can play the same role on the same contract. A contact can play different roles on the
	// same contract.
	//
	// Properties:Create, Filter, Nillable, Group, Sort, Update
	Role types.NullableString `json:"Role"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// CreditMemo ...
//
// Represents a document that is used to adjust or rectify errors made in an invoice. The invoice has already
// been processed and sent to a customer. This object is available in API version 48.0 and later.
type CreditMemo struct {
	// BillToContactID ...
	//
	// Inherited from the account’s Bill to Account.
	//
	// Properties:Filter, Group, Nillable, Sort,
	// Update
	BillToContactID types.NullableString `json:"BillToContactId"`
	// BillingAccountID ...
	//
	// The customer account for this invoice.
	//
	// Properties:Filter, Group, Sort, Update
	BillingAccountID string `json:"BillingAccountId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// CreditDate ...
	//
	// The date that the credit memo was posted.
	//
	// Properties:Filter, Group, Sort, Update
	CreditDate types.Date `json:"CreditDate"`
	// CreditMemoNumber ...
	//
	// System number for the credit memo.
	//
	// Properties:Filter, Group, Nillable, Sort, Update
	CreditMemoNumber types.NullableString `json:"CreditMemoNumber"`
	// Description ...
	//
	// Description of the credit memo.
	//
	// Properties:Filter, Group, Nillable, Sort, Update
	Description types.NullableString `json:"Description"`
	// DocumentNumber ...
	//
	// System-generated number for organization of financial documents. Can be sequential or random.
	//
	//
	// Properties:Autonumber, Defaulted on create, Filter, idLookup, Sort
	DocumentNumber string `json:"DocumentNumber"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp for when the current user last viewed a record related to this record.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp for when the current user last viewed this record. If this value is null, this record might
	// only have been referenced (LastReferencedDate) and not viewed.
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// OwnerID ...
	//
	// The user who owns a credit memo record.
	//
	// Properties:Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Status ...
	//
	// Status of the credit memo.
	// Possible values are: Canceled: Reserved for future use. Draft: The credit
	// memo is not yet recorded as a financial transaction. Certain fields can still be edited. Pending: Reserved for
	// future use. Posted: The credit memo has been recorded as a financial transaction. Most fields can’t be
	// edited.

	//
	// Properties:Filter, Group, Restricted picklist, Sort, Update
	Status string `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TotalAdjustmentAmount ...
	//
	// Sum of TotalAmountvalues for the credit memo’s adjustment lines.
	//
	// Properties:Filter,
	// Nillable, Sort
	TotalAdjustmentAmount types.NullableFloat64 `json:"TotalAdjustmentAmount"`
	// TotalAdjustmentAmountWithTax ...
	TotalAdjustmentAmountWithTax types.NullableFloat64 `json:"TotalAdjustmentAmountWithTax"`
	// TotalAdjustmentTaxAmount ...
	TotalAdjustmentTaxAmount types.NullableFloat64 `json:"TotalAdjustmentTaxAmount"`
	// TotalAmount ...
	//
	// Sum of the credit memo’s TotalLineAmount and TotalAdjustmentAmount.
	//
	// Properties:Filter,
	// Nillable, Sort
	TotalAmount types.NullableFloat64 `json:"TotalAmount"`
	// TotalAmountWithTax ...
	//
	// Total credit memo amount, with tax included.
	//
	// Properties:Filter, Nillable, Sort
	TotalAmountWithTax types.NullableFloat64 `json:"TotalAmountWithTax"`
	// TotalChargeAmount ...
	//
	// Sum of TotalAmount values for the credit memo’s charge lines. values for all of this credit memo’s
	// credit memo lines.
	//
	// Properties:Filter, Nillable, Sort
	TotalChargeAmount types.NullableFloat64 `json:"TotalChargeAmount"`
	// TotalChargeAmountWithTax ...
	TotalChargeAmountWithTax types.NullableFloat64 `json:"TotalChargeAmountWithTax"`
	// TotalChargeTaxAmount ...
	TotalChargeTaxAmount types.NullableFloat64 `json:"TotalChargeTaxAmount"`
	// TotalTaxAmount ...
	//
	// Sum of TotalAmount values for the credit memo’s tax lines.
	//
	// Properties:Filter, Nillable, Sort
	TotalTaxAmount types.NullableFloat64 `json:"TotalTaxAmount"`
}

// DeclinedEventRelation ...
//
// Represents event participants (invitees or attendees) with the status Declined for a given event. This
// object is available in API versions 29.0 and later.
type DeclinedEventRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EventID ...
	//
	// Indicates the ID of the event.
	//
	// Properties:Filter, Group, Nillable, Sort
	EventID types.NullableString `json:"EventId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RelationID ...
	//
	// Indicates the ID of the invitee.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationID types.NullableString `json:"RelationId"`
	// RespondedDate ...
	//
	// Indicates the most recent date and time when the invitee declined an invitation to the event.
	//
	//
	// Properties:Filter, Nillable, Sort
	RespondedDate types.Datetime `json:"RespondedDate"`
	// Response ...
	//
	// Indicates the content of the response field. Label is Comment.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Response types.NullableString `json:"Response"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Type ...
	//
	// Indicates whether the invitee is a user, lead or contact, or resource.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	Type types.NullableString `json:"Type"`
}

// DuplicateRecordItem ...
//
// Represents an individual record that’s part of a duplicate record set. Use this object to create custom
// report types.
type DuplicateRecordItem struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DuplicateRecordSetID ...
	//
	// The duplicate record set that the duplicate record item is assigned to.
	//
	// Properties:Create,
	// Filter, Group, Sort
	DuplicateRecordSetID string `json:"DuplicateRecordSetId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Name ...
	//
	// The autogenerated name that’s given to the Duplicate Record Item. Label is Duplicate Record Item
	// Name.
	//
	// Properties:Autonumber, Defaulted on create, Filter, idLookup, Sort
	Name string `json:"Name"`
	// RecordID ...
	//
	// The name of the record as it appears on the record’s detail page.
	//
	// Properties:Create, Filter,
	// Group, Sort, Update
	RecordID string `json:"RecordId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// EmailMessageRelation ...
type EmailMessageRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EmailMessageID ...
	EmailMessageID string `json:"EmailMessageId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// RelationAddress ...
	RelationAddress types.NullableString `json:"RelationAddress"`
	// RelationID ...
	RelationID types.NullableString `json:"RelationId"`
	// RelationObjectType ...
	RelationObjectType types.NullableString `json:"RelationObjectType"`
	// RelationType ...
	RelationType string `json:"RelationType"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// EmailStatus ...
//
// Represents the status of email sent.
type EmailStatus struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EmailTemplateName ...
	//
	// The name of the EmailTemplate.
	//
	// Properties:Filter, Group, Nillable, Sort
	EmailTemplateName types.NullableString `json:"EmailTemplateName"`
	// FirstOpenDate ...
	//
	// Date when the email was first opened by recipient. Label is Date Opened.
	//
	// Properties:Filter,
	// Nillable, Sort
	FirstOpenDate types.Datetime `json:"FirstOpenDate"`
	// ID ...
	ID string `json:"Id"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastOpenDate ...
	//
	// Date when the email was last opened by recipient.
	//
	// Properties:Filter, Nillable, Sort
	LastOpenDate types.Datetime `json:"LastOpenDate"`
	// TaskID ...
	//
	// The activity (task or event) associated with the email. Label is Activity ID.
	//
	//
	// Properties:Filter, Group, Sort
	TaskID string `json:"TaskId"`
	// TimesOpened ...
	//
	// Number of times the recipient opened the email.
	//
	// Properties:Filter, Group, Sort
	TimesOpened int `json:"TimesOpened"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	WhoID types.NullableString `json:"WhoId"`
}

// EntitySubscription ...
//
// Represents a subscription for a user following a record or another user. This object is available in API
// version 34.0 and later.
type EntitySubscription struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// ParentID ...
	//
	// Required. ID of the record or user which the user is following.
	//
	// Properties:Create, Filter,
	// Group, Sort
	ParentID string `json:"ParentId"`
	// SubscriberID ...
	//
	// Required. ID of the user who is following the record or user.
	//
	// Properties:Create, Filter, Group,
	// Sort
	SubscriberID string `json:"SubscriberId"`
}

// Event ...
//
// Represents an event in the calendar. In the user interface, event and task records are collectively
// referred to as activities.
type Event struct {
	// AccountID ...
	//
	// Represents the ID of the related account. The AccountId is determined as follows.If the value of WhatId is
	// any of the following objects, then Salesforce uses that object’s AccountId. Account Opportunity Contract
	// Custom object that is a child of Account If the value of the WhatId field is any other object, and the value of the
	// WhoId field is a contact object, then Salesforce uses that contact’s AccountId. (If your org uses Shared
	// Activities, Salesforce uses the AccountId of the primary contact.) Otherwise, Salesforce sets the value of the
	// AccountId field to null. For information on IDs, see ID Field Type.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActivityDate ...
	//
	// Contains the event’s due date if the IsAllDayEvent flag is set to true. This field is a date field with a
	// timestamp that is always set to midnight in the Coordinated Universal Time (UTC) time zone. Don’t attempt to alter
	// the timestamp to account for time zone differences. Label is Due Date Only.This field is required in versions
	// 12.0 and earlier if the IsAllDayEvent flag is set to true. The value for this field and StartDateTime must match,
	// or one of them must be null.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ActivityDate types.Date `json:"ActivityDate"`
	// ActivityDateTime ...
	//
	// Contains the event’s due date if the IsAllDayEvent flag is set to false. The time portion of this field is
	// always transferred in the Coordinated Universal Time (UTC) time zone. Translate the time portion to or from a
	// local time zone for the user or the application, as appropriate. Label is Due Date Time.This field is required in
	// versions 12.0 and earlier if the IsAllDayEvent flag is set to false. The value for this field and StartDateTime must
	// match, or one of them must be null.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ActivityDateTime types.Datetime `json:"ActivityDateTime"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Contains a text description of the event. Limit: 32,000 characters.
	//
	// Properties:Create,
	// Nillable, Update
	Description types.NullableString `json:"Description"`
	// DurationInMinutes ...
	//
	// Contains the event length, in minutes. Even though this field represents a temporal value, it is an integer
	// typenot a Date/Time type.Required in versions 12.0 and earlier if IsAllDayEvent is false. In versions 13.0 and
	// later, this field is optional, depending on the following: If IsAllDayEvent is true, you can supply a value for
	// either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if the values add up to the
	// same amount of time. If both fields are null, the duration defaults to one day. If IsAllDayEvent is false, a value
	// must be supplied for either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if
	// the values add up to the same amount of time. If the multiday event feature is enabled, then API versions 13.0 and
	// later support values greater than 1440 for the DurationInMinutes field. API versions 12.0 and earlier can’t
	// access event objects whose DurationInMinutes is greater than 1440. For more information, see Multiday Events.
	// Depending on your API version, errors with the DurationInMinutes and EndDateTime fields may appear in different
	// places. Versions 38.0 and beforeErrors always appear in the DurationInMinutes field. Versions 39.0 and laterIf
	// there’s no value for the DurationInMinutes field, errors appear in the EndDateTime field. Otherwise, they appear
	// in the DurationInMinutes field.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	DurationInMinutes types.NullableInt `json:"DurationInMinutes"`
	// EndDate ...
	//
	// Read-only. Available in versions 46.0 and later. This field supplies the date value that appears in the
	// EndDateTime field. This field is a date field with a timestamp that is always set to midnight in the Coordinated
	// Universal Time (UTC) time zone.
	//
	// Properties:Filter, Group, Nillable, Sort
	EndDate types.Date `json:"EndDate"`
	// EndDateTime ...
	//
	// Available in versions 13.0 and later. The time portion of this field is always transferred in the
	// Coordinated Universal Time (UTC) time zone. Translate the time portion to or from a local time zone for the user or the
	// application, as appropriate.This field is optional, depending on the following: If IsAllDayEvent is true, you can
	// supply a value for either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if the
	// values add up to the same amount of time. If both fields are null, the duration defaults to one day. If IsAllDayEvent
	// is false, a value must be supplied for either DurationInMinutes or EndDateTime. Supplying values in both
	// fields is allowed if the values add up to the same amount of time. Depending on your API version, errors with the
	// DurationInMinutes and EndDateTime fields may appear in different places. Versions 38.0 and beforeErrors always appear in
	// the DurationInMinutes field. Versions 39.0 and laterIf there’s no value for the DurationInMinutes field,
	// errors appear in the EndDateTime field. Otherwise, they appear in the DurationInMinutes field.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	EndDateTime types.Datetime `json:"EndDateTime"`
	// EventSubtype ...
	//
	// Provides standard subtypes to facilitate creating and searching for events. This field isn’t
	// updateable.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort
	EventSubtype types.NullableString `json:"EventSubtype"`
	// GroupEventType ...
	//
	// Read-only. Available in API versions 19.0 and later. The possible values are: 0 (Non–group event)An
	// event with no invitees. 1 (Group event)An event with invitees. 2 (Proposed event)An event created when a user
	// requests a meeting with a contact, lead, or person account using the Salesforce user interface. When the user
	// confirms the meeting, the proposed event becomes a group event. You can’t create, edit, or delete proposed events
	// in the API. This value is no longer used in API version 41.0 and later. 3 (IsRecurrence2 Series Pattern)An
	// event representing an event series recurrence pattern in Lightning Experience.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Nillable, Restricted picklist, Sort
	GroupEventType types.NullableString `json:"GroupEventType"`
	// ID ...
	ID string `json:"Id"`
	// IsAllDayEvent ...
	//
	// Indicates whether the ActivityDate field (true) or the ActivityDateTime field (false) is used to define
	// the date or time of the event. Label is All-Day Event. See also DurationInMinutes and EndDateTime.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsAllDayEvent bool `json:"IsAllDayEvent"`
	// IsArchived ...
	//
	// Indicates whether the event has been archived.
	//
	// Properties:Defaulted on create, Filter, Group,
	// Sort
	IsArchived bool `json:"IsArchived"`
	// IsChild ...
	//
	// Indicates whether the event is a child of another event (true) or not (false).
	// For a child event, you can
	// update IsReminderSet and ReminderDateTime only. You can query and delete a child event. If the objects related to
	// the child event are different from those related to the parent event (this difference is possible if you use API
	// version 25.0 or earlier) and one of the objects related to the child event is deleted, the objects related to the
	// parent event are updated to ensure data integrity.

	//
	// Properties:Defaulted on create, Filter, Group,
	// Sort
	IsChild bool `json:"IsChild"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsGroupEvent ...
	//
	// Indicates whether the event is a group eventthat is, whether it has invitees (true) or not
	// (false).
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsGroupEvent bool `json:"IsGroupEvent"`
	// IsPrivate ...
	//
	// Indicates whether users other than the creator of the event can (false) or can’t (true) see the event
	// details when viewing the event user’s calendar. However, users with the View All Data or Modify All Data
	// permission can see private events in reports and searches, or when viewing other users’ calendars. Private events
	// can’t be associated with opportunities, accounts, cases, campaigns, contracts, leads, or contacts. Label is
	// Private.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsPrivate bool `json:"IsPrivate"`
	// IsRecurrence ...
	//
	// Indicates whether a Salesforce Classic event is scheduled to repeat itself (true) or only occurs once
	// (false). This is a read-only field when updating records, but not when creating them. If this field value is true,
	// then RecurrenceEndDateOnly, RecurrenceStartDateTime, RecurrenceType, and any recurrence fields
	// associated with the given recurrence type must be populated. Label is Create recurring series of events.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort
	IsRecurrence bool `json:"IsRecurrence"`
	// IsRecurrence2 ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates whether a Lightning Experience
	// event is scheduled to repeat (true) or only occurs once (false. If this field value is true, then
	// Recurrence2PatternText and Recurrence2PatternVersion must be populated. Label is Repeat.
	//
	// Properties:Defaulted on
	// create, Filter, Group, Sort
	IsRecurrence2 bool `json:"IsRecurrence2"`
	// IsRecurrence2Exception ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates whether an individual event in a
	// Lightning Experience event series has a recurrence pattern that’s different from the rest of the series, making it
	// an exception.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsRecurrence2Exception bool `json:"IsRecurrence2Exception"`
	// IsRecurrence2Exclusion ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates when updates to a Lightning
	// Experience event series recurrence pattern have been made, but affect future event occurrences only. For past event
	// occurrences, IsRecurrence2Exclusion is set to true, excluding past occurrences from the series recurrence
	// pattern.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsRecurrence2Exclusion bool `json:"IsRecurrence2Exclusion"`
	// IsReminderSet ...
	//
	// Indicates whether the activity is a reminder (true) or not (false).
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Sort, Update
	IsReminderSet bool `json:"IsReminderSet"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Location ...
	//
	// Contains the location of the event.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Location types.NullableString `json:"Location"`
	// OwnerID ...
	//
	// Contains the ID of the user or public calendar who owns the event. Label is Assigned to ID.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Recurrence2PatternStartDate ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates the date and time when the
	// Lightning Experience event series begins. The time portion of this field is always transferred in the Coordinated
	// Universal Time (UTC) time zone. Translate the time portion to or from a local time zone for the user or the application,
	// as appropriate.
	//
	// Properties:Filter, Nillable, Sort
	Recurrence2PatternStartDate types.Datetime `json:"Recurrence2PatternStartDate"`
	// Recurrence2PatternText ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates the recurrence pattern for
	// Lightning Experience event series. Recurrence2PatternText is implemented with RFC 5545 standard specifications
	// for internet calendaring and scheduling. See Event Series section in this topic for usage examples. This
	// field has a maximum length of 512 characters.
	//
	// Properties:Nillable
	Recurrence2PatternText types.NullableString `json:"Recurrence2PatternText"`
	// Recurrence2PatternTimeZone ...
	//
	// This field available in API version 44.0 and later. Indicates the time zone in which the Lightning
	// Experience event series was created or updated. This field uses standard Java TimeZone IDs. For example,
	// America/Los_Angeles.
	//
	// Properties:, Filter, Group, Nillable, Sort
	Recurrence2PatternTimeZone types.NullableString `json:"Recurrence2PatternTimeZone"`
	// Recurrence2PatternVersion ...
	//
	// Read-only. This field available in API version 44.0 and later. Indicates the standard specifications for
	// Lightning Experience event series recurrence patterns. The only possible value is 1 (RFC 5545 v4 RRULE)RFC 5545 is a
	// standard set of specifications for internet calendaring and scheduling that IsRecurrence2 adheres to for series
	// recurrence patterns. RFC 5545 specifications for series recurrence patterns are called rrules. For examples of
	// rrule usage, see the Event Series section in this topic.
	//
	// Properties:Filter, Group, Nillable,
	// Restricted picklist, Sort,
	Recurrence2PatternVersion types.NullableString `json:"Recurrence2PatternVersion"`
	// RecurrenceActivityID ...
	//
	// Read-only. Not required on create. Contains the ID of the main record of the Salesforce Classic recurring
	// event. Subsequent occurrences have the same value in this field.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	RecurrenceActivityID types.NullableString `json:"RecurrenceActivityId"`
	// RecurrenceDayOfMonth ...
	//
	// Indicates the day of the month on which the event repeats.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	RecurrenceDayOfMonth types.NullableInt `json:"RecurrenceDayOfMonth"`
	// RecurrenceDayOfWeekMask ...
	//
	// Indicates the day or days of the week on which the Salesforce Classic recurring event repeats. This field
	// contains a bitmask. The values are as follows: Sunday = 1 Monday = 2 Tuesday = 4 Wednesday = 8 Thursday = 16 Friday = 32
	// Saturday = 64 Multiple days are represented as the sum of their numerical values. For example, Tuesday and Thursday =
	// 4 + 16 = 20.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	RecurrenceDayOfWeekMask types.NullableInt `json:"RecurrenceDayOfWeekMask"`
	// RecurrenceEndDateOnly ...
	//
	// Indicates the last date on which the event repeats. For multiday Salesforce Classic recurring events,
	// this is the day on which the last occurrence starts. This field is a date field with a timestamp that is always set
	// to midnight in the Coordinated Universal Time (UTC) time zone. Don’t attempt to alter the timestamp to
	// account for time zone differences.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	RecurrenceEndDateOnly types.Date `json:"RecurrenceEndDateOnly"`
	// RecurrenceInstance ...
	//
	// Indicates the frequency of the Salesforce Classic event’s recurrence. For example, 2nd or
	// 3rd.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	RecurrenceInstance types.NullableString `json:"RecurrenceInstance"`
	// RecurrenceInterval ...
	//
	// Indicates the interval between Salesforce Classic recurring events.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	RecurrenceInterval types.NullableInt `json:"RecurrenceInterval"`
	// RecurrenceMonthOfYear ...
	//
	// Indicates the month in which the Salesforce Classic recurring event repeats.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	RecurrenceMonthOfYear types.NullableString `json:"RecurrenceMonthOfYear"`
	// RecurrenceStartDateTime ...
	//
	// Indicates the date and time when the Salesforce Classic recurring event begins. The value must precede the
	// RecurrenceEndDateOnly. The time portion of this field is always transferred in the Coordinated Universal Time (UTC) time zone.
	// Translate the time portion to or from a local time zone for the user or the application, as appropriate.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	RecurrenceStartDateTime types.Datetime `json:"RecurrenceStartDateTime"`
	// RecurrenceTimeZoneSidKey ...
	//
	// Indicates the time zone associated with a Salesforce Classic recurring event. For example,
	// “UTC-8:00” for Pacific Standard Time.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist,
	// Sort, Update
	RecurrenceTimeZoneSidKey types.NullableString `json:"RecurrenceTimeZoneSidKey"`
	// RecurrenceType ...
	//
	// Indicates how often the Salesforce Classic event repeats. For example, daily, weekly, or every nth month
	// (where “nth” is defined in RecurrenceInstance).
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	RecurrenceType types.NullableString `json:"RecurrenceType"`
	// ReminderDateTime ...
	//
	// Represents the time when the reminder is scheduled to fire, if IsReminderSet is set to true. If
	// IsReminderSet is set to false, then the user may have deselected the reminder checkbox in the Salesforce user interface,
	// or the reminder has already fired at the time indicated by the value.
	//
	// Properties:Create, Filter,
	// Nillable, Sort, Update
	ReminderDateTime types.Datetime `json:"ReminderDateTime"`
	// ServiceAppointmentID ...
	ServiceAppointmentID types.NullableString `json:"ServiceAppointmentId"`
	// ShowAs ...
	//
	// Indicates how this event appears when another user views the calendar: Busy, Out of Office, or Free. Label
	// is Show Time As.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Restricted
	// picklist, Sort, Update
	ShowAs types.NullableString `json:"ShowAs"`
	// StartDateTime ...
	//
	// Indicates the start date and time of the event. Available in versions 13.0 and later.If the Event
	// IsAllDayEvent flag is set to true (indicating that it is an all-day Event), then the event start date information is
	// contained in the StartDateTime field. The time portion of this field is always transferred in the Coordinated
	// Universal Time (UTC) time zone. Translate the time portion to or from a local time zone for the user or the application,
	// as appropriate. If the Event IsAllDayEvent flag is set to false (indicating that it is not an all-day event),
	// then the event start date information is contained in the StartDateTime field. The time portion is always
	// transferred in the Coordinated Universal Time (UTC) time zone. You need to translate the time portion to or from a local
	// time zone for the user or the application, as appropriate. If this field has a value, then ActivityDate and
	// ActivityDateTime must either be null or match the value of this field.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	StartDateTime types.Datetime `json:"StartDateTime"`
	// Subject ...
	//
	// The subject line of the event, such as Call, Email, or Meeting. Limit: 255 characters.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WhatID ...
	//
	// The WhatId represents nonhuman objects such as accounts, opportunities, campaigns, cases, or custom
	// objects. WhatIds are polymorphic. Polymorphic means a WhatId is equivalent to the ID of a related object. The label
	// is Related To ID.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID.If Shared Activities is enabled, the
	// value of this field is the ID of the related lead or primary contact. If you add, update, or remove the WhoId field,
	// you might encounter problems with triggers, workflows, and data validation rules that are associated with
	// the record. The label is Name ID. If the JunctionIdList field is used, all WhoIds are included in the
	// relationship list. Beginning in API version 37.0, if the contact or lead ID in the WhoId field is not in the EventWhoIds
	// list, no error occurs and the ID is added to the EventWhoIds as the primary WhoId. If WhoId is set to null, an
	// arbitrary ID from the existing EventWhoIds list is promoted to the primary position.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	WhoID types.NullableString `json:"WhoId"`
}

// EventRelation ...
type EventRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EventID ...
	EventID string `json:"EventId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RelationID ...
	RelationID string `json:"RelationId"`
	// RespondedDate ...
	RespondedDate types.Datetime `json:"RespondedDate"`
	// Response ...
	Response types.NullableString `json:"Response"`
	// Status ...
	Status types.NullableString `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// Individual ...
//
// Represents a customer’s data privacy and protection preferences. Data privacy records based on the
// Individual object store your customers’ preferences. Data privacy records are associated with related leads,
// contacts, person accounts, and users. This object is available in API version 42.0 and later.
type Individual struct {
	// BirthDate ...
	//
	// The customer’s birthdate.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	BirthDate types.Date `json:"BirthDate"`
	// CanStorePiiElsewhere ...
	//
	// Indication that you can store the customer’s personally identifiable information (PII) outside of
	// their legislation area. For example, you could store an EU citizen’s PII data in the US.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	CanStorePiiElsewhere bool `json:"CanStorePiiElsewhere"`
	// ChildrenCount ...
	//
	// The number of children the customer has.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	ChildrenCount types.NullableInt `json:"ChildrenCount"`
	// ConsumerCreditScore ...
	//
	// The person's credit score (for example, 740).
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	ConsumerCreditScore types.NullableInt `json:"ConsumerCreditScore"`
	// ConsumerCreditScoreProviderName ...
	//
	// The name of the company that provided the credit score.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	ConsumerCreditScoreProviderName types.NullableString `json:"ConsumerCreditScoreProviderName"`
	// ConvictionsCount ...
	//
	// The number of convictions for the customer.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	ConvictionsCount types.NullableInt `json:"ConvictionsCount"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DeathDate ...
	//
	// The customer’s death date.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	DeathDate types.Date `json:"DeathDate"`
	// FirstName ...
	//
	// The customer’s first name. Maximum size is 40 characters.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	FirstName types.NullableString `json:"FirstName"`
	// HasOptedOutGeoTracking ...
	//
	// Preference to not track geolocation on mobile devices.
	//
	// Properties:Create, Defaulted on
	// create, Filter, Group, Sort, Update
	HasOptedOutGeoTracking bool `json:"HasOptedOutGeoTracking"`
	// HasOptedOutProcessing ...
	//
	// Preference to not process personal data, which can include collecting, storing, and sharing personal
	// data.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	HasOptedOutProcessing bool `json:"HasOptedOutProcessing"`
	// HasOptedOutProfiling ...
	//
	// Preference to not process data for predicting personal attributes, such as interests, behavior, and
	// location.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	HasOptedOutProfiling bool `json:"HasOptedOutProfiling"`
	// HasOptedOutSolicit ...
	//
	// Preference to not solicit products and services.
	//
	// Properties:Create, Defaulted on create,
	// Filter, Group, Sort, Update
	HasOptedOutSolicit bool `json:"HasOptedOutSolicit"`
	// HasOptedOutTracking ...
	//
	// Preference to not track customer web activity and whether the customer opens email sent through
	// Salesforce.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	HasOptedOutTracking bool `json:"HasOptedOutTracking"`
	// ID ...
	ID string `json:"Id"`
	// IndividualsAge ...
	//
	// Indicates whether the customer is considered to be a minor.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	IndividualsAge types.NullableString `json:"IndividualsAge"`
	// InfluencerRating ...
	//
	// A measure of the person's influence, irrespective of how we do business with them.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	InfluencerRating types.NullableInt `json:"InfluencerRating"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsHomeOwner ...
	//
	// Indicates whether the customer owns a home.
	//
	// Properties:Create, Defaulted on create, Filter,
	// Group, Sort, Update
	IsHomeOwner bool `json:"IsHomeOwner"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	//
	// Required. The customer’s last name. Maximum size is 80 characters.
	//
	// Properties:Create,
	// Filter, Group, Sort, Update
	LastName string `json:"LastName"`
	// LastViewedDate ...
	//
	// The timestamp for when the current user last viewed this record.
	//
	// Properties:Filter, Nillable,
	// Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// MasterRecordID ...
	//
	// If this object was deleted as the result of a merge, this field contains the ID of the record that was kept. If
	// this object was deleted for any other reason, or hasn’t been deleted, the value is null.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	MasterRecordID types.NullableString `json:"MasterRecordId"`
	// MilitaryService ...
	//
	// Indicates whether the customer has served in the military.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	MilitaryService types.NullableString `json:"MilitaryService"`
	// Name ...
	//
	// Concatenation of FirstName and LastName. Maximum size is 203 characters, including
	// whitespaces.
	//
	// Properties:Filter, Group, Sort
	Name string `json:"Name"`
	// Occupation ...
	//
	// The customer’s occupation. Maximum size is 150 characters.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	Occupation types.NullableString `json:"Occupation"`
	// OwnerID ...
	//
	// The ID of the owner of the account associated with this customer.
	//
	// Properties:Create, Defaulted
	// on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Salutation ...
	//
	// The title for addressing the customer, such as Dr. or Mrs.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	Salutation types.NullableString `json:"Salutation"`
	// SendIndividualData ...
	//
	// Preference to export personal data for delivery to the customer.
	//
	// Properties:Create, Defaulted
	// on create, Filter, Group, Sort, Update
	SendIndividualData bool `json:"SendIndividualData"`
	// ShouldForget ...
	//
	// Preference to delete records and personal data related to this customer.
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Sort, Update
	ShouldForget bool `json:"ShouldForget"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Website ...
	//
	// The URL for the customer’s website.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	Website types.NullableString `json:"Website"`
}

// Invoice ...
//
// Represents a financial document describing the total amount a buyer must pay for goods or services
// provided. This object is available in API version 48.0 and later.
type Invoice struct {
	// BillToContactID ...
	//
	// Inherited from the account’s Bill to Account.
	//
	// Properties:Filter, Group, Nillable, Sort,
	// Update
	BillToContactID types.NullableString `json:"BillToContactId"`
	// BillingAccountID ...
	//
	// The customer account for this invoice.
	//
	// Properties:Filter, Group, Sort, Update
	BillingAccountID string `json:"BillingAccountId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Users can add more information about this invoice. Maximum of 1000 characters.
	//
	//
	// Properties:Filter, Group, Nillable, Sort, Update
	Description types.NullableString `json:"Description"`
	// DocumentNumber ...
	//
	// System-generated number that is used to organize financial documents. Can be sequential or
	// random.
	//
	// Properties:Autonumber, Defaulted on create, Filter, idLookup, Sort
	DocumentNumber string `json:"DocumentNumber"`
	// DueDate ...
	//
	// The customer must pay the invoice by the due date. Unpaid invoices past the due date may be sent to
	// collections.
	//
	// Properties:Filter, Group, Sort, Update
	DueDate types.Date `json:"DueDate"`
	// ID ...
	ID string `json:"Id"`
	// InvoiceDate ...
	//
	// The date that the invoice was posted. Used with payment terms to determine the invoice’s DueDate. For
	// example, an invoice with an InvoiceDate of 04/01 and Net 30 payment terms would have a DueDate of 05/01.
	//
	//
	// Properties:Filter, Group, Sort, Update
	InvoiceDate types.Date `json:"InvoiceDate"`
	// InvoiceNumber ...
	//
	// System-created unique ID for this invoice.
	//
	// Properties:Filter, Group, Nillable, Sort, Update
	InvoiceNumber types.NullableString `json:"InvoiceNumber"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// OwnerID ...
	//
	// The user who owns an invoice record.
	//
	// Properties:Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// ReferenceEntityID ...
	//
	// The ID of the order or order summary that created this invoice.
	//
	// Properties:Filter, Group,
	// Nillable, Sort, Update
	ReferenceEntityID types.NullableString `json:"ReferenceEntityId"`
	// Status ...
	//
	// The state of the invoice.
	// Possible values are: Canceled: Reserved for future use. Draft: Reserved for
	// future use. ErrorPosting: Reserved for future use. Pending: Reserved for future use. Posted: Reserved for
	// future use.

	//
	// Properties:Filter, Group, Restricted picklist, Sort, Update
	Status string `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TotalAdjustmentAmount ...
	//
	// The sum of the invoice’s adjustment line amounts.
	//
	// Properties:Filter, Nillable, Sort
	TotalAdjustmentAmount types.NullableFloat64 `json:"TotalAdjustmentAmount"`
	// TotalAdjustmentAmountWithTax ...
	TotalAdjustmentAmountWithTax types.NullableFloat64 `json:"TotalAdjustmentAmountWithTax"`
	// TotalAdjustmentTaxAmount ...
	TotalAdjustmentTaxAmount types.NullableFloat64 `json:"TotalAdjustmentTaxAmount"`
	// TotalAmount ...
	//
	// The sum TotalAmount values on the invoice’s lines.
	//
	// Properties:Filter, Nillable, Sort
	TotalAmount types.NullableFloat64 `json:"TotalAmount"`
	// TotalAmountWithTax ...
	//
	// The sum of TotalAmountWithTax values on the invoice’s lines.
	//
	// Properties:Filter, Nillable,
	// Sort
	TotalAmountWithTax types.NullableFloat64 `json:"TotalAmountWithTax"`
	// TotalChargeAmount ...
	//
	// The sum of the invoice’s charges.
	//
	// Properties:Filter, Nillable, Sort
	TotalChargeAmount types.NullableFloat64 `json:"TotalChargeAmount"`
	// TotalChargeAmountWithTax ...
	TotalChargeAmountWithTax types.NullableFloat64 `json:"TotalChargeAmountWithTax"`
	// TotalChargeTaxAmount ...
	TotalChargeTaxAmount types.NullableFloat64 `json:"TotalChargeTaxAmount"`
	// TotalTaxAmount ...
	//
	// The sum of TaxAmount values on the invoice lines.
	//
	// Properties:Filter, Nillable, Sort
	TotalTaxAmount types.NullableFloat64 `json:"TotalTaxAmount"`
}

// ListEmailIndividualRecipient ...
type ListEmailIndividualRecipient struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// ListEmailID ...
	ListEmailID string `json:"ListEmailId"`
	// Name ...
	Name string `json:"Name"`
	// RecipientID ...
	RecipientID string `json:"RecipientId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// MessagingSession ...
//
// Represents a session on a Messaging channel. This object is available in API version 47.0 and later.
type MessagingSession struct {
	// AcceptTime ...
	//
	// The time when an agent accepts an incoming Messaging session.
	//
	// Properties:Create, Filter,
	// Nillable, Sort, Update
	AcceptTime types.Datetime `json:"AcceptTime"`
	// AgentMessageCount ...
	//
	// The number of messages sent by the agent during the session.
	//
	// Properties:Nillable
	AgentMessageCount types.NullableInt `json:"AgentMessageCount"`
	// AgentType ...
	//
	// The type of agent that is assigned to the Messaging session. Possible values are: Agent Bot BotToAgentBot &
	// Agent SystemUsed for triggered outbound messages
	//
	// Properties:Create, Defaulted on create, Filter,
	// Group, Nillable, Restricted picklist, Sort
	AgentType types.NullableString `json:"AgentType"`
	// ChannelEndUserFormula ...
	//
	// A concatenation of the Messaging channel and Messaging user.
	//
	// Properties:Filter, Group,
	// idLookup, Nillable, Sort
	ChannelEndUserFormula types.NullableString `json:"ChannelEndUserFormula"`
	// ChannelGroup ...
	//
	// The group of the associated Messaging channel.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	ChannelGroup types.NullableString `json:"ChannelGroup"`
	// ChannelIntent ...
	//
	// The intent of the associated Messaging channel.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	ChannelIntent types.NullableString `json:"ChannelIntent"`
	// ChannelKey ...
	//
	// The unique identifier for the associated Messaging channel.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	ChannelKey types.NullableString `json:"ChannelKey"`
	// ChannelLocale ...
	//
	// The locale of the associated Messaging channel.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	ChannelLocale types.NullableString `json:"ChannelLocale"`
	// ChannelName ...
	//
	// The name of the associated Messaging channel.
	//
	// Properties:Filter, Group, Nillable, Sort
	ChannelName types.NullableString `json:"ChannelName"`
	// ChannelType ...
	//
	// The type of the associated Messaging channel. Possible values are: Facebook Phone Text WhatsApp
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ChannelType types.NullableString `json:"ChannelType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EndTime ...
	//
	// The time when the Messaging session ended.
	//
	// Properties:Create, Filter, Nillable, Sort
	EndTime types.Datetime `json:"EndTime"`
	// EndUserAccountID ...
	//
	// The ID of the end user's account record.
	//
	// Properties:Filter, Group, Nillable, Sort
	EndUserAccountID types.NullableString `json:"EndUserAccountId"`
	// EndUserContactID ...
	//
	// The ID of the end user's contact record.
	//
	// Properties:Filter, Group, Nillable, Sort
	EndUserContactID types.NullableString `json:"EndUserContactId"`
	// EndUserMessageCount ...
	//
	// The number of messages sent by the Messaging end user.
	//
	// Properties:Nillable
	EndUserMessageCount types.NullableInt `json:"EndUserMessageCount"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp for when the current user last viewed a record related to this record.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp for when the current user last viewed this record. If this value is null, this record might
	// only have been referenced (LastReferencedDate) and not viewed.
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// MessagingChannelID ...
	//
	// The ID of the Messaging channel associated with this Messaging session.
	//
	// Properties:Create,
	// Filter, Group, Sort
	MessagingChannelID string `json:"MessagingChannelId"`
	// MessagingEndUserID ...
	//
	// The ID of the Messaging end user associated with this Messaging session.
	//
	// Properties:Create,
	// Filter, Group, Sort
	MessagingEndUserID string `json:"MessagingEndUserId"`
	// Name ...
	//
	// The name of this Messaging session.
	//
	// Properties:Autonumber, Defaulted on create, Filter,
	// idLookup, Sort
	Name string `json:"Name"`
	// Origin ...
	//
	// The origin of this Messaging session. Possible values are: AgentInitiated ConversationClose
	// InboundInitiated OptInOpt In Status Change OptOutOpt Out Status Change TriggeredOutbound
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Restricted picklist, Sort
	Origin string `json:"Origin"`
	// OwnerID ...
	//
	// The ID of the owner associated with this Messaging session.
	//
	// Properties:Create, Defaulted on
	// create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// PreviewDetails ...
	//
	// The preview shown to an agent for this Messaging session.
	//
	// Properties:Nillable
	PreviewDetails types.NullableString `json:"PreviewDetails"`
	// SessionKey ...
	//
	// The identifier for the Messaging session.
	//
	// Properties:Create, Filter, Group, Nillable, Sort
	SessionKey types.NullableString `json:"SessionKey"`
	// StartTime ...
	//
	// The time when the Messaging session started.
	//
	// Properties:Create, Filter, Nillable, Sort
	StartTime types.Datetime `json:"StartTime"`
	// Status ...
	//
	// The status of the Messaging session. Possible values are: Active Ended New Waiting
	//
	//
	// Properties:Create, Filter, Group, Restricted picklist, Sort
	Status string `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TargetUserID ...
	//
	// The ID of the target user associated with this Messaging session.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	TargetUserID types.NullableString `json:"TargetUserId"`
}

// Note ...
type Note struct {
	// Body ...
	Body types.NullableString `json:"Body"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsPrivate ...
	IsPrivate bool `json:"IsPrivate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// OwnerID ...
	OwnerID string `json:"OwnerId"`
	// ParentID ...
	ParentID string `json:"ParentId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	Title string `json:"Title"`
}

// NoteAndAttachment ...
//
// This read-only object contains all notes and attachments associated with an object.
type NoteAndAttachment struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsNote ...
	//
	// Indicates whether the object contains a note (true) or an attachment (false).
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsNote bool `json:"IsNote"`
	// IsPrivate ...
	//
	// If true, only the note owner or a user with the “Modify All Data” permission can view the note or query it
	// via the API. Note that if a regular user who does not have “Modify All Data” permission sets this field to
	// true on a note that they do not own, then they can no longer query, delete, or update that note. Label is
	// Private.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsPrivate bool `json:"IsPrivate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// OwnerID ...
	//
	// ID of the user who owns the note and attachment.
	//
	// Properties:Filter, Group, Sort
	OwnerID string `json:"OwnerId"`
	// ParentID ...
	//
	// ID of the parent object.
	//
	// Properties:Filter, Group, Sort
	ParentID string `json:"ParentId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Title ...
	//
	// Title of the note.
	//
	// Properties:Filter, Nillable, Group, Sort
	Title types.NullableString `json:"Title"`
}

// OpenActivity ...
//
// This read-only object is displayed in a related list of open activitiesfuture events and open
// tasksrelated to an object. It includes activities for all contacts related to the object. OpenActivity fields for phone
// calls are only available if your organization uses Salesforce CRM Call Center.
type OpenActivity struct {
	// AccountID ...
	//
	// Indicates the ID of the related account, which is determined as follows: The account associated with the
	// WhatId, if it exists; or The account associated with the WhoId, if it exists; otherwise null
	// For information on
	// IDs, see ID Field Type.

	//
	// Properties:Filter, Group, Nillable, Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActivityDate ...
	//
	// Indicates one of the following: The due date of a task The date of an event if IsAllDayEvent is set to true This
	// field has a time stamp that is always set to midnight in the Universal Time Coordinated (UTC) time zone. The time
	// stamp doesn’t represent the time of the activity; don’t attempt to alter it to accommodate time zone
	// differences. Label is Date.
	//
	// Properties:Filter, Group, Nillable, Sort
	ActivityDate types.Date `json:"ActivityDate"`
	// ActivityDateTime ...
	//
	// Contains the event’s due date if the IsAllDayEvent flag is set to false. The time portion of this field is
	// always transferred in the Coordinated Universal Time (UTC) time zone. Translate the time portion to or from a
	// local time zone for the user or the application, as appropriate. Label is Due Date Time.The value for this field
	// and StartDateTime must match, or one of them must be null.
	//
	// Properties:Aggregate, Filter, Nillable,
	// Sort
	ActivityDateTime types.Datetime `json:"ActivityDateTime"`
	// ActivitySubtype ...
	//
	// Provides standard subtypes to facilitate creating and searching for specific activity subtypes. This
	// field isn’t updateable. ActivitySubtype values: Task Email Call Event List Email
	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	ActivitySubtype types.NullableString `json:"ActivitySubtype"`
	// ActivityType ...
	//
	// Represents one of the following values: Call, Email, Meeting, or Other. Label is Type. These are default
	// values, and can be changed.
	//
	// Properties:Filter, Group, Nillable, Sort
	ActivityType types.NullableString `json:"ActivityType"`
	// AlternateDetailID ...
	//
	// The ID of a record the activity is related to which contains more details about the activity. For example, an
	// activity can be related to an EmailMessage record.
	//
	// Properties:Filter, Group, Nillable, Sort
	AlternateDetailID types.NullableString `json:"AlternateDetailId"`
	// CallDisposition ...
	//
	// Represents the result of a given call, for example, “we'll call back,” or “call unsuccessful.”
	// Limit is 255 characters.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallDisposition types.NullableString `json:"CallDisposition"`
	// CallDurationInSeconds ...
	//
	// Duration of the call in seconds.
	//
	// Properties:Filter, Group, Nillable, Sort
	CallDurationInSeconds types.NullableInt `json:"CallDurationInSeconds"`
	// CallObject ...
	//
	// Name of a call center. Limit is 255 characters.
	//
	// Properties:Filter, Group,Nillable, Sort
	CallObject types.NullableString `json:"CallObject"`
	// CallType ...
	//
	// The type of call being answered: Inbound, Internal, or Outbound.
	//
	// Properties:Filter, Group,
	// Nillable, Restricted picklist, Sort
	CallType types.NullableString `json:"CallType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Contains a description of the event or task. Limit is 32 KB.
	//
	// Properties:Nillable
	Description types.NullableString `json:"Description"`
	// DurationInMinutes ...
	//
	// Indicates the duration of the event or task.
	//
	// Properties:Filter, Group, Nillable, Sort
	DurationInMinutes types.NullableInt `json:"DurationInMinutes"`
	// EndDateTime ...
	//
	// Indicates the end date and time of the event or task. Available in versions 27.0 and later. This field is
	// optional, depending on the following: If IsAllDayEvent is true, you can supply a value for either DurationInMinutes
	// or EndDateTime. Supplying values in both fields is allowed if the values add up to the same amount of time. If
	// both fields are null, the duration defaults to one day. If IsAllDayEvent is false, a value must be supplied for
	// either DurationInMinutes or EndDateTime. Supplying values in both fields is allowed if the values add up to the
	// same amount of time.
	//
	// Properties:Filter, Nillable, Sort
	EndDateTime types.Datetime `json:"EndDateTime"`
	// ID ...
	ID string `json:"Id"`
	// IsAllDayEvent ...
	//
	// If the value of this field is set to true, then the activity is an event spanning a full day, and the
	// ActivityDate defines the date of the event. If the value of this field is set to false, then the activity may be an event
	// spanning less than a full day, or it may be a task. Label is All-Day Event.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsAllDayEvent bool `json:"IsAllDayEvent"`
	// IsClosed ...
	//
	// Indicates whether a task is closed; value is always false). This field is set indirectly by setting Status
	// on the taskeach picklist value has a corresponding IsClosed value. Label is Closed.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	//
	// Indicates whether the activity has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsHighPriority ...
	//
	// Indicates a high-priority task. This field is derived from the Priority field.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsHighPriority bool `json:"IsHighPriority"`
	// IsReminderSet ...
	//
	// Indicates whether a reminder is set for an activity (true) or not (false).
	//
	// Properties:Defaulted
	// on create, Filter, Group, Sort
	IsReminderSet bool `json:"IsReminderSet"`
	// IsTask ...
	//
	// If the value of this field is set to true, then the activity is a task; if the value is set to false, then the
	// activity is an event. Label is Task.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsTask bool `json:"IsTask"`
	// IsVisibleInSelfService ...
	//
	// If the value of this field is set to true, then the activity can be viewed in the self-service portal. Label is
	// Visible in Self-Service.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsVisibleInSelfService bool `json:"IsVisibleInSelfService"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Location ...
	//
	// If the activity is an event, then this field represents the location of the event. If the activity is a task,
	// then the value is null.
	//
	// Properties:Filter, Group, Nillable, Sort
	Location types.NullableString `json:"Location"`
	// OwnerID ...
	//
	// Indicates the ID of the user or group who owns the activity.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	OwnerID types.NullableString `json:"OwnerId"`
	// Priority ...
	//
	// Indicates the priority of a task, such as high, normal, or low.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Nillable, Sort
	Priority types.NullableString `json:"Priority"`
	// ReminderDateTime ...
	//
	// Represents the time at which a reminder is scheduled to fire if IsReminderSet is set to true. If
	// IsReminderSet is set to false, then either the user has deselected the reminder checkbox in the user interface or the
	// reminder has already fired at the time indicated by the value.
	//
	// Properties:Filter, Nillable, Sort
	ReminderDateTime types.Datetime `json:"ReminderDateTime"`
	// StartDateTime ...
	StartDateTime types.Datetime `json:"StartDateTime"`
	// Status ...
	//
	// Indicates the current status of a task, such as in progress or complete. Each predefined status field sets a
	// value for IsClosed. To obtain picklist values, query TaskStatus.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Nillable, Sort
	Status types.NullableString `json:"Status"`
	// Subject ...
	//
	// Contains the subject of the task or event.
	//
	// Properties:Filter, Nillable, Sort
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WhatID ...
	//
	// The WhatId represents nonhuman objects such as accounts, opportunities, campaigns, cases, or custom
	// objects. WhatIds are polymorphic. Polymorphic means a WhatId is equivalent to the ID of a related object. The label
	// is Related To ID.
	//
	// Properties:Filter, Group, Nillable, Sort
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID. If Shared Activities is enabled, the
	// value of this field is the ID of the related lead or primary contact. If you add, update, or remove the WhoId field,
	// you might encounter problems with triggers, workflows, and data validation rules that are associated with
	// the record. The label is Name ID.
	//
	// Properties:Filter, Group, Nillable, Sort
	WhoID types.NullableString `json:"WhoId"`
}

// Opportunity ...
//
// Represents an opportunity, which is a sale or pending deal.
type Opportunity struct {
	// AccountID ...
	//
	// ID of the account associated with this opportunity.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	AccountID types.NullableString `json:"AccountId"`
	// Amount ...
	//
	// Estimated total sale amount. For opportunities with products, the amount is the sum of the related
	// products. Any attempt to update this field, if the record has products, will be ignored. The update call will not be
	// rejected, and other fields will be updated as specified, but the Amount will be unchanged.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Amount types.NullableFloat64 `json:"Amount"`
	// CampaignID ...
	//
	// ID of a related Campaign. This field is defined only for those organizations that have the campaign feature
	// Campaigns enabled. The User must have read access rights to the cross-referenced Campaign object in order to create
	// or update that campaign into this field on the opportunity.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	CampaignID types.NullableString `json:"CampaignId"`
	// CloseDate ...
	//
	// Required. Date when the opportunity is expected to close.
	//
	// Properties:Create, Filter, Group,
	// Sort, Update
	CloseDate types.Date `json:"CloseDate"`
	// ContactID ...
	//
	// ID of the contact associated with this opportunity, set as the primary contact. Read-only field that is
	// derived from the opportunity contact role, which is created at the same time the opportunity is created. This field
	// can only be populated when it’s created, and can’t be updated. To update the value in this field, change the
	// IsPrimary flag on the OpportunityContactRole associated with this opportunity. Available in API version 46.0 and
	// later.
	//
	// Properties:Create, Filter, Group, Nillable, Sort
	ContactID types.NullableString `json:"ContactId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// CurrentGenerators__c ...
	CurrentGenerators__c types.NullableString `json:"CurrentGenerators__c"`
	// DeliveryInstallationStatus__c ...
	DeliveryInstallationStatus__c types.NullableString `json:"DeliveryInstallationStatus__c"`
	// Description ...
	//
	// Text description of the opportunity. Limit: 32,000 characters.
	//
	// Properties:Create, Nillable,
	// Update
	Description types.NullableString `json:"Description"`
	// ExpectedRevenue ...
	//
	// Read-only field that is equal to the product of the opportunity Amount field and the Probability. You
	// can’t directly set this field, but you can indirectly set it by setting the Amount or Probability
	// fields.
	//
	// Properties:Filter, Nillable, Sort
	ExpectedRevenue types.NullableFloat64 `json:"ExpectedRevenue"`
	// Fiscal ...
	//
	// If fiscal years are not enabled, the name of the fiscal quarter or period in which the opportunity CloseDate
	// falls. Value should be in YYY Q format, for example, '2006 1' for first quarter of 2006.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	Fiscal types.NullableString `json:"Fiscal"`
	// FiscalQuarter ...
	//
	// Represents the fiscal quarter. Valid values are 1, 2, 3, or 4.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	FiscalQuarter types.NullableInt `json:"FiscalQuarter"`
	// FiscalYear ...
	//
	// Represents the fiscal year, for example, 2006.
	//
	// Properties:Filter, Group, Nillable, Sort
	FiscalYear types.NullableInt `json:"FiscalYear"`
	// ForecastCategory ...
	//
	// Restricted picklist field. It is implied, but not directly controlled, by the StageName field. You can
	// override this field to a different value than is implied by the StageName value. The values of this field are fixed
	// enumerated values. The field labels are localized to the language of the user performing the operation, if localized
	// versions of those labels are available for that language in the user interface.In API version 12.0 and later, the
	// value of this field is automatically set based on the value of the ForecastCategoryName and can’t be updated
	// any other way. The field properties Create, Defaulted on create, Nillable, and Update are not available in
	// version 12.0.
	//
	// Properties:Filter, Group, Restricted picklist, Sort
	ForecastCategory string `json:"ForecastCategory"`
	// ForecastCategoryName ...
	//
	// Available in API version 12.0 and later. The name of the forecast category. It is implied, but not directly
	// controlled, by the StageName field. You can override this field to a different value than is implied by the StageName
	// value.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ForecastCategoryName types.NullableString `json:"ForecastCategoryName"`
	// HasOpenActivity ...
	//
	// Indicates whether an opportunity has an open event or task (true) or not (false). Available in API version
	// 35.0 and later.
	//
	// Properties:Defaulted on create, Group,
	HasOpenActivity bool `json:"HasOpenActivity"`
	// HasOpportunityLineItem ...
	//
	// Read-only field that indicates whether the opportunity has associated line items. A value of true means
	// that Opportunity line items have been created for the opportunity. An opportunity can have opportunity line
	// items only if the opportunity has a price book. The opportunity line items must correspond to PricebookEntry
	// objects that are listed in the opportunity Pricebook2. However, you can insert opportunity line items on an
	// opportunity that does not have an associated Pricebook2. For the first opportunity line item that you insert on an
	// opportunity without a Pricebook2, the API automatically sets the Pricebook2Id field, if the opportunity line item
	// corresponds to a PricebookEntry in an active Pricebook2 that has a CurrencyIsoCode field that matches the
	// CurrencyIsoCode field of the opportunity. If the Pricebook2 is not active or the CurrencyIsoCode fields do not match, then
	// the API returns an error. You can’t update the Pricebook2Id or PricebookId fields if opportunity line items
	// exist on the Opportunity. You must delete the line items before attempting to update the PricebookId
	// field.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	HasOpportunityLineItem bool `json:"HasOpportunityLineItem"`
	// HasOverdueTask ...
	//
	// Indicates whether an opportunity has an overdue task (true) or not (false). Available in API version 35.0
	// and later.
	//
	// Properties:Defaulted on create, Group,
	HasOverdueTask bool `json:"HasOverdueTask"`
	// ID ...
	ID string `json:"Id"`
	// IsClosed ...
	//
	// Directly controlled by StageName. You can query and filter on this field, but you can’t directly set it in
	// a create, upsert, or update request. It can only be set via StageName. Label is Closed.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	//
	// Indicates whether the object has been moved to the Recycle Bin (true) or not (false). Label is
	// Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsPrivate ...
	IsPrivate bool `json:"IsPrivate"`
	// IsWon ...
	//
	// Directly controlled by StageName. You can query and filter on this field, but you can’t directly set the
	// value. It can only be set via StageName. Label is Won.
	//
	// Properties:Defaulted on create, Filter, Group,
	// Sort
	IsWon bool `json:"IsWon"`
	// LastActivityDate ...
	//
	// Value is one of the following, whichever is the most recent: Due date of the most recent event logged against
	// the record. Due date of the most recently closed task associated with the record.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	LastActivityDate types.Date `json:"LastActivityDate"`
	// LastAmountChangedHistoryID ...
	//
	// ID of the OpportunityHistory record that contains information about when the opportunity Amount field
	// was last updated in Winter ’21 or later. Information includes the date and time of the change and the user who
	// made the change. Available in API version 50.0 and later.
	//
	// Properties:Filter, Group, Nillable, Sort
	LastAmountChangedHistoryID types.NullableString `json:"LastAmountChangedHistoryId"`
	// LastCloseDateChangedHistoryID ...
	//
	// ID of the OpportunityHistory record that contains information about when the opportunity Close Date
	// field was last updated in Winter ’21 or later. Information includes the date and time of the change and the user
	// who made the change. Available in API version 50.0 and later.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	LastCloseDateChangedHistoryID types.NullableString `json:"LastCloseDateChangedHistoryId"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The timestamp when the current user last accessed this record, a record related to this record, or a list
	// view.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The timestamp when the current user last viewed this record or list view. If this value is null, the user
	// might have only accessed this record or list view (LastReferencedDate) but not viewed it.
	//
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// LeadSource ...
	//
	// Source of this opportunity, such as Advertisement or Trade Show.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	LeadSource types.NullableString `json:"LeadSource"`
	// MainCompetitors__c ...
	MainCompetitors__c types.NullableString `json:"MainCompetitors__c"`
	// Name ...
	//
	// Required. A name for this opportunity. Limit: 120 characters.
	//
	// Properties:Create, Filter,
	// Group, idLookup, Sort, Update
	Name string `json:"Name"`
	// NextStep ...
	//
	// Description of next task in closing opportunity. Limit: 255 characters.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	NextStep types.NullableString `json:"NextStep"`
	// OrderNumber__c ...
	OrderNumber__c types.NullableString `json:"OrderNumber__c"`
	// OwnerID ...
	//
	// ID of the User who has been assigned to work this opportunity.If you update this field, the previous owner's
	// access becomes Read Only or the access specified in your organization-wide default for opportunities,
	// whichever is greater. If you have set up opportunity teams in your organization, updating this field has different
	// consequences depending on your version of the API: For API version 12.0 and later, sharing records are kept, as they are
	// for all objects. For API version before 12.0, sharing records are deleted. For API version 16.0 and later,
	// users must have the “Transfer Record” permission in order to update (transfer) account ownership using
	// this field.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// Pricebook2ID ...
	//
	// ID of a related Pricebook2 object. The Pricebook2Id field indicates which Pricebook2 applies to this
	// opportunity. The Pricebook2Id field is defined only for those organizations that have products enabled as a feature.
	// You can specify values for only one field (Pricebook2Id or PricebookId)not both fields. For this reason, both
	// fields are declared nillable.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable,
	// Sort, Update
	Pricebook2ID types.NullableString `json:"Pricebook2Id"`
	// Probability ...
	//
	// Percentage of estimated confidence in closing the opportunity. It is implied, but not directly
	// controlled, by the StageName field. You can override this field to a different value than what is implied by the
	// StageName. Note If you're changing the Probability field through the API using a partner WSDL call, or an Apex before
	// trigger, and the value may have several decimal places, we recommend rounding the value to a whole number. For
	// example, the following Apex in a before trigger uses the round method to change the field value: o.probability =
	// o.probability.round();
	//
	// Properties:Create, Defaulted on create, Filter, Nillable, Sort, Update
	Probability types.NullableFloat64 `json:"Probability"`
	// StageName ...
	//
	// Required. Current stage of this record. The StageName field controls several other fields on an
	// opportunity. Each of the fields can be directly set or implied by changing the StageName field. In addition, the
	// StageName field is a picklist, so it has additional members in the returned describeSObjectResult to indicate how it
	// affects the other fields. To obtain the stage name values in the picklist, query the OpportunityStage object. If
	// the StageName is updated, then the ForecastCategoryName, IsClosed, IsWon, and Probability are
	// automatically updated based on the stage-category mapping.
	//
	// Properties:Create, Filter, Group, Sort, Update
	StageName string `json:"StageName"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TotalOpportunityQuantity ...
	//
	// Number of items included in this opportunity. Used in quantity-based forecasting.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	TotalOpportunityQuantity types.NullableFloat64 `json:"TotalOpportunityQuantity"`
	// TrackingNumber__c ...
	TrackingNumber__c types.NullableString `json:"TrackingNumber__c"`
	// Type ...
	//
	// Type of opportunity. For example, Existing Business or New Business. Label is Opportunity Type.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Type types.NullableString `json:"Type"`
}

// OpportunityContactRole ...
//
// Represents the role that a Contact plays on an Opportunity.
type OpportunityContactRole struct {
	// ContactID ...
	//
	// ID of an associated Contact. The API applies user access rights to the associated Opportunity for this
	// object, but not to the associated Contact. The API may return rows from a query on this object that include this
	// field’s values for contacts to which the user does not have sufficient access rights. It may also return values for
	// this field for contacts that have been deleted. In either case, the client must perform a query on the contact
	// table for this field’s value to determine whether the Contact is accessible to the user and has not been
	// deleted.
	//
	// Properties:Create, Filter, Group, Sort, Update
	ContactID string `json:"ContactId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	//
	// Indicates whether the record has been moved to the Recycle Bin (true) or not (false). The IsDeleted flag is
	// usable only when the parent record is deleted to the recycle bin, and not when the OpportunityContactRole record
	// is deleted directly. Label is Deleted.
	//
	// Properties:Defaulted on create, Filter
	IsDeleted bool `json:"IsDeleted"`
	// IsPrimary ...
	//
	// Indicates whether the associated Contact plays the primary role on the Opportunity (true) or not (false).
	// Each Opportunity has only one primary contact. Label is Primary.
	//
	// Properties:Create, Defaulted on
	// create, Filter, Group, Sort, Update
	IsPrimary bool `json:"IsPrimary"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// OpportunityID ...
	//
	// Required. ID of an associated Opportunity. This field is non-nullable, and it cannot be updated. You must
	// provide a value for this field when creating new records. You can’t change it after it has been created.
	//
	//
	// Properties:Create, Filter, Group, Sort
	OpportunityID string `json:"OpportunityId"`
	// Role ...
	//
	// Name of the role played by the associated Contact on the Opportunity, such as Business User or Decision
	// Maker.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Role types.NullableString `json:"Role"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// OutgoingEmailRelation ...
type OutgoingEmailRelation struct {
	// ExternalID ...
	ExternalID types.NullableString `json:"ExternalId"`
	// ID ...
	ID string `json:"Id"`
	// OutgoingEmailID ...
	OutgoingEmailID types.NullableString `json:"OutgoingEmailId"`
	// RelationAddress ...
	RelationAddress types.NullableString `json:"RelationAddress"`
	// RelationID ...
	RelationID types.NullableString `json:"RelationId"`
}

// ProcessInstance ...
//
// Represents an instance of a single, end-to-end approval process. Use this and the node, step, and workitem
// process instance objects to create approval history reports.
type ProcessInstance struct {
	// CompletedDate ...
	//
	// The completion date and time of the approval process. The ElapsedTimeDay, ElapsedTimeHours, and
	// ElapsedTimeMinutes field values are calculated using CompletedDate.
	//
	// Properties:Filter, Nillable, Sort
	CompletedDate types.Datetime `json:"CompletedDate"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ElapsedTimeInDays ...
	//
	// The total elapsed time in days between when the approval process instance was started and now.
	//
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInDays types.NullableFloat64 `json:"ElapsedTimeInDays"`
	// ElapsedTimeInHours ...
	//
	// The total elapsed time in hours between when the approval process instance was started and now.
	//
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInHours types.NullableFloat64 `json:"ElapsedTimeInHours"`
	// ElapsedTimeInMinutes ...
	//
	// The total elapsed time in minutes between when the approval process instance was started and now.
	//
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInMinutes types.NullableFloat64 `json:"ElapsedTimeInMinutes"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastActorID ...
	//
	// The last actor that approved, rejected, or recalled the process.
	//
	// Properties:Group, Filter,
	// Nillable, Sort
	LastActorID types.NullableString `json:"LastActorId"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// ProcessDefinitionID ...
	//
	// The ID of this approval process instance.
	//
	// Properties:Group, Filter, Sort
	ProcessDefinitionID string `json:"ProcessDefinitionId"`
	// Status ...
	//
	// The status of this approval process instance, for example Started, Pending, or Approved.
	//
	//
	// Properties:Filter, Group, Restricted picklist, Sort
	Status string `json:"Status"`
	// SubmittedByID ...
	SubmittedByID types.NullableString `json:"SubmittedById"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TargetObjectID ...
	//
	// ID of the object affected by this approval process instance.
	//
	// Properties:Filter, Group, Sort
	TargetObjectID string `json:"TargetObjectId"`
}

// ProcessInstanceHistory ...
//
// This read-only object shows all steps and pending approval requests associated with an approval process
// (ProcessInstance).
type ProcessInstanceHistory struct {
	// ActorID ...
	//
	// ID of the user who is currently assigned to this ProcessInstance.
	//
	// Properties:Filter, Group,
	// Sort
	ActorID string `json:"ActorId"`
	// Comments ...
	//
	// Comments for a ProcessInstanceStep. This field doesn't apply to ProcessInstanceWorkitem
	// records.
	//
	// Properties:Filter, Nillable, Sort
	Comments types.NullableString `json:"Comments"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ElapsedTimeInDays ...
	//
	// The total time in days between when the approval process instance was started and when it was
	// completed.
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInDays types.NullableFloat64 `json:"ElapsedTimeInDays"`
	// ElapsedTimeInHours ...
	//
	// The total time in hours between when the approval process instance was started and when it was
	// completed.
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInHours types.NullableFloat64 `json:"ElapsedTimeInHours"`
	// ElapsedTimeInMinutes ...
	//
	// The total time in minutes between when the approval process instance was started and when it was
	// completed.
	//
	// Properties:Filter, Nillable, Sort
	ElapsedTimeInMinutes types.NullableFloat64 `json:"ElapsedTimeInMinutes"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsPending ...
	//
	// Indicates whether the ProcessInstance is pending (true) or not (false).
	//
	// Properties:Defaulted
	// on create, Filter, Group, Sort
	IsPending bool `json:"IsPending"`
	// OriginalActorID ...
	//
	// ID of the user who was originally assigned this ProcessInstance.
	//
	// Properties:Filter, Group,
	// Sort
	OriginalActorID string `json:"OriginalActorId"`
	// ProcessInstanceID ...
	//
	// ID of the ProcessInstance.
	//
	// Properties:Filter, Group, Sort
	ProcessInstanceID string `json:"ProcessInstanceId"`
	// ProcessNodeID ...
	//
	// ID of this step.
	//
	// Properties:Filter, Group, Nillable, Sort
	ProcessNodeID types.NullableString `json:"ProcessNodeId"`
	// RemindersSent ...
	//
	// Number of reminders that have been sent. Default is 0 (zero).
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	RemindersSent types.NullableInt `json:"RemindersSent"`
	// StepStatus ...
	//
	// Indicates the current status of the ProcessInstanceStep.
	//
	// Properties:Filter, Group,
	// Nillable, Restricted picklist, Sort
	StepStatus types.NullableString `json:"StepStatus"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TargetObjectID ...
	//
	// ID of the object being approved.
	//
	// Properties:Filter, Group, Nillable, Sort
	TargetObjectID types.NullableString `json:"TargetObjectId"`
}

// RecordAction ...
//
// Represents a relationship between a record and an action, such as a flow. Create a RecordAction for every
// action that you want to associate with a particular record. Available in API version 42.0 and later.
type RecordAction struct {
	// ActionDefinition ...
	//
	// Required in Lightning Flow for Service implementations that use version 44.0 or later of the API. The API
	// name of the action to associate with the record; for example, the API name of a flow. Use this field rather than
	// FlowDefinition. To distinguish a quick action from a flow with the same API name, we prepend "QuickAction" to the API name of
	// every quick action.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ActionDefinition types.NullableString `json:"ActionDefinition"`
	// ActionType ...
	//
	// Required in Lightning Flow for Service implementations that use version 46.0 or later of the API. The type
	// of action. Possible values are: Flow (default) QuickAction For versions of the API prior to version 46.0,
	// this field is set to Flow.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	ActionType types.NullableString `json:"ActionType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// FlowDefinition ...
	//
	// Optional in Lightning Flow for Service implementations using version 42.0 or 43.0 of the API. An upgrade to
	// Winter '19 or later, which uses API version 44.0 or later, copies FlowDefinition to ActionDefinition. For
	// versions 42.0 and 43.0, this field is the API name of the flow that’s associated with the record.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	FlowDefinition types.NullableString `json:"FlowDefinition"`
	// FlowInterviewID ...
	//
	// Optional. The flow interview ID of the paused or completed flow. This field can’t be set in Process
	// Builder.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	FlowInterviewID types.NullableString `json:"FlowInterviewId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsMandatory ...
	//
	// Optional. Specifies whether the action is mandatory. The default value is false. Note At runtime, we show a
	// reminder when the user closes a mandatory flow without completing it. We don't show the reminder for quick
	// actions.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsMandatory bool `json:"IsMandatory"`
	// IsUIRemoveHidden ...
	//
	// Optional. Specifies whether the ability to remove the action is hidden in the UI. The default value is
	// false. If true, the UI hides the ability to remove the action. However, actions can still be deleted using the
	// API.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsUIRemoveHidden bool `json:"IsUiRemoveHidden"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Order ...
	//
	// Required. The order of the action among all actions associated with this record.
	//
	//
	// Properties:Create, Filter, Group, Sort, Update
	Order int `json:"Order"`
	// Pinned ...
	//
	// Required. Specifies whether the action is pinned to the top or bottom of the component. If an action is
	// pinned, users see the Remove option in the UI unless IsUiRemoveHidden is set to true. Possible values are: None
	// (default) Top Bottom
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Restricted
	// picklist, Sort, Update
	Pinned types.NullableString `json:"Pinned"`
	// RecordID ...
	//
	// Required. Record associated with the action. In version 46.0 and above, we support most object types. To
	// learn about supported objects, see the Lightning Flow for Service Developer’s Guide.
	//
	//
	// Properties:Create, Filter, Group, Sort, Update
	RecordID string `json:"RecordId"`
	// Status ...
	//
	// Required. The current state of the action. Possible values are: New (default) Paused Complete Started
	// UnlinkedThe action was unlinked because the flow was paused and the current record for the flow interview changed.
	// Paused and unlinked statuses do not apply to quick actions. This field can’t be set in Process Builder.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	Status types.NullableString `json:"Status"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}

// RecordActionHistory ...
//
// Represents the lifecycle of a RecordAction as it goes through different states. Available in API version
// 44.0 and later.
type RecordActionHistory struct {
	// ActionDefinitionAPIName ...
	//
	//
	//
	// Properties:Required. The API name of the action associated with the record. To distinguish a
	// quick action from a flow with the same API name, we prepend "QuickAction" to the API name of every quick action.
	ActionDefinitionAPIName string `json:"ActionDefinitionApiName"`
	// ActionDefinitionLabel ...
	//
	//
	//
	// Properties:Required. The label of the action that took place.
	ActionDefinitionLabel string `json:"ActionDefinitionLabel"`
	// ActionType ...
	//
	// Required. The type of action associated with the record. Possible values are: Flow (default)
	// QuickAction
	//
	// Properties:Defaulted on create, Restricted picklist
	ActionType string `json:"ActionType"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// ID ...
	ID string `json:"Id"`
	// IsMandatory ...
	//
	// Optional. Specifies whether the action is mandatory. The default value is false.
	//
	//
	// Properties:Defaulted on create
	IsMandatory bool `json:"IsMandatory"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LoggedTime ...
	//
	// Required. The timestamp when the state change occurred.
	//
	// Properties:Filter, Sort
	LoggedTime types.Datetime `json:"LoggedTime"`
	// ParentRecordID ...
	//
	// Required. The parent record for the associated action.
	//
	// Properties:Filter, Sort
	ParentRecordID string `json:"ParentRecordId"`
	// Pinned ...
	//
	// Optional. Specifies whether the action is pinned to the top or bottom, or unpinned. Possible values are:
	// None Top Bottom
	//
	// Properties:Defaulted on create, Nillable, Restricted picklist
	Pinned types.NullableString `json:"Pinned"`
	// RecordActionID ...
	//
	// Required. The ID of the RecordAction.
	//
	// Properties:Filter, Sort
	RecordActionID string `json:"RecordActionId"`
	// State ...
	//
	// Required. The state of the action. A state change triggers the logging of a history event. Possible values
	// are: New (default) Paused Complete Started UnlinkedThe action was unlinked because the flow was paused and the
	// current record for the flow interview changed.
	//
	// Properties:Defaulted on create, Restricted picklist
	State string `json:"State"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// UserID ...
	//
	//
	//
	// Properties:Required. The user that conducted the action.
	UserID string `json:"UserId"`
}

// ReturnOrder ...
//
// Represents the return or repair of inventory or products in Field Service, or the return of order products
// in Order Management. This object is available in API version 42.0 and later.
type ReturnOrder struct {
	// AccountID ...
	//
	// The account associated with the return order.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	AccountID types.NullableString `json:"AccountId"`
	// CaseID ...
	//
	// The case associated with the return order.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	CaseID types.NullableString `json:"CaseId"`
	// ContactID ...
	//
	// The contact associated with the return order.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	ContactID types.NullableString `json:"ContactId"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Notes or context about the return order.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// DestinationLocationID ...
	//
	// The location where the items are being returned to. For example, if the return order tracks the return of
	// products from a technician’s van to a warehouse, the warehouse is the destination location.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	DestinationLocationID types.NullableString `json:"DestinationLocationId"`
	// ExpectedArrivalDate ...
	//
	// The date when the items are expected to arrive at the destination location.
	//
	// Properties:Create,
	// Filter, Nillable, Sort, Update
	ExpectedArrivalDate types.Datetime `json:"ExpectedArrivalDate"`
	// ExpirationDate ...
	//
	// Authorizations can’t be captured after their expiration dates.
	// This field is available in API
	// version 50.0 and later.

	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ExpirationDate types.Datetime `json:"ExpirationDate"`
	// GrandTotalAmount ...
	//
	// Total, including adjustments and tax, of the products and delivery charges on the return order. This
	// includes all return order line items associated with the return order. This amount is equal to TotalAmount +
	// TotalTaxAmount.
	// This is a calculated field.

	// This field is available in API version 50.0 and later.

	//
	//
	// Properties:Filter, Nillable, Sort
	GrandTotalAmount types.NullableFloat64 `json:"GrandTotalAmount"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The date when the return order was last modified. Its label in the user interface is Last Modified
	// Date.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The date when the return order was last viewed.
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// LifeCycleType ...
	//
	// Specifies whether the order summary is managed by Salesforce Order Management (MANAGED) or by an external
	// system (UNMANAGED). An unmanaged order summary is stored in Salesforce for reference purposes.
	// Some Order
	// Management APIs reject input records that are associated with unmanaged order summaries. Order Management does not
	// update financial bucket fields on some records that are associated with unmanaged order summaries. A user with
	// the EditUnmanagedOrderSummaries or B2BCommerceIntegrator permission can edit certain fields on objects
	// related to unmanaged order summaries that are normally only accessible via APIs.

	// Possible values are:
	// MANAGEDManaged UNMANAGEDUnmanaged

	// This field is available in API version 50.0 and later.

	//
	//
	// Properties:Filter, Group, Nillable, Restricted picklist, Sort
	LifeCycleType types.NullableString `json:"LifeCycleType"`
	// OrderID ...
	//
	// The order associated with the return order. When you associated a return order with an order, you can
	// associate the return order’s line items with order products.
	//
	// Properties:Create, Filter, Group,
	// Nillable, Sort, Update
	OrderID types.NullableString `json:"OrderId"`
	// OwnerID ...
	//
	// The owner of the return order.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort,
	// Update
	OwnerID string `json:"OwnerId"`
	// ReturnOrderNumber ...
	//
	// (Read only) Auto-generated number identifying the return order.
	//
	// Properties:Autonumber,
	// Defaulted on create, Filter, idLookup, Sort
	ReturnOrderNumber string `json:"ReturnOrderNumber"`
	// ReturnedByID ...
	//
	// ID of the user returning the items.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ReturnedByID types.NullableString `json:"ReturnedById"`
	// ShipFromAddress ...
	//
	// The return shipping address. This address tracks the location of the items at the start of the return or
	// repair. For example, if a customer is returning an item, the Ship From address is the customer’s
	// address.
	//
	// Properties:Filter, Nillable
	ShipFromAddress types.Address `json:"ShipFromAddress"`
	// ShipFromCity ...
	//
	// The city of the return shipping address. This address tracks the location of the items at the start of the
	// return or repair. For example, if a customer is returning an item, the Ship From address is the customer’s
	// address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShipFromCity types.NullableString `json:"ShipFromCity"`
	// ShipFromCountry ...
	//
	// The country of the return shipping address. This address tracks the location of the items at the start of the
	// return or repair. For example, if a customer is returning an item, the Ship From address is the customer’s
	// address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShipFromCountry types.NullableString `json:"ShipFromCountry"`
	// ShipFromGeocodeAccuracy ...
	//
	// Accuracy level of the geocode for the return shipping address. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields. Note This field is available in the API only.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	ShipFromGeocodeAccuracy types.NullableString `json:"ShipFromGeocodeAccuracy"`
	// ShipFromLatitude ...
	//
	// Used with Longitude to specify the precise geolocation of the return shipping address. Acceptable values
	// are numbers between –90 and 90 with up to 15 decimal places. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields. Note This field is available in the API only.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ShipFromLatitude types.NullableFloat64 `json:"ShipFromLatitude"`
	// ShipFromLongitude ...
	//
	// Used with Latitude to specify the precise geolocation of the return shipping address. Acceptable values
	// are numbers between –180 and 180 with up to 15 decimal places. See Compound Field Considerations and
	// Limitations for details on geolocation compound fields. Note This field is available in the API only.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ShipFromLongitude types.NullableFloat64 `json:"ShipFromLongitude"`
	// ShipFromPostalCode ...
	//
	// The postal code of the return shipping address. This address tracks the location of the items at the start of
	// the return or repair. For example, if a customer is returning an item, the Ship From address is the customer’s
	// address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShipFromPostalCode types.NullableString `json:"ShipFromPostalCode"`
	// ShipFromState ...
	//
	// The state of the return shipping address. This address tracks the location of the items at the start of the
	// return or repair. For example, if a customer is returning an item, the Ship From address is the customer’s
	// address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShipFromState types.NullableString `json:"ShipFromState"`
	// ShipFromStreet ...
	//
	// The street of the return shipping address. This address tracks the location of the items at the start of the
	// return or repair. For example, if a customer is returning an item, the Ship From address is the customer’s
	// address.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ShipFromStreet types.NullableString `json:"ShipFromStreet"`
	// ShipmentType ...
	//
	// The type of shipment associated with the return order. Available values are: Standard (default value)
	// Rush Overnight Next Business Day Pickup
	//
	// Properties:Create, Defaulted on create, Filter, Group,
	// Nillable, Sort, Update
	ShipmentType types.NullableString `json:"ShipmentType"`
	// SourceLocationID ...
	//
	// The items’ location at the start of the return or repair. For example, if the return order tracks the
	// return of products from a technician’s service vehicle to a warehouse, the service vehicle is the source
	// location.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	SourceLocationID types.NullableString `json:"SourceLocationId"`
	// Status ...
	//
	// The status of the return order. Available values are: Draft Submitted Approved Canceled Closed
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Sort, Update
	Status types.NullableString `json:"Status"`
	// StatusCategory ...
	//
	// Status category of the return order. Processing of the return order depends on this value. Each status
	// category corresponds to one or more statuses.
	// Possible values are: Activated Canceled Closed Draft

	// This
	// field is available in API version 50.0 and later.

	//
	// Properties:Defaulted on create, Filter, Group,
	// Nillable, Restricted picklist, Sort
	StatusCategory types.NullableString `json:"StatusCategory"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TaxLocaleType ...
	//
	// The system used to handle tax on the original order associated with the return order. Gross usually applies
	// to taxes like value-added tax (VAT), and Net usually applies to taxes like sales tax.
	// Possible values
	// are: Gross (displays most prices and taxes as combined values) Net (displays most prices and taxes as separate
	// values)

	// This field is available in API version 50.0 and later.

	//
	// Properties:Filter, Group, Nillable,
	// Restricted picklist, Sort
	TaxLocaleType types.NullableString `json:"TaxLocaleType"`
	// TotalAmount ...
	//
	// Adjusted total, not including tax, of the return order line items, including products and delivery
	// charges, on the ReturnOrder.
	// This is a calculated field.

	// This field is available in API version 50.0 and
	// later.

	//
	// Properties:Filter, Nillable, Sort
	TotalAmount types.NullableFloat64 `json:"TotalAmount"`
	// TotalDeliveryAdjustAmount ...
	//
	// Total amount of the price adjustments applied to the delivery charges on the return order. This value only
	// includes adjustments to return order line items of type code Charge.
	// This is a calculated field.

	// This
	// field is available in API version 50.0 and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalDeliveryAdjustAmount types.NullableFloat64 `json:"TotalDeliveryAdjustAmount"`
	// TotalDeliveryAdjustAmtWithTax ...
	//
	// Total amount of the price adjustments applied to the delivery charges on the return order, inclusive of
	// tax. This value only includes adjustments to return order line items of type code Charge. This amount is equal to
	// TotalDeliveryAdjustAmount + TotalDeliveryAdjustTaxAmount.
	// This is a calculated field.

	// This field is available in API
	// version 50.0 and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalDeliveryAdjustAmtWithTax types.NullableFloat64 `json:"TotalDeliveryAdjustAmtWithTax"`
	// TotalDeliveryAdjustTaxAmount ...
	//
	// Tax on the TotalDeliveryAdjustmentAmount.
	// This is a calculated field.

	// This field is available
	// in API version 50.0 and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalDeliveryAdjustTaxAmount types.NullableFloat64 `json:"TotalDeliveryAdjustTaxAmount"`
	// TotalDeliveryAmount ...
	//
	// Total of the delivery charges on the return order. This value only includes return order line items of type
	// code Charge.
	// This is a calculated field.

	// This field is available in API version 50.0 and
	// later.

	//
	// Properties:Filter, Nillable, Sort
	TotalDeliveryAmount types.NullableFloat64 `json:"TotalDeliveryAmount"`
	// TotalDeliveryAmtWithTax ...
	//
	// Total amount of the delivery charges on the return order, inclusive of tax. This value only includes return
	// order line items of type code Charge. This amount is equal to TotalDeliveryAmount +
	// TotalDeliveryTaxAmount.
	// This is a calculated field.

	// This field is available in API version 50.0 and later.

	//
	//
	// Properties:Filter, Nillable, Sort
	TotalDeliveryAmtWithTax types.NullableFloat64 `json:"TotalDeliveryAmtWithTax"`
	// TotalDeliveryTaxAmount ...
	//
	// Tax on the TotalDeliveryAmount.
	// This is a calculated field.

	// This field is available in API
	// version 50.0 and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalDeliveryTaxAmount types.NullableFloat64 `json:"TotalDeliveryTaxAmount"`
	// TotalProductAdjustAmount ...
	//
	// Total amount of the price adjustments applied to the products on the return order. This value only includes
	// adjustments to return order line items of type code Product.
	// This is a calculated field.

	// This field is
	// available in API version 50.0 and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalProductAdjustAmount types.NullableFloat64 `json:"TotalProductAdjustAmount"`
	// TotalProductAdjustAmtWithTax ...
	//
	// Total amount of the price adjustments applied to the products on the return order, inclusive of tax. This
	// value only includes adjustments to return order line items of type code Product. This amount is equal to
	// TotalProductAdjustAmount + TotalProductAdjustTaxAmount.
	// This is a calculated field.

	// This field is available in API
	// version 50.0 and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalProductAdjustAmtWithTax types.NullableFloat64 `json:"TotalProductAdjustAmtWithTax"`
	// TotalProductAdjustTaxAmount ...
	//
	// Tax on the TotalProductAdjustmentAmount.
	// This is a calculated field.

	// This field is available
	// in API version 50.0 and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalProductAdjustTaxAmount types.NullableFloat64 `json:"TotalProductAdjustTaxAmount"`
	// TotalProductAmount ...
	//
	// Total of the product charges on the return order. This value only includes return order line items of type
	// code Product.
	// This is a calculated field.

	// This field is available in API version 50.0 and
	// later.

	//
	// Properties:Filter, Nillable, Sort
	TotalProductAmount types.NullableFloat64 `json:"TotalProductAmount"`
	// TotalProductAmtWithTax ...
	//
	// Total amount of the product charges on the return order, inclusive of tax. This value only includes return
	// order line items of type code Product. This amount is equal to TotalProductAmount +
	// TotalProductTaxAmount.
	// This is a calculated field.

	// This field is available in API version 50.0 and later.

	//
	//
	// Properties:Filter, Nillable, Sort
	TotalProductAmtWithTax types.NullableFloat64 `json:"TotalProductAmtWithTax"`
	// TotalProductTaxAmount ...
	//
	// Tax on the TotalProductAmount.
	// This is a calculated field.

	// This field is available in API
	// version 50.0 and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalProductTaxAmount types.NullableFloat64 `json:"TotalProductTaxAmount"`
	// TotalTaxAmount ...
	//
	// Tax on the TotalAmount.
	// This is a calculated field.

	// This field is available in API version 50.0
	// and later.

	//
	// Properties:Filter, Nillable, Sort
	TotalTaxAmount types.NullableFloat64 `json:"TotalTaxAmount"`
}

// ServiceAppointment ...
//
// Represents an appointment to complete work for a customer in Field Service and Lightning Scheduler. This
// object is available in API version 38.0 and later.
type ServiceAppointment struct {
	// AccountID ...
	//
	// (Read only) The account associated with the appointment. If the parent record is a work order or work order
	// line item, this field’s value is inherited from the parent. Otherwise, it remains blank.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActualDuration ...
	//
	// The number of minutes that it took the resource to complete the appointment after arriving at the address.
	// When values are first added to the Actual Start and Actual End fields, the Actual Duration is automatically
	// populated to list the difference between the Actual Start and Actual End. If the Actual Start and Actual End fields are
	// subsequently updated, the Actual Duration field doesn’t re-update, but you can manually update it.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ActualDuration types.NullableFloat64 `json:"ActualDuration"`
	// ActualEndTime ...
	//
	// The actual date and time the appointment ended.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	ActualEndTime types.Datetime `json:"ActualEndTime"`
	// ActualStartTime ...
	//
	// The actual date and time the appointment started.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	ActualStartTime types.Datetime `json:"ActualStartTime"`
	// AdditionalInformation ...
	AdditionalInformation types.NullableString `json:"AdditionalInformation"`
	// Address ...
	//
	// The address where the appointment is taking place. The address is inherited from the parent record if the
	// parent record is a work order or work order line item.
	//
	// Properties:Filter
	Address types.Address `json:"Address"`
	// AppointmentNumber ...
	//
	// An auto-assigned number that identifies the appointment.
	//
	// Properties:Autonumber, Defaulted
	// on create, Filter, idLookup, Sort
	AppointmentNumber string `json:"AppointmentNumber"`
	// AppointmentType ...
	AppointmentType types.NullableString `json:"AppointmentType"`
	// ArrivalWindowEndTime ...
	//
	// The end of the window of time in which the technician is scheduled to arrive at the site. This window is
	// typically larger than the Scheduled Start and End window to allow time for delays and scheduling changes. You may
	// choose to share the Arrival Window Start and End with the customer, but keep the Scheduled Start and End
	// internal-only.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ArrivalWindowEndTime types.Datetime `json:"ArrivalWindowEndTime"`
	// ArrivalWindowStartTime ...
	//
	// The beginning of the window of time in which the technician is scheduled to arrive at the site. This window is
	// typically larger than the Scheduled Start and End window to allow time for delays and scheduling changes. You may
	// choose to share the Arrival Window Start and End with the customer, but keep the Scheduled Start and End
	// internal-only.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	ArrivalWindowStartTime types.Datetime `json:"ArrivalWindowStartTime"`
	// CancellationReason ...
	CancellationReason types.NullableString `json:"CancellationReason"`
	// City ...
	//
	// The city where the appointment is completed. Maximum length is 40 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	City types.NullableString `json:"City"`
	// Comments ...
	Comments types.NullableString `json:"Comments"`
	// ContactID ...
	//
	// The contact associated with the parent record. If needed, you can manually update the service appointment
	// contact.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ContactID types.NullableString `json:"ContactId"`
	// Country ...
	//
	// The country where the work order is completed. Maximum length is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	Country types.NullableString `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// The description of the appointment.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// DueDate ...
	//
	// The date by which the appointment must be completed. Earliest Start Permitted and Due Date typically
	// reflect terms in the customer’s service-level agreement.
	//
	// Properties:Create, Filter, Sort, Update
	DueDate types.Datetime `json:"DueDate"`
	// Duration ...
	//
	// The estimated length of the appointment. If the parent record is work order or work order line item, the
	// appointment inherits its parent’s duration, but it can be manually updated. The duration is in minutes or hours based
	// on the value selected in the Duration Type field.
	//
	// Properties:Create, Nillable, Filter, Sort,
	// Update
	Duration types.NullableFloat64 `json:"Duration"`
	// DurationInMinutes ...
	DurationInMinutes types.NullableFloat64 `json:"DurationInMinutes"`
	// DurationType ...
	//
	// The unit of the Duration: Minutes or Hours.
	//
	// Properties:Create, Defaulted on create, Filter,
	// Group, Nillable, Restricted picklist, Sort, Update
	DurationType types.NullableString `json:"DurationType"`
	// EarliestStartTime ...
	//
	// The date after which the appointment must be completed. Earliest Start Permitted and Due Date typically
	// reflect terms in the customer’s service-level agreement.
	//
	// Properties:Create, Filter, Sort, Update
	EarliestStartTime types.Datetime `json:"EarliestStartTime"`
	// Email ...
	Email types.NullableString `json:"Email"`
	// GeocodeAccuracy ...
	//
	// The level of accuracy of a location’s geographical coordinates compared with its physical address.
	// Usually provided by a geocoding service based on the address’s latitude and longitude coordinates. Note This
	// field is available in the API only.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted
	// picklist, Sort, Update
	GeocodeAccuracy types.NullableString `json:"GeocodeAccuracy"`
	// ID ...
	ID string `json:"Id"`
	// IsAnonymousBooking ...
	//
	// Indicates whether a service resource was automatically assigned to the appointment. The default value is
	// false.
	// This field is available in API version 49.0 and later.

	//
	// Properties:Create, Defaulted on create,
	// Filter, Group, Sort, Update
	IsAnonymousBooking bool `json:"IsAnonymousBooking"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastReferencedDate ...
	//
	// The date when the service appointment was last modified. Its label in the user interface is Last Modified
	// Date.
	//
	// Properties:Filter, Nillable, Sort
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	//
	// The date when the service appointment was last viewed.
	//
	// Properties:Filter, Nillable, Sort
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Latitude ...
	//
	// Used with Longitude to specify the precise geolocation of the address where the service appointments is
	// completed. Acceptable values are numbers between –90 and 90 with up to 15 decimal places. Note This field is
	// available in the API only.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Latitude types.NullableFloat64 `json:"Latitude"`
	// Longitude ...
	//
	// Used with Latitude to specify the precise geolocation of the address where the service appointment is
	// completed. Acceptable values are numbers between –180 and 180 with up to 15 decimal places. Note This field is
	// available in the API only.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Longitude types.NullableFloat64 `json:"Longitude"`
	// OwnerID ...
	//
	// The owner of the service appointment.
	//
	// Properties:Create, Defaulted on create, Filter, Group,
	// Sort, Update
	OwnerID string `json:"OwnerId"`
	// ParentRecordID ...
	//
	// The parent record associated with the appointment. The parent record can’t be updated after the service
	// appointment is created.
	//
	// Properties:Create, Filter, Group, Nillable, Sort
	ParentRecordID types.NullableString `json:"ParentRecordId"`
	// ParentRecordStatusCategory ...
	//
	// (Read only) The Status Category of the parent record. If the parent record is a work order or work order line
	// item, this field is populated; otherwise, it remains blank.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Nillable, Restricted picklist, Sort
	ParentRecordStatusCategory types.NullableString `json:"ParentRecordStatusCategory"`
	// ParentRecordType ...
	//
	// (Read only) The type of parent record: Account, Asset, Lead, Opportunity, Work Order, or Work Order Line
	// Item.
	//
	// Properties:Filter, Group, Nillable, Sort
	ParentRecordType types.NullableString `json:"ParentRecordType"`
	// Phone ...
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	//
	// The postal code where the work order is completed. Maximum length is 20 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	PostalCode types.NullableString `json:"PostalCode"`
	// SchedEndTime ...
	//
	// The time at which the appointment is scheduled to end. If you are using the Field Service managed package
	// with the scheduling optimizer, this field is populated once the appointment is assigned to a resource.
	// Scheduled End – Scheduled Start = Estimated Duration.
	//
	// Properties:Create, Filter, Nillable, Sort,
	// Update
	SchedEndTime types.Datetime `json:"SchedEndTime"`
	// SchedStartTime ...
	//
	// The time at which the appointment is scheduled to start. If you are using the Field Service managed package
	// with the scheduling optimizer, this field is populated once the appointment is assigned to a
	// resource.
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	SchedStartTime types.Datetime `json:"SchedStartTime"`
	// ServiceNote ...
	ServiceNote types.NullableString `json:"ServiceNote"`
	// ServiceTerritoryID ...
	//
	// The service territory associated with the appointment. If the parent record is a work order or work order
	// line item, the appointment inherits its parent’s service territory.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Sort, Update
	ServiceTerritoryID types.NullableString `json:"ServiceTerritoryId"`
	// State ...
	//
	// The state where the service appointment is completed. Maximum length is 80 characters.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	State types.NullableString `json:"State"`
	// Status ...
	//
	// The status of the appointment. The picklist includes the following values, which can be customized:
	// NoneDefault value. ScheduledAppointment has been assigned to a service resource. DispatchedAssigned service
	// resource has been notified about their assignment. In ProgressWork has begun. CompletedWork is complete. Cannot
	// CompleteWork could not be completed. CanceledWork is canceled, typically before any work began
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Nillable, Sort, Update
	Status types.NullableString `json:"Status"`
	// StatusCategory ...
	//
	// The category that each Status value falls into. The Status Category field’s values are identical to the
	// default Status values.If you create custom Status values, you must indicate which category it belongs to. For
	// example, if you create a Customer Absent value, you may decide that it belongs in the Cannot Complete category. To
	// learn which processes reference StatusCategory, see How are Status Categories Used?
	//
	//
	// Properties:Defaulted on create, Filter, Group, Nillable, Restricted picklist, Sort
	StatusCategory types.NullableString `json:"StatusCategory"`
	// Street ...
	//
	// The street number and name where the service appointment is completed.
	//
	// Properties:Create,
	// Filter, Group, Nillable, Sort, Update
	Street types.NullableString `json:"Street"`
	// Subject ...
	//
	// A short phrase describing the appointment.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// WorkTypeID ...
	//
	// The work type associated with the service appointment. The work type is inherited from the
	// appointment’s parent record if the parent is a work order or work order line item. Note If Lightning Scheduler is also in
	// use, this field is editable. However, users see an error if they update it to list a different work type than the
	// parent record’s work type.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WorkTypeID types.NullableString `json:"WorkTypeId"`
}

// Task ...
//
// Represents a business activity such as making a phone call or other to-do items. In the user interface, Task
// and Event records are collectively referred to as activities.
type Task struct {
	// AccountID ...
	//
	// Represents the ID of the related Account. The AccountId is determined as follows.If the value of WhatId is
	// any of the following objects, then Salesforce uses that object’s AccountId. Account Opportunity Contract
	// Custom object that is a child of Account If the value of the WhatIdfield is any other object, and the value of the
	// WhoId field is a Contact object, then Salesforce uses that contact’s AccountId. (If your organization uses
	// Shared Activities, then Salesforce uses the AccountId of the primary contact.) Otherwise, Salesforce sets the
	// value of the AccountId field to null. For information on IDs, see ID Field Type.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	AccountID types.NullableString `json:"AccountId"`
	// ActivityDate ...
	//
	// Represents the due date of the task. This field has a timestamp that is always set to midnight in the
	// Coordinated Universal Time (UTC) time zone. The timestamp is not relevant; do not attempt to alter it to accommodate
	// time zone differences. Label is Due Date. Note This field can’t be set or updated for a recurring task
	// (IsRecurrence is true).
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	ActivityDate types.Date `json:"ActivityDate"`
	// CallDisposition ...
	//
	// Represents the result of a given call, for example, “we'll call back,” or “call unsuccessful.”
	// Limit is 255 characters. Not subject to field-level security, available for any user in an organization with
	// Salesforce CRM Call Center.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	CallDisposition types.NullableString `json:"CallDisposition"`
	// CallDurationInSeconds ...
	//
	// Duration of the call in seconds. Not subject to field-level security, available for any user in an
	// organization with Salesforce CRM Call Center.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	CallDurationInSeconds types.NullableInt `json:"CallDurationInSeconds"`
	// CallObject ...
	//
	// Name of a call center. Limit is 255 characters. Not subject to field-level security, available for any user
	// in an organization with Salesforce CRM Call Center.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	CallObject types.NullableString `json:"CallObject"`
	// CallType ...
	//
	// The type of call being answered: Inbound, Internal, or Outbound.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Restricted picklist, Sort, Update
	CallType types.NullableString `json:"CallType"`
	// CompletedDateTime ...
	//
	// The date and time the task was saved with a Closed status. For insert, if the task is saved with a Closed status
	// the field is set. If the task is saved with an Open status the field is set to NULL. For update, if the task is saved
	// with a new Closed status, the field is reset. If the task is saved with a new non-closed status, the field is reset
	// to NULL. If the task is saved with the same closed status (that is, unchanged) there is no change to the field.
	// Note The status is a dynamic enum. If the Closed mapping is changed it won’t cause an update of existing tasks.
	// Only new insert/update operations are affected.
	//
	// Properties:Filter, Nillable, Sort
	CompletedDateTime types.Datetime `json:"CompletedDateTime"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Description ...
	//
	// Contains a text description of the task.
	//
	// Properties:Create, Nillable, Update
	Description types.NullableString `json:"Description"`
	// ID ...
	ID string `json:"Id"`
	// IsArchived ...
	//
	// Indicates whether the event has been archived.
	//
	// Properties:Defaulted on create, Filter, Group,
	// Sort
	IsArchived bool `json:"IsArchived"`
	// IsClosed ...
	//
	// Indicates whether the task has been completed (true) or not (false). Is only set indirectly via the Status
	// picklist. Label is Closed.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsClosed bool `json:"IsClosed"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// IsHighPriority ...
	//
	// Indicates a high-priority task. This field is derived from the Priority field.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsHighPriority bool `json:"IsHighPriority"`
	// IsRecurrence ...
	//
	// Indicates whether the task is scheduled to repeat itself (true) or only occurs once (false). This field is
	// read-only on update, but not on create. If this field value is true, then RecurrenceStartDateOnly,
	// RecurrenceEndDateOnly, RecurrenceType, and any recurrence fields associated with the given recurrence type must be populated.
	// See Recurring Tasks.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort
	IsRecurrence bool `json:"IsRecurrence"`
	// IsReminderSet ...
	//
	// Indicates whether a popup reminder has been set for the task (true) or not (false).
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	IsReminderSet bool `json:"IsReminderSet"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// OwnerID ...
	//
	// ID of the User or Group who owns the record. Label is Assigned To ID. This field accepts Groups of type Queue
	// only. In the user interface, Group IDs correspond with the queue’s list view names. To create or update tasks
	// assigned to Group, use v48.0 or later.
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort,
	// Update
	OwnerID string `json:"OwnerId"`
	// Priority ...
	//
	// Required. Indicates the importance or urgency of a task, such as high or low.
	//
	// Properties:Create,
	// Defaulted on create, Filter, Group, Sort, Update
	Priority string `json:"Priority"`
	// RecurrenceActivityID ...
	//
	// Read-only. Not required on create. ID of the main record of the recurring task. Subsequent occurrences
	// have the same value in this field.
	//
	// Properties:Filter, Group, Nillable, Sort
	RecurrenceActivityID types.NullableString `json:"RecurrenceActivityId"`
	// RecurrenceDayOfMonth ...
	//
	// The day of the month in which the task repeats.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Sort, Update
	RecurrenceDayOfMonth types.NullableInt `json:"RecurrenceDayOfMonth"`
	// RecurrenceDayOfWeekMask ...
	//
	// The day or days of the week on which the task repeats. This field contains a bitmask. The values are as
	// follows: Sunday = 1 Monday = 2 Tuesday = 4 Wednesday = 8 Thursday = 16 Friday = 32 Saturday = 64 Multiple days are
	// represented as the sum of their numerical values. For example, Tuesday and Thursday = 4 + 16 = 20.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	RecurrenceDayOfWeekMask types.NullableInt `json:"RecurrenceDayOfWeekMask"`
	// RecurrenceEndDateOnly ...
	//
	// The last date on which the task repeats. This field has a timestamp that is always set to midnight in the
	// Coordinated Universal Time (UTC) time zone. The timestamp is not relevant; do not attempt to alter it to accommodate
	// time zone differences.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	RecurrenceEndDateOnly types.Date `json:"RecurrenceEndDateOnly"`
	// RecurrenceInstance ...
	//
	// The frequency of the recurring task.
	// Possible values are: First1st Fourth4th Lastlast Second2nd
	// Third3rd

	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	RecurrenceInstance types.NullableString `json:"RecurrenceInstance"`
	// RecurrenceInterval ...
	//
	// The interval between recurring tasks.
	//
	// Properties:Create, Filter, Group, Nillable, Sort,
	// Update
	RecurrenceInterval types.NullableInt `json:"RecurrenceInterval"`
	// RecurrenceMonthOfYear ...
	//
	// The month of the year in which the task repeats.
	//
	// Properties:Create, Filter, Group, Nillable,
	// Restricted picklist, Sort, Update
	RecurrenceMonthOfYear types.NullableString `json:"RecurrenceMonthOfYear"`
	// RecurrenceRegeneratedType ...
	//
	// Represents what triggers a repeating task to repeat. Add this field to a page layout together with the
	// RecurrenceInterval field, which determines the number of days between the triggering date (due date or close date) and the due
	// date of the next repeating task in the series.Label is Repeat This Task. This field has the following picklist
	// values: None: The task doesn’t repeat. After due date: The next repeating task will be due the specified number of
	// days after the current task’s due date. After the task is closed: The next repeating task will be due the
	// specified number of days after the current task is closed. (Task closed): This task, now closed, was opened as part of a
	// repeating series. Note When tasks in a series are set to repeat after their due date, Salesforce doesn’t create
	// recurrences that would have been due in the past. Instead, Salesforce keeps adding the interval until a repeated task
	// has a due date in the future. For example, suppose that someone sets a task to repeat three days after it’s due.
	// But, that person doesn’t complete the task (mark it Closed) until five days after it’s due. Instead of
	// creating a task that’s already overdue, Salesforce gives the new task a due date of tomorrow. This due date is
	// equivalent to 6 days after the due date; two intervals of three days each. If that person completes the repeating task
	// (marks it Closed) before the due date, the next task is still due three days after the due date.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	RecurrenceRegeneratedType types.NullableString `json:"RecurrenceRegeneratedType"`
	// RecurrenceStartDateOnly ...
	//
	// The date when the recurring task begins. Must be a date and time before RecurrenceEndDateOnly.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	RecurrenceStartDateOnly types.Date `json:"RecurrenceStartDateOnly"`
	// RecurrenceTimeZoneSidKey ...
	//
	// The time zone associated with the recurring task. For example, “UTC-8:00” for Pacific Standard
	// Time.
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist, Sort, Update
	RecurrenceTimeZoneSidKey types.NullableString `json:"RecurrenceTimeZoneSidKey"`
	// RecurrenceType ...
	//
	// Indicates how often the task repeats. For example, daily, weekly, or every nth month (where “nth” is
	// defined in RecurrenceInstance).
	//
	// Properties:Create, Filter, Group, Nillable, Restricted picklist,
	// Sort, Update
	RecurrenceType types.NullableString `json:"RecurrenceType"`
	// ReminderDateTime ...
	//
	// Represents the time when the reminder is scheduled to fire, if IsReminderSet is set to true. If
	// IsReminderSet is set to false, then the user may have deselected the reminder checkbox in the Salesforce user interface,
	// or the reminder has already fired at the time indicated by the value.
	//
	// Properties:Create, Filter,
	// Nillable, Sort, Update
	ReminderDateTime types.Datetime `json:"ReminderDateTime"`
	// Status ...
	//
	// Required. The status of the task, such as In Progress or Completed. Each predefined Status field implies a
	// value for the IsClosed flag. To obtain picklist values, query the TaskStatus object. Note This field can’t be
	// updated for recurring tasks (IsRecurrence is true).
	//
	// Properties:Create, Defaulted on create, Filter,
	// Group, Sort, Update
	Status string `json:"Status"`
	// Subject ...
	//
	// The subject line of the task, such as “Call” or “Send Quote.” Limit: 255 characters.
	//
	//
	// Properties:Create, Filter, Nillable, Sort, Update
	Subject types.NullableString `json:"Subject"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TaskSubtype ...
	//
	// Provides standard subtypes to facilitate creating and searching for specific task subtypes. This field
	// isn’t updateable. TaskSubtype values: Task Email List Email Cadence Call Note The Cadence subtype is an
	// internal value used by High Velocity Sales, and can’t be set manually.
	//
	// Properties:Create, Filter,
	// Group, Nillable, Restricted picklist, Sort
	TaskSubtype types.NullableString `json:"TaskSubtype"`
	// WhatID ...
	//
	// The WhatId represents nonhuman objects such as accounts, opportunities, campaigns, cases, or custom
	// objects. WhatIds are polymorphic. Polymorphic means a WhatId is equivalent to the ID of a related object. The label
	// is Related To ID.
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WhatID types.NullableString `json:"WhatId"`
	// WhoID ...
	//
	// The WhoId represents a human such as a lead or a contact. WhoIds are polymorphic. Polymorphic means a WhoId
	// is equivalent to a contact’s ID or a lead’s ID. The label is Name ID. If Shared Activities is enabled, the
	// value of this field is the ID of the related lead or primary contact. If you add, update, or remove the WhoId field,
	// you might encounter problems with triggers, workflows, and data validation rules that are associated with
	// the record. The label is Name ID. Beginning in API version 37.0, if the contact or lead ID in the WhoId field is not
	// in the TaskWhoIds list, no error occurs and the ID is added to the TaskWhoIds as the primary WhoId. If WhoId is
	// set to null, an arbitrary ID from the existing TaskWhoIds list is promoted to the primary position.
	//
	//
	// Properties:Create, Filter, Group, Nillable, Sort, Update
	WhoID types.NullableString `json:"WhoId"`
}

// TopicAssignment ...
//
// Represents the assignment of a topic to a specific feed item, record, or file. This object is available in
// API version 28.0 and later.
type TopicAssignment struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EntityID ...
	//
	// Identifier of the feed item, record, or file.
	//
	// Properties:Create, Filter, Group, Sort
	EntityID string `json:"EntityId"`
	// EntityKeyPrefix ...
	//
	// The first three digits of the EntityID field, which identify the object type (account, opportunity, etc).
	// This read-only field is available in API version 32.0 and later. Interface label is “Record Key Prefix,”
	// which appears only in reports.
	//
	// Properties:Filter, Group, idLookup, Sort
	EntityKeyPrefix string `json:"EntityKeyPrefix"`
	// EntityType ...
	//
	// The standard name for the object type (account, opportunity, etc). This read-only field is available in
	// API version 33.0 and later. Note Querying topic assignments for the ManagedContentVersion entity type
	// isn’t supported. Interface label is “Object Type,” which appears only in reports. Tip In most cases, you
	// should use this field rather than EntityKeyPrefix, which exists primarily to support older reports.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	EntityType types.NullableString `json:"EntityType"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TopicID ...
	//
	// Identifier of the topic.
	//
	// Properties:Create, Filter, Group, Sort
	TopicID string `json:"TopicId"`
}

// UndecidedEventRelation ...
//
// Represents event participants (invitees or attendees) with the status Not Responded for a given event.
// This object is available in API versions 29.0 and later.
type UndecidedEventRelation struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// EventID ...
	//
	// Indicates the ID of the event.
	//
	// Properties:Filter, Group, Nillable, Sort
	EventID types.NullableString `json:"EventId"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// RelationID ...
	//
	// Indicates the ID of the invitee.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationID types.NullableString `json:"RelationId"`
	// RespondedDate ...
	//
	// This field is always null.
	//
	// Properties:Filter, Nillable, Sort
	RespondedDate types.Datetime `json:"RespondedDate"`
	// Response ...
	//
	// Indicates the content of the response field. Label is Comment.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Response types.NullableString `json:"Response"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// Type ...
	//
	// Indicates whether the invitee is a user, lead or contact, or resource.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	Type types.NullableString `json:"Type"`
}

// User ...
type User struct {
	// AboutMe ...
	AboutMe types.NullableString `json:"AboutMe"`
	// AccountID ...
	AccountID types.NullableString `json:"AccountId"`
	// Address ...
	Address types.Address `json:"Address"`
	// Alias ...
	Alias string `json:"Alias"`
	// BadgeText ...
	BadgeText types.NullableString `json:"BadgeText"`
	// BannerPhotoURL ...
	BannerPhotoURL types.NullableString `json:"BannerPhotoUrl"`
	// CallCenterID ...
	CallCenterID types.NullableString `json:"CallCenterId"`
	// City ...
	City types.NullableString `json:"City"`
	// CommunityNickname ...
	CommunityNickname string `json:"CommunityNickname"`
	// CompanyName ...
	CompanyName types.NullableString `json:"CompanyName"`
	// ContactID ...
	ContactID types.NullableString `json:"ContactId"`
	// Country ...
	Country types.NullableString `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DefaultGroupNotificationFrequency ...
	DefaultGroupNotificationFrequency string `json:"DefaultGroupNotificationFrequency"`
	// DelegatedApproverID ...
	DelegatedApproverID types.NullableString `json:"DelegatedApproverId"`
	// Department ...
	Department types.NullableString `json:"Department"`
	// DigestFrequency ...
	DigestFrequency string `json:"DigestFrequency"`
	// Division ...
	Division types.NullableString `json:"Division"`
	// Email ...
	Email string `json:"Email"`
	// EmailEncodingKey ...
	EmailEncodingKey string `json:"EmailEncodingKey"`
	// EmailPreferencesAutoBcc ...
	EmailPreferencesAutoBcc bool `json:"EmailPreferencesAutoBcc"`
	// EmailPreferencesAutoBccStayInTouch ...
	EmailPreferencesAutoBccStayInTouch bool `json:"EmailPreferencesAutoBccStayInTouch"`
	// EmailPreferencesStayInTouchReminder ...
	EmailPreferencesStayInTouchReminder bool `json:"EmailPreferencesStayInTouchReminder"`
	// EmployeeNumber ...
	EmployeeNumber types.NullableString `json:"EmployeeNumber"`
	// Extension ...
	Extension types.NullableString `json:"Extension"`
	// Fax ...
	Fax types.NullableString `json:"Fax"`
	// FederationIDentifier ...
	FederationIDentifier types.NullableString `json:"FederationIdentifier"`
	// FirstName ...
	FirstName types.NullableString `json:"FirstName"`
	// ForecastEnabled ...
	ForecastEnabled bool `json:"ForecastEnabled"`
	// FullPhotoURL ...
	FullPhotoURL types.NullableString `json:"FullPhotoUrl"`
	// GeocodeAccuracy ...
	GeocodeAccuracy types.NullableString `json:"GeocodeAccuracy"`
	// ID ...
	ID string `json:"Id"`
	// IndividualID ...
	IndividualID types.NullableString `json:"IndividualId"`
	// IsActive ...
	IsActive bool `json:"IsActive"`
	// IsExtIndicatorVisible ...
	IsExtIndicatorVisible bool `json:"IsExtIndicatorVisible"`
	// IsProfilePhotoActive ...
	IsProfilePhotoActive bool `json:"IsProfilePhotoActive"`
	// JigsawImportLimitOverride ...
	JigsawImportLimitOverride types.NullableInt `json:"JigsawImportLimitOverride"`
	// LanguageLocaleKey ...
	LanguageLocaleKey string `json:"LanguageLocaleKey"`
	// LastLoginDate ...
	LastLoginDate types.Datetime `json:"LastLoginDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	LastName string `json:"LastName"`
	// LastPasswordChangeDate ...
	LastPasswordChangeDate types.Datetime `json:"LastPasswordChangeDate"`
	// LastReferencedDate ...
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Latitude ...
	Latitude types.NullableFloat64 `json:"Latitude"`
	// LocaleSidKey ...
	LocaleSidKey string `json:"LocaleSidKey"`
	// Longitude ...
	Longitude types.NullableFloat64 `json:"Longitude"`
	// ManagerID ...
	ManagerID types.NullableString `json:"ManagerId"`
	// MediumBannerPhotoURL ...
	MediumBannerPhotoURL types.NullableString `json:"MediumBannerPhotoUrl"`
	// MediumPhotoURL ...
	MediumPhotoURL types.NullableString `json:"MediumPhotoUrl"`
	// MobilePhone ...
	MobilePhone types.NullableString `json:"MobilePhone"`
	// Name ...
	Name string `json:"Name"`
	// NumberOfFailedLogins ...
	NumberOfFailedLogins types.NullableInt `json:"NumberOfFailedLogins"`
	// OfflinePdaTrialExpirationDate ...
	OfflinePdaTrialExpirationDate types.Datetime `json:"OfflinePdaTrialExpirationDate"`
	// OfflineTrialExpirationDate ...
	OfflineTrialExpirationDate types.Datetime `json:"OfflineTrialExpirationDate"`
	// OutOfOfficeMessage ...
	OutOfOfficeMessage types.NullableString `json:"OutOfOfficeMessage"`
	// Phone ...
	Phone types.NullableString `json:"Phone"`
	// PostalCode ...
	PostalCode types.NullableString `json:"PostalCode"`
	// ProfileID ...
	ProfileID string `json:"ProfileId"`
	// ReceivesAdminInfoEmails ...
	ReceivesAdminInfoEmails bool `json:"ReceivesAdminInfoEmails"`
	// ReceivesInfoEmails ...
	ReceivesInfoEmails bool `json:"ReceivesInfoEmails"`
	// SenderEmail ...
	SenderEmail types.NullableString `json:"SenderEmail"`
	// SenderName ...
	SenderName types.NullableString `json:"SenderName"`
	// Signature ...
	Signature types.NullableString `json:"Signature"`
	// SmallBannerPhotoURL ...
	SmallBannerPhotoURL types.NullableString `json:"SmallBannerPhotoUrl"`
	// SmallPhotoURL ...
	SmallPhotoURL types.NullableString `json:"SmallPhotoUrl"`
	// State ...
	State types.NullableString `json:"State"`
	// StayInTouchNote ...
	StayInTouchNote types.NullableString `json:"StayInTouchNote"`
	// StayInTouchSignature ...
	StayInTouchSignature types.NullableString `json:"StayInTouchSignature"`
	// StayInTouchSubject ...
	StayInTouchSubject types.NullableString `json:"StayInTouchSubject"`
	// Street ...
	Street types.NullableString `json:"Street"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TimeZoneSidKey ...
	TimeZoneSidKey string `json:"TimeZoneSidKey"`
	// Title ...
	Title types.NullableString `json:"Title"`
	// UserPermissionsCallCenterAutoLogin ...
	UserPermissionsCallCenterAutoLogin bool `json:"UserPermissionsCallCenterAutoLogin"`
	// UserPermissionsInteractionUser ...
	UserPermissionsInteractionUser bool `json:"UserPermissionsInteractionUser"`
	// UserPermissionsJigsawProspectingUser ...
	UserPermissionsJigsawProspectingUser bool `json:"UserPermissionsJigsawProspectingUser"`
	// UserPermissionsKnowledgeUser ...
	UserPermissionsKnowledgeUser bool `json:"UserPermissionsKnowledgeUser"`
	// UserPermissionsMarketingUser ...
	UserPermissionsMarketingUser bool `json:"UserPermissionsMarketingUser"`
	// UserPermissionsOfflineUser ...
	UserPermissionsOfflineUser bool `json:"UserPermissionsOfflineUser"`
	// UserPermissionsSFContentUser ...
	UserPermissionsSFContentUser bool `json:"UserPermissionsSFContentUser"`
	// UserPermissionsSiteforceContributorUser ...
	UserPermissionsSiteforceContributorUser bool `json:"UserPermissionsSiteforceContributorUser"`
	// UserPermissionsSiteforcePublisherUser ...
	UserPermissionsSiteforcePublisherUser bool `json:"UserPermissionsSiteforcePublisherUser"`
	// UserPermissionsSupportUser ...
	UserPermissionsSupportUser bool `json:"UserPermissionsSupportUser"`
	// UserPermissionsWorkDotComUserFeature ...
	UserPermissionsWorkDotComUserFeature bool `json:"UserPermissionsWorkDotComUserFeature"`
	// UserPreferencesActivityRemindersPopup ...
	UserPreferencesActivityRemindersPopup bool `json:"UserPreferencesActivityRemindersPopup"`
	// UserPreferencesApexPagesDeveloperMode ...
	UserPreferencesApexPagesDeveloperMode bool `json:"UserPreferencesApexPagesDeveloperMode"`
	// UserPreferencesCacheDiagnostics ...
	UserPreferencesCacheDiagnostics bool `json:"UserPreferencesCacheDiagnostics"`
	// UserPreferencesContentEmailAsAndWhen ...
	UserPreferencesContentEmailAsAndWhen bool `json:"UserPreferencesContentEmailAsAndWhen"`
	// UserPreferencesContentNoEmail ...
	UserPreferencesContentNoEmail bool `json:"UserPreferencesContentNoEmail"`
	// UserPreferencesCreateLEXAppsWTShown ...
	UserPreferencesCreateLEXAppsWTShown bool `json:"UserPreferencesCreateLEXAppsWTShown"`
	// UserPreferencesDisCommentAfterLikeEmail ...
	UserPreferencesDisCommentAfterLikeEmail bool `json:"UserPreferencesDisCommentAfterLikeEmail"`
	// UserPreferencesDisMentionsCommentEmail ...
	UserPreferencesDisMentionsCommentEmail bool `json:"UserPreferencesDisMentionsCommentEmail"`
	// UserPreferencesDisProfPostCommentEmail ...
	UserPreferencesDisProfPostCommentEmail bool `json:"UserPreferencesDisProfPostCommentEmail"`
	// UserPreferencesDisableAllFeedsEmail ...
	UserPreferencesDisableAllFeedsEmail bool `json:"UserPreferencesDisableAllFeedsEmail"`
	// UserPreferencesDisableBookmarkEmail ...
	UserPreferencesDisableBookmarkEmail bool `json:"UserPreferencesDisableBookmarkEmail"`
	// UserPreferencesDisableChangeCommentEmail ...
	UserPreferencesDisableChangeCommentEmail bool `json:"UserPreferencesDisableChangeCommentEmail"`
	// UserPreferencesDisableEndorsementEmail ...
	UserPreferencesDisableEndorsementEmail bool `json:"UserPreferencesDisableEndorsementEmail"`
	// UserPreferencesDisableFeedbackEmail ...
	UserPreferencesDisableFeedbackEmail bool `json:"UserPreferencesDisableFeedbackEmail"`
	// UserPreferencesDisableFileShareNotificationsForAPI ...
	UserPreferencesDisableFileShareNotificationsForAPI bool `json:"UserPreferencesDisableFileShareNotificationsForApi"`
	// UserPreferencesDisableFollowersEmail ...
	UserPreferencesDisableFollowersEmail bool `json:"UserPreferencesDisableFollowersEmail"`
	// UserPreferencesDisableLaterCommentEmail ...
	UserPreferencesDisableLaterCommentEmail bool `json:"UserPreferencesDisableLaterCommentEmail"`
	// UserPreferencesDisableLikeEmail ...
	UserPreferencesDisableLikeEmail bool `json:"UserPreferencesDisableLikeEmail"`
	// UserPreferencesDisableMentionsPostEmail ...
	UserPreferencesDisableMentionsPostEmail bool `json:"UserPreferencesDisableMentionsPostEmail"`
	// UserPreferencesDisableMessageEmail ...
	UserPreferencesDisableMessageEmail bool `json:"UserPreferencesDisableMessageEmail"`
	// UserPreferencesDisableProfilePostEmail ...
	UserPreferencesDisableProfilePostEmail bool `json:"UserPreferencesDisableProfilePostEmail"`
	// UserPreferencesDisableSharePostEmail ...
	UserPreferencesDisableSharePostEmail bool `json:"UserPreferencesDisableSharePostEmail"`
	// UserPreferencesDisableWorkEmail ...
	UserPreferencesDisableWorkEmail bool `json:"UserPreferencesDisableWorkEmail"`
	// UserPreferencesEnableAutoSubForFeeds ...
	UserPreferencesEnableAutoSubForFeeds bool `json:"UserPreferencesEnableAutoSubForFeeds"`
	// UserPreferencesEventRemindersCheckboxDefault ...
	UserPreferencesEventRemindersCheckboxDefault bool `json:"UserPreferencesEventRemindersCheckboxDefault"`
	// UserPreferencesExcludeMailAppAttachments ...
	UserPreferencesExcludeMailAppAttachments bool `json:"UserPreferencesExcludeMailAppAttachments"`
	// UserPreferencesFavoritesShowTopFavorites ...
	UserPreferencesFavoritesShowTopFavorites bool `json:"UserPreferencesFavoritesShowTopFavorites"`
	// UserPreferencesFavoritesWTShown ...
	UserPreferencesFavoritesWTShown bool `json:"UserPreferencesFavoritesWTShown"`
	// UserPreferencesGlobalNavBarWTShown ...
	UserPreferencesGlobalNavBarWTShown bool `json:"UserPreferencesGlobalNavBarWTShown"`
	// UserPreferencesGlobalNavGridMenuWTShown ...
	UserPreferencesGlobalNavGridMenuWTShown bool `json:"UserPreferencesGlobalNavGridMenuWTShown"`
	// UserPreferencesHasCelebrationBadge ...
	UserPreferencesHasCelebrationBadge bool `json:"UserPreferencesHasCelebrationBadge"`
	// UserPreferencesHideBiggerPhotoCallout ...
	UserPreferencesHideBiggerPhotoCallout bool `json:"UserPreferencesHideBiggerPhotoCallout"`
	// UserPreferencesHideCSNDesktopTask ...
	UserPreferencesHideCSNDesktopTask bool `json:"UserPreferencesHideCSNDesktopTask"`
	// UserPreferencesHideCSNGetChatterMobileTask ...
	UserPreferencesHideCSNGetChatterMobileTask bool `json:"UserPreferencesHideCSNGetChatterMobileTask"`
	// UserPreferencesHideChatterOnboardingSplash ...
	UserPreferencesHideChatterOnboardingSplash bool `json:"UserPreferencesHideChatterOnboardingSplash"`
	// UserPreferencesHideEndUserOnboardingAssistantModal ...
	UserPreferencesHideEndUserOnboardingAssistantModal bool `json:"UserPreferencesHideEndUserOnboardingAssistantModal"`
	// UserPreferencesHideLegacyRetirementModal ...
	UserPreferencesHideLegacyRetirementModal bool `json:"UserPreferencesHideLegacyRetirementModal"`
	// UserPreferencesHideLightningMigrationModal ...
	UserPreferencesHideLightningMigrationModal bool `json:"UserPreferencesHideLightningMigrationModal"`
	// UserPreferencesHideS1BrowserUI ...
	UserPreferencesHideS1BrowserUI bool `json:"UserPreferencesHideS1BrowserUI"`
	// UserPreferencesHideSecondChatterOnboardingSplash ...
	UserPreferencesHideSecondChatterOnboardingSplash bool `json:"UserPreferencesHideSecondChatterOnboardingSplash"`
	// UserPreferencesHideSfxWelcomeMat ...
	UserPreferencesHideSfxWelcomeMat bool `json:"UserPreferencesHideSfxWelcomeMat"`
	// UserPreferencesJigsawListUser ...
	UserPreferencesJigsawListUser bool `json:"UserPreferencesJigsawListUser"`
	// UserPreferencesLightningExperiencePreferred ...
	UserPreferencesLightningExperiencePreferred bool `json:"UserPreferencesLightningExperiencePreferred"`
	// UserPreferencesNativeEmailClient ...
	UserPreferencesNativeEmailClient bool `json:"UserPreferencesNativeEmailClient"`
	// UserPreferencesNewLightningReportRunPageEnabled ...
	UserPreferencesNewLightningReportRunPageEnabled bool `json:"UserPreferencesNewLightningReportRunPageEnabled"`
	// UserPreferencesPathAssistantCollapsed ...
	UserPreferencesPathAssistantCollapsed bool `json:"UserPreferencesPathAssistantCollapsed"`
	// UserPreferencesPreviewCustomTheme ...
	UserPreferencesPreviewCustomTheme bool `json:"UserPreferencesPreviewCustomTheme"`
	// UserPreferencesPreviewLightning ...
	UserPreferencesPreviewLightning bool `json:"UserPreferencesPreviewLightning"`
	// UserPreferencesReceiveNoNotificationsAsApprover ...
	UserPreferencesReceiveNoNotificationsAsApprover bool `json:"UserPreferencesReceiveNoNotificationsAsApprover"`
	// UserPreferencesReceiveNotificationsAsDelegatedApprover ...
	UserPreferencesReceiveNotificationsAsDelegatedApprover bool `json:"UserPreferencesReceiveNotificationsAsDelegatedApprover"`
	// UserPreferencesRecordHomeReservedWTShown ...
	UserPreferencesRecordHomeReservedWTShown bool `json:"UserPreferencesRecordHomeReservedWTShown"`
	// UserPreferencesRecordHomeSectionCollapseWTShown ...
	UserPreferencesRecordHomeSectionCollapseWTShown bool `json:"UserPreferencesRecordHomeSectionCollapseWTShown"`
	// UserPreferencesReminderSoundOff ...
	UserPreferencesReminderSoundOff bool `json:"UserPreferencesReminderSoundOff"`
	// UserPreferencesSRHOverrideActivities ...
	UserPreferencesSRHOverrideActivities bool `json:"UserPreferencesSRHOverrideActivities"`
	// UserPreferencesShowCityToExternalUsers ...
	UserPreferencesShowCityToExternalUsers bool `json:"UserPreferencesShowCityToExternalUsers"`
	// UserPreferencesShowCityToGuestUsers ...
	UserPreferencesShowCityToGuestUsers bool `json:"UserPreferencesShowCityToGuestUsers"`
	// UserPreferencesShowCountryToExternalUsers ...
	UserPreferencesShowCountryToExternalUsers bool `json:"UserPreferencesShowCountryToExternalUsers"`
	// UserPreferencesShowCountryToGuestUsers ...
	UserPreferencesShowCountryToGuestUsers bool `json:"UserPreferencesShowCountryToGuestUsers"`
	// UserPreferencesShowEmailToExternalUsers ...
	UserPreferencesShowEmailToExternalUsers bool `json:"UserPreferencesShowEmailToExternalUsers"`
	// UserPreferencesShowEmailToGuestUsers ...
	UserPreferencesShowEmailToGuestUsers bool `json:"UserPreferencesShowEmailToGuestUsers"`
	// UserPreferencesShowFaxToExternalUsers ...
	UserPreferencesShowFaxToExternalUsers bool `json:"UserPreferencesShowFaxToExternalUsers"`
	// UserPreferencesShowFaxToGuestUsers ...
	UserPreferencesShowFaxToGuestUsers bool `json:"UserPreferencesShowFaxToGuestUsers"`
	// UserPreferencesShowManagerToExternalUsers ...
	UserPreferencesShowManagerToExternalUsers bool `json:"UserPreferencesShowManagerToExternalUsers"`
	// UserPreferencesShowManagerToGuestUsers ...
	UserPreferencesShowManagerToGuestUsers bool `json:"UserPreferencesShowManagerToGuestUsers"`
	// UserPreferencesShowMobilePhoneToExternalUsers ...
	UserPreferencesShowMobilePhoneToExternalUsers bool `json:"UserPreferencesShowMobilePhoneToExternalUsers"`
	// UserPreferencesShowMobilePhoneToGuestUsers ...
	UserPreferencesShowMobilePhoneToGuestUsers bool `json:"UserPreferencesShowMobilePhoneToGuestUsers"`
	// UserPreferencesShowPostalCodeToExternalUsers ...
	UserPreferencesShowPostalCodeToExternalUsers bool `json:"UserPreferencesShowPostalCodeToExternalUsers"`
	// UserPreferencesShowPostalCodeToGuestUsers ...
	UserPreferencesShowPostalCodeToGuestUsers bool `json:"UserPreferencesShowPostalCodeToGuestUsers"`
	// UserPreferencesShowProfilePicToGuestUsers ...
	UserPreferencesShowProfilePicToGuestUsers bool `json:"UserPreferencesShowProfilePicToGuestUsers"`
	// UserPreferencesShowStateToExternalUsers ...
	UserPreferencesShowStateToExternalUsers bool `json:"UserPreferencesShowStateToExternalUsers"`
	// UserPreferencesShowStateToGuestUsers ...
	UserPreferencesShowStateToGuestUsers bool `json:"UserPreferencesShowStateToGuestUsers"`
	// UserPreferencesShowStreetAddressToExternalUsers ...
	UserPreferencesShowStreetAddressToExternalUsers bool `json:"UserPreferencesShowStreetAddressToExternalUsers"`
	// UserPreferencesShowStreetAddressToGuestUsers ...
	UserPreferencesShowStreetAddressToGuestUsers bool `json:"UserPreferencesShowStreetAddressToGuestUsers"`
	// UserPreferencesShowTitleToExternalUsers ...
	UserPreferencesShowTitleToExternalUsers bool `json:"UserPreferencesShowTitleToExternalUsers"`
	// UserPreferencesShowTitleToGuestUsers ...
	UserPreferencesShowTitleToGuestUsers bool `json:"UserPreferencesShowTitleToGuestUsers"`
	// UserPreferencesShowWorkPhoneToExternalUsers ...
	UserPreferencesShowWorkPhoneToExternalUsers bool `json:"UserPreferencesShowWorkPhoneToExternalUsers"`
	// UserPreferencesShowWorkPhoneToGuestUsers ...
	UserPreferencesShowWorkPhoneToGuestUsers bool `json:"UserPreferencesShowWorkPhoneToGuestUsers"`
	// UserPreferencesSortFeedByComment ...
	UserPreferencesSortFeedByComment bool `json:"UserPreferencesSortFeedByComment"`
	// UserPreferencesSuppressEventSFXReminders ...
	UserPreferencesSuppressEventSFXReminders bool `json:"UserPreferencesSuppressEventSFXReminders"`
	// UserPreferencesSuppressTaskSFXReminders ...
	UserPreferencesSuppressTaskSFXReminders bool `json:"UserPreferencesSuppressTaskSFXReminders"`
	// UserPreferencesTaskRemindersCheckboxDefault ...
	UserPreferencesTaskRemindersCheckboxDefault bool `json:"UserPreferencesTaskRemindersCheckboxDefault"`
	// UserPreferencesUserDebugModePref ...
	UserPreferencesUserDebugModePref bool `json:"UserPreferencesUserDebugModePref"`
	// UserRoleID ...
	UserRoleID types.NullableString `json:"UserRoleId"`
	// UserType ...
	UserType types.NullableString `json:"UserType"`
	// Username ...
	Username string `json:"Username"`
}

// UserEmailPreferredPerson ...
//
// Represents a mapping for a user’s preferred record for an email address when multiple records match an
// email field.This object is available in API version 44.0 and later.
type UserEmailPreferredPerson struct {
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// Email ...
	//
	// Required. The unique email the mapping applies to. This field is unique for each user.
	//
	//
	// Properties:Create, Filter,Group, idLookup, Sort, Update
	Email string `json:"Email"`
	// ID ...
	ID string `json:"Id"`
	// IsDeleted ...
	IsDeleted bool `json:"IsDeleted"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Name ...
	//
	// Read-only. Auto-generated field.
	//
	// Properties:Autonumber, Defaulted on create, Filter,
	// idLookup, Sort
	Name string `json:"Name"`
	// OwnerID ...
	//
	// Required. The userId that owns the record. Each record is only accessible to the owner.
	//
	//
	// Properties:Create, Defaulted on create, Filter, Group, Sort, Update
	OwnerID string `json:"OwnerId"`
	// PersonRecordID ...
	//
	// Required. The recordId of a contact, lead, or user that represents the preferred record for the email
	// address. Use cascade delete for contact and lead, and delete if the personId is a deactivated user record.
	//
	//
	// Properties:Create, Filter, Group, Sort, Update
	PersonRecordID string `json:"PersonRecordId"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
}
