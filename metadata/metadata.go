package metadata

// THIS PACKAGE IS AUTOGENERATED DO NOT EDIT

import (
	"encoding/json"

	"github.com/b3ntly/salesforce/types"
)

// EntityParticle ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_entityparticle.htm
//
// Represents each element of a field that can be presented in a user interface. Contrast EntityParticle with
// FieldDefinition, which represents each element of a field defined in the Metadata API. EntityParticle has parity with
// describe, which returns API accessible fields only for an entity. Available in Tooling API version 34.0 and later.
type EntityParticle struct {
	// ByteLength ...
	//
	// The maximum length of the field represented by this EntityParticle, in bytes.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ByteLength int `json:"ByteLength"`
	// DataType ...
	//
	// Data type of the field, for example Text(40) or Date/Time. The values are defined as they are in the user
	// interface, not the corresponding API data type names.
	// For example, from an object, retrieve all the fields of one
	// datatype.

	// SELECT DataType, QualifiedApiName FROM EntityParticle WHERE DataType = 'phone' AND
	// EntityDefinition.QualifiedApiName = 'Account'

	//
	// Properties:Filter, Group, Nillable, Sort
	DataType string `json:"DataType"`
	// DefaultValueFormula ...
	//
	// The default value specified for the field when a formula isn’t specified. If no default value has been
	// specified, this field is not returned.
	//
	// Properties:Filter, Group, Nillable, Sort
	DefaultValueFormula string `json:"DefaultValueFormula"`
	// DeveloperName ...
	//
	// The unique name of the object in the API. This name can contain only underscores and alphanumeric
	// characters, and must be unique in your org. It must begin with a letter, not include spaces, not end with an underscore,
	// and not contain two consecutive underscores. In managed packages, this field prevents naming conflicts on
	// package installations. With this field, a developer can change the object’s name in a managed package and the
	// changes are reflected in a subscriber’s organization. Label is Record Type Name.
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	DeveloperName string `json:"DeveloperName"`
	// Digits ...
	//
	// Maximum number of digits for a field of type int. If an integer value exceeds the number of digits, the API
	// returns an error.
	//
	// Properties:Filter, Group, Nillable, Sort
	Digits int `json:"Digits"`
	// DurableID ...
	//
	// Unique identifier for the field. Always retrieve this value before using it, as the value isn’t
	// guaranteed to stay the same from one release to the next. To simplify queries, use this field.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	DurableID string `json:"DurableId"`
	// EntityDefinitionID ...
	//
	// The ID for the object defined in the DurableId field.
	//
	// Properties:Filter, Group, Nillable, Sort
	EntityDefinitionID string `json:"EntityDefinitionId"`
	// ExtraTypeInfo ...
	//
	// Represents further definition of a type. For type textarea: plaintextarea richtextarea For type URL:
	// image For type reference: externallookup indirectlookup For Account: switchablepersonname
	// personname
	//
	// Properties:Filter, Group, Nillable, Sort
	ExtraTypeInfo string `json:"ExtraTypeInfo"`
	// FieldDefinitionID ...
	//
	// ID of the field definition associated with this EntityParticle.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	FieldDefinitionID string `json:"FieldDefinitionId"`
	// ID ...
	ID string `json:"Id"`
	// InlineHelpText ...
	//
	// Represents the content of field-level help.
	// Restrictions

	// Available in Tooling API starting
	// version 35.0.

	//
	// Properties:Filter, Group, Nillable, Sort
	InlineHelpText string `json:"InlineHelpText"`
	// IsAPIFilterable ...
	//
	// If true, the field represented by this EntityParticle can be specified in the WHERE clause of a query
	// string.
	// Restrictions

	// You can't sort or filter compound fields. This field’s value is always false for
	// compound fields.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsAPIFilterable bool `json:"IsApiFilterable"`
	// IsAPIGroupable ...
	//
	// If true, the field represented by this EntityParticle can be included in the GROUP BY clause of a SOQL
	// query.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsAPIGroupable bool `json:"IsApiGroupable"`
	// IsAPISortable ...
	//
	// If true, a query can sort on the field represented by this EntityParticle.
	// Restrictions

	// You
	// can't sort or filter compound fields. This field’s value is always false for compound fields.

	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsAPISortable bool `json:"IsApiSortable"`
	// IsAutonumber ...
	IsAutonumber bool `json:"IsAutonumber"`
	// IsCalculated ...
	//
	// If true, the field represented by this EntityParticle is calculated.
	//
	// Properties:Defaulted on
	// create, Filter, Group, Sort
	IsCalculated bool `json:"IsCalculated"`
	// IsCaseSensitive ...
	//
	// If true, the field represented by this EntityParticle is case sensitive.
	// Restrictions

	//
	// Available in Tooling API starting version 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCaseSensitive bool `json:"IsCaseSensitive"`
	// IsCompactLayoutable ...
	//
	// If true, the field can be included in a compact layout.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	IsCompactLayoutable bool `json:"IsCompactLayoutable"`
	// IsComponent ...
	IsComponent bool `json:"IsComponent"`
	// IsCompound ...
	//
	// If true, the field is a compound of other fields. The default value is false. Available in Tooling API
	// starting version 38.0.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCompound bool `json:"IsCompound"`
	// IsCreatable ...
	//
	// If true, a value for the field represented by this EntityParticle can be created.
	// Restrictions

	//
	// Available in Tooling API starting version 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCreatable bool `json:"IsCreatable"`
	// IsDefaultedOnCreate ...
	//
	// If true, and if no other value is supplied, a default value is applied when the record is created.
	//
	// Restrictions

	// Available in Tooling API starting version 35.0.

	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	IsDefaultedOnCreate bool `json:"IsDefaultedOnCreate"`
	// IsDependentPicklist ...
	//
	// If true, the field is a dependent picklist.
	// Restrictions

	// Available in Tooling API starting
	// version 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsDependentPicklist bool `json:"IsDependentPicklist"`
	// IsDeprecatedAndHidden ...
	//
	// Reserved for future use.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsDeprecatedAndHidden bool `json:"IsDeprecatedAndHidden"`
	// IsDisplayLocationInDecimal ...
	//
	// If true, and if the field represented by this EntityParticle is a Geolocation custom field, the value
	// appears in decimal notation. If false, the value appears as degrees, minutes, and seconds.
	//
	// Restrictions

	// This field has no affect on custom fields that aren’t Geolocation fields.

	// Available in Tooling API
	// starting version 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsDisplayLocationInDecimal bool `json:"IsDisplayLocationInDecimal"`
	// IsEncrypted ...
	//
	// If true, the field is marked for Classic Encryption.
	// Restrictions

	// Available in Tooling API
	// starting version 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsEncrypted bool `json:"IsEncrypted"`
	// IsFieldHistoryTracked ...
	//
	// If true, the field’s history can be tracked.
	//
	// Properties:Defaulted on create, Filter, Group,
	// Sort
	IsFieldHistoryTracked bool `json:"IsFieldHistoryTracked"`
	// IsHTMLFormatted ...
	//
	// If true, the field contains HTML.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsHTMLFormatted bool `json:"IsHtmlFormatted"`
	// IsHighScaleNumber ...
	//
	// Indicates whether the field stores numbers to 8 decimal places regardless of what’s specified in the
	// field details (true) or not (false). Used to handle currencies for products that cost fractions of a cent, in
	// large quantities. If high-scale unit pricing isn’t enabled in your organization, this field isn’t
	// returned.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsHighScaleNumber bool `json:"IsHighScaleNumber"`
	// IsIDLookup ...
	//
	// If true, you can use the field to specify a record for upsert.
	// Restrictions

	// Available in Tooling
	// API starting version 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsIDLookup bool `json:"IsIdLookup"`
	// IsLayoutable ...
	//
	// If true, the field can be assigned to a layout.
	// Restrictions

	// Available in Tooling API starting
	// version 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsLayoutable bool `json:"IsLayoutable"`
	// IsListVisible ...
	//
	// If true, the field can be included in a related list.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	IsListVisible bool `json:"IsListVisible"`
	// IsNameField ...
	//
	// If true, the field is a name field.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsNameField bool `json:"IsNameField"`
	// IsNamePointing ...
	//
	// If true, the field represents a polymorphic relationship. Determine the object type at runtime for
	// dynamic queries when this value is true.
	// Restrictions

	// Available in Tooling API starting version
	// 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsNamePointing bool `json:"IsNamePointing"`
	// IsNillable ...
	//
	// If true, the field can be left out of queries on the object.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsNillable bool `json:"IsNillable"`
	// IsPermissionable ...
	//
	// If true, you can specify field permissions for the field.
	// Restrictions

	// Available in Tooling API
	// starting version 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsPermissionable bool `json:"IsPermissionable"`
	// IsUnique ...
	//
	// If true, the field is unique.
	// Restrictions

	// Available in Tooling API starting version
	// 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsUnique bool `json:"IsUnique"`
	// IsUpdatable ...
	//
	// If true, you can update the field.
	// Restrictions

	// Available in Tooling API starting version
	// 35.0.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsUpdatable bool `json:"IsUpdatable"`
	// IsWorkflowFilterable ...
	//
	// If true, the field can be filtered for a workflow.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	IsWorkflowFilterable bool `json:"IsWorkflowFilterable"`
	// IsWriteRequiresMasterRead ...
	//
	// If true, writing to the detail object requires read sharing instead of read-write sharing of the
	// parent.
	// Restrictions

	// Available in Tooling API starting version 35.0.

	//
	// Properties:Defaulted on
	// create, Filter, Group, Sort
	IsWriteRequiresMasterRead bool `json:"IsWriteRequiresMasterRead"`
	// Label ...
	//
	// The label that corresponds to the field in the user interface. If the label has translations, the label
	// returned is in the user’s language.
	//
	// Properties:Filter, Group, Sort
	Label string `json:"Label"`
	// Length ...
	//
	// The maximum number of bytes available to store the value in the field represented by this
	// EntityParticle.
	//
	// Properties:Filter, Group, Sort
	Length int `json:"Length"`
	// Mask ...
	//
	// Reserved for future use.
	//
	// Properties:Filter, Group, Nillable, Sort
	Mask string `json:"Mask"`
	// MaskType ...
	//
	// Reserved for future use.
	//
	// Properties:Filter, Group, Nillable, Sort
	MaskType string `json:"MaskType"`
	// MasterLabel ...
	//
	// Master label for this object. This display value is the internal label that is not translated. Limit: 40
	// characters.
	//
	// Properties:Filter, Group, Sort
	MasterLabel string `json:"MasterLabel"`
	// Name ...
	//
	// Name of the object for the field represented by this EntityParticle.
	// Restrictions

	// This field is
	// available in API version 35.0 and later.

	//
	// Properties:Filter, Group, Nillable, Sort
	Name string `json:"Name"`
	// NamespacePrefix ...
	//
	// The namespace prefix associated with this object. Each Developer Edition organization that creates a
	// managed package has a unique namespace prefix. Limit: 15 characters. You can refer to a component in a managed
	// package by using the namespacePrefix__componentName notation. The namespace prefix can have one of the
	// following values: In Developer Edition organizations, the namespace prefix is set to the namespace prefix of the
	// organization for all objects that support it. There is an exception if an object is in an installed managed package. In
	// that case, the object has the namespace prefix of the installed managed package. This field’s value is the
	// namespace prefix of the Developer Edition organization of the package developer. In organizations that are not
	// Developer Edition organizations, NamespacePrefix is only set for objects that are part of an installed managed
	// package. There is no namespace prefix for all other objects.
	//
	// Properties:Filter, Group, Sort
	NamespacePrefix string `json:"NamespacePrefix"`
	// Precision ...
	//
	// The maximum number of digits allowed for the field represented by this EntityParticle.
	//
	//
	// Properties:Filter, Group, Sort
	Precision int `json:"Precision"`
	// QualifiedAPIName ...
	//
	// A unique external name for the field.
	//
	// Properties:Filter, Group, Sort
	QualifiedAPIName string `json:"QualifiedApiName"`
	// ReferenceTargetField ...
	//
	// Specifies the custom field on the parent object to match against this indirect lookup relationship field,
	// whose values come from an external data source. The specified custom field on the parent object must have both
	// IsIdLookup and IsUnique set to true.
	// Restrictions

	// Available only if the field represented by this
	// EntityParticle is an indirect lookup relationship field on an external object.

	// This field is available in API
	// version 35.0 and later.

	//
	// Properties:Filter, Group, Nillable, Sort
	ReferenceTargetField string `json:"ReferenceTargetField"`
	// ReferenceTo ...
	//
	// The array of values in this field represents the possible object types of the referenced objects. For
	// example, if EntityParticle represents a field on Events, the values are Contact, Lead, and custom objects with a
	// relationship to Events.
	//
	// Properties:Nillable
	ReferenceTo string `json:"ReferenceTo"`
	// RelationshipName ...
	//
	// If the field represented by this EntityParticle is a master-detail relationship field, this field’s
	// value is the relationship name.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationshipName string `json:"RelationshipName"`
	// RelationshipOrder ...
	//
	// A value of 0 represents a primary relationship, and a value of 1 represents a secondary relationship. This
	// field is relevant only for relationship fields.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationshipOrder int `json:"RelationshipOrder"`
	// Scale ...
	//
	// The number of digits to the right of the decimal in an integer. For example, 3.00 has a scale of 2.
	//
	//
	// Properties:Filter, Group, Sort
	Scale int `json:"Scale"`
	// ServiceDataTypeID ...
	ServiceDataTypeID string `json:"ServiceDataTypeId"`
	// ValueTypeID ...
	//
	// ID of the value type, if any, for the field represented by this EntityParticle.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ValueTypeID string `json:"ValueTypeId"`
}

// RelationshipDomain ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_relationshipdomain.htm
//
// Represents the relationship an object has with other objects. RelationshipDomain allows you to write
// simpler queries. For example, “which objects are the child objects for the object defined in ParentSobject”
// is easier using RelationshipDomain. Available in Tooling API version 34.0 and later.
type RelationshipDomain struct {
	// ChildSObjectID ...
	//
	// ID of the ChildSobject.
	//
	// Properties:Filter, Group, Nillable, Sort
	ChildSObjectID string `json:"ChildSobjectId"`
	// DurableID ...
	//
	// Unique identifier for the field. Always retrieve this value before using it, as the value isn’t
	// guaranteed to stay the same from one release to the next. To simplify queries, use this field.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	DurableID string `json:"DurableId"`
	// FieldID ...
	//
	// ID of Field.
	//
	// Properties:Filter, Group, Nillable, Sort
	FieldID string `json:"FieldId"`
	// ID ...
	ID string `json:"Id"`
	// IsCascadeDelete ...
	//
	// If true, this object’s parent can’t be deleted until all records for this object are deleted.
	// Corresponds to Cascade value for DeleteConstraint in the Metadata API.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsCascadeDelete bool `json:"IsCascadeDelete"`
	// IsDeprecatedAndHidden ...
	//
	// If true, this object is unavailable for the current version.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsDeprecatedAndHidden bool `json:"IsDeprecatedAndHidden"`
	// IsRestrictedDelete ...
	//
	// If true, this object can’t be deleted. Corresponds to Restrict value for DeleteConstraint in the
	// Metadata API.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsRestrictedDelete bool `json:"IsRestrictedDelete"`
	// JunctionIDListNames ...
	//
	// The names of the lists of junction IDs associated with an object. Each ID represents an object that has a
	// relationship with the associated object.
	//
	// Properties:Nillable
	JunctionIDListNames string `json:"JunctionIdListNames"`
	// ParentSObjectID ...
	//
	// ID of the ParentSobject.
	//
	// Properties:Filter, Group, Nillable, Sort
	ParentSObjectID string `json:"ParentSobjectId"`
	// RelationshipInfoID ...
	//
	// ID of RelationshipInfo for this relationship domain.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	RelationshipInfoID string `json:"RelationshipInfoId"`
	// RelationshipName ...
	//
	// Name of this relationship.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationshipName string `json:"RelationshipName"`
}

// Publisher ...
type Publisher struct {
	// DurableID ...
	DurableID string `json:"DurableId"`
	// ID ...
	ID string `json:"Id"`
	// IsSalesforce ...
	IsSalesforce bool `json:"IsSalesforce"`
	// MajorVersion ...
	MajorVersion int `json:"MajorVersion"`
	// MinorVersion ...
	MinorVersion int `json:"MinorVersion"`
	// Name ...
	Name string `json:"Name"`
	// NamespacePrefix ...
	NamespacePrefix string `json:"NamespacePrefix"`
}

// User ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_user.htm
//
// Represents a user. You can retrieve standard fields on User with the Tooling API, but custom fields can’t
// be retrieved.
type User struct {
	// AboutMe ...
	AboutMe string `json:"AboutMe"`
	// AccountID ...
	AccountID string `json:"AccountId"`
	// Address ...
	Address types.Address `json:"Address"`
	// Alias ...
	Alias string `json:"Alias"`
	// BadgeText ...
	BadgeText string `json:"BadgeText"`
	// BannerPhotoURL ...
	BannerPhotoURL string `json:"BannerPhotoUrl"`
	// CallCenterID ...
	CallCenterID string `json:"CallCenterId"`
	// City ...
	City string `json:"City"`
	// CommunityNickname ...
	CommunityNickname string `json:"CommunityNickname"`
	// CompanyName ...
	CompanyName string `json:"CompanyName"`
	// ContactID ...
	ContactID string `json:"ContactId"`
	// Country ...
	Country string `json:"Country"`
	// CreatedByID ...
	CreatedByID string `json:"CreatedById"`
	// CreatedDate ...
	CreatedDate types.Datetime `json:"CreatedDate"`
	// DefaultGroupNotificationFrequency ...
	DefaultGroupNotificationFrequency string `json:"DefaultGroupNotificationFrequency"`
	// DelegatedApproverID ...
	DelegatedApproverID string `json:"DelegatedApproverId"`
	// Department ...
	Department string `json:"Department"`
	// DigestFrequency ...
	DigestFrequency string `json:"DigestFrequency"`
	// Division ...
	Division string `json:"Division"`
	// Email ...
	Email string `json:"Email"`
	// EmailEncodingKey ...
	EmailEncodingKey string `json:"EmailEncodingKey"`
	// EmailPreferencesAutoBcc ...
	EmailPreferencesAutoBcc bool `json:"EmailPreferencesAutoBcc"`
	// EmailPreferencesAutoBccStayInTouch ...
	EmailPreferencesAutoBccStayInTouch bool `json:"EmailPreferencesAutoBccStayInTouch"`
	// EmailPreferencesStayInTouchReminder ...
	EmailPreferencesStayInTouchReminder bool `json:"EmailPreferencesStayInTouchReminder"`
	// EmployeeNumber ...
	EmployeeNumber string `json:"EmployeeNumber"`
	// Extension ...
	Extension string `json:"Extension"`
	// Fax ...
	Fax string `json:"Fax"`
	// FederationIDentifier ...
	FederationIDentifier string `json:"FederationIdentifier"`
	// FirstName ...
	//
	// The user’s first name.
	//
	// Properties:Create, Filter, Group, NillableSort, Update
	FirstName string `json:"FirstName"`
	// ForecastEnabled ...
	ForecastEnabled bool `json:"ForecastEnabled"`
	// FullPhotoURL ...
	FullPhotoURL string `json:"FullPhotoUrl"`
	// GeocodeAccuracy ...
	GeocodeAccuracy string `json:"GeocodeAccuracy"`
	// ID ...
	ID string `json:"Id"`
	// IndividualID ...
	IndividualID string `json:"IndividualId"`
	// IsActive ...
	IsActive bool `json:"IsActive"`
	// IsExtIndicatorVisible ...
	IsExtIndicatorVisible bool `json:"IsExtIndicatorVisible"`
	// IsProfilePhotoActive ...
	IsProfilePhotoActive bool `json:"IsProfilePhotoActive"`
	// JigsawImportLimitOverride ...
	JigsawImportLimitOverride int `json:"JigsawImportLimitOverride"`
	// LanguageLocaleKey ...
	LanguageLocaleKey string `json:"LanguageLocaleKey"`
	// LastLoginDate ...
	LastLoginDate types.Datetime `json:"LastLoginDate"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LastName ...
	//
	// The user’s last name.
	//
	// Properties:Create, Filter, Group, NillableSort, Update
	LastName string `json:"LastName"`
	// LastPasswordChangeDate ...
	LastPasswordChangeDate types.Datetime `json:"LastPasswordChangeDate"`
	// LastReferencedDate ...
	LastReferencedDate types.Datetime `json:"LastReferencedDate"`
	// LastViewedDate ...
	LastViewedDate types.Datetime `json:"LastViewedDate"`
	// Latitude ...
	Latitude float64 `json:"Latitude"`
	// LocaleSidKey ...
	LocaleSidKey string `json:"LocaleSidKey"`
	// Longitude ...
	Longitude float64 `json:"Longitude"`
	// ManagerID ...
	ManagerID string `json:"ManagerId"`
	// MediumBannerPhotoURL ...
	MediumBannerPhotoURL string `json:"MediumBannerPhotoUrl"`
	// MediumPhotoURL ...
	MediumPhotoURL string `json:"MediumPhotoUrl"`
	// MobilePhone ...
	MobilePhone string `json:"MobilePhone"`
	// Name ...
	//
	// Concatenation of FirstName and LastName. Limited to 121 characters.
	//
	// Properties:Filter,
	// Group, Sort
	Name string `json:"Name"`
	// NumberOfFailedLogins ...
	NumberOfFailedLogins int `json:"NumberOfFailedLogins"`
	// OfflinePdaTrialExpirationDate ...
	OfflinePdaTrialExpirationDate types.Datetime `json:"OfflinePdaTrialExpirationDate"`
	// OfflineTrialExpirationDate ...
	OfflineTrialExpirationDate types.Datetime `json:"OfflineTrialExpirationDate"`
	// OutOfOfficeMessage ...
	OutOfOfficeMessage string `json:"OutOfOfficeMessage"`
	// Phone ...
	Phone string `json:"Phone"`
	// PostalCode ...
	PostalCode string `json:"PostalCode"`
	// ProfileID ...
	ProfileID string `json:"ProfileId"`
	// ReceivesAdminInfoEmails ...
	ReceivesAdminInfoEmails bool `json:"ReceivesAdminInfoEmails"`
	// ReceivesInfoEmails ...
	ReceivesInfoEmails bool `json:"ReceivesInfoEmails"`
	// SenderEmail ...
	SenderEmail string `json:"SenderEmail"`
	// SenderName ...
	SenderName string `json:"SenderName"`
	// Signature ...
	Signature string `json:"Signature"`
	// SmallBannerPhotoURL ...
	SmallBannerPhotoURL string `json:"SmallBannerPhotoUrl"`
	// SmallPhotoURL ...
	SmallPhotoURL string `json:"SmallPhotoUrl"`
	// State ...
	State string `json:"State"`
	// StayInTouchNote ...
	StayInTouchNote string `json:"StayInTouchNote"`
	// StayInTouchSignature ...
	StayInTouchSignature string `json:"StayInTouchSignature"`
	// StayInTouchSubject ...
	StayInTouchSubject string `json:"StayInTouchSubject"`
	// Street ...
	Street string `json:"Street"`
	// SystemModstamp ...
	SystemModstamp types.Datetime `json:"SystemModstamp"`
	// TimeZoneSidKey ...
	TimeZoneSidKey string `json:"TimeZoneSidKey"`
	// Title ...
	Title string `json:"Title"`
	// UserPermissionsCallCenterAutoLogin ...
	UserPermissionsCallCenterAutoLogin bool `json:"UserPermissionsCallCenterAutoLogin"`
	// UserPermissionsInteractionUser ...
	UserPermissionsInteractionUser bool `json:"UserPermissionsInteractionUser"`
	// UserPermissionsJigsawProspectingUser ...
	UserPermissionsJigsawProspectingUser bool `json:"UserPermissionsJigsawProspectingUser"`
	// UserPermissionsKnowledgeUser ...
	UserPermissionsKnowledgeUser bool `json:"UserPermissionsKnowledgeUser"`
	// UserPermissionsMarketingUser ...
	UserPermissionsMarketingUser bool `json:"UserPermissionsMarketingUser"`
	// UserPermissionsOfflineUser ...
	UserPermissionsOfflineUser bool `json:"UserPermissionsOfflineUser"`
	// UserPermissionsSFContentUser ...
	UserPermissionsSFContentUser bool `json:"UserPermissionsSFContentUser"`
	// UserPermissionsSiteforceContributorUser ...
	UserPermissionsSiteforceContributorUser bool `json:"UserPermissionsSiteforceContributorUser"`
	// UserPermissionsSiteforcePublisherUser ...
	UserPermissionsSiteforcePublisherUser bool `json:"UserPermissionsSiteforcePublisherUser"`
	// UserPermissionsSupportUser ...
	UserPermissionsSupportUser bool `json:"UserPermissionsSupportUser"`
	// UserPermissionsWorkDotComUserFeature ...
	UserPermissionsWorkDotComUserFeature bool `json:"UserPermissionsWorkDotComUserFeature"`
	// UserPreferencesActivityRemindersPopup ...
	UserPreferencesActivityRemindersPopup bool `json:"UserPreferencesActivityRemindersPopup"`
	// UserPreferencesApexPagesDeveloperMode ...
	UserPreferencesApexPagesDeveloperMode bool `json:"UserPreferencesApexPagesDeveloperMode"`
	// UserPreferencesCacheDiagnostics ...
	UserPreferencesCacheDiagnostics bool `json:"UserPreferencesCacheDiagnostics"`
	// UserPreferencesContentEmailAsAndWhen ...
	UserPreferencesContentEmailAsAndWhen bool `json:"UserPreferencesContentEmailAsAndWhen"`
	// UserPreferencesContentNoEmail ...
	UserPreferencesContentNoEmail bool `json:"UserPreferencesContentNoEmail"`
	// UserPreferencesCreateLEXAppsWTShown ...
	UserPreferencesCreateLEXAppsWTShown bool `json:"UserPreferencesCreateLEXAppsWTShown"`
	// UserPreferencesDisCommentAfterLikeEmail ...
	UserPreferencesDisCommentAfterLikeEmail bool `json:"UserPreferencesDisCommentAfterLikeEmail"`
	// UserPreferencesDisMentionsCommentEmail ...
	UserPreferencesDisMentionsCommentEmail bool `json:"UserPreferencesDisMentionsCommentEmail"`
	// UserPreferencesDisProfPostCommentEmail ...
	UserPreferencesDisProfPostCommentEmail bool `json:"UserPreferencesDisProfPostCommentEmail"`
	// UserPreferencesDisableAllFeedsEmail ...
	UserPreferencesDisableAllFeedsEmail bool `json:"UserPreferencesDisableAllFeedsEmail"`
	// UserPreferencesDisableBookmarkEmail ...
	UserPreferencesDisableBookmarkEmail bool `json:"UserPreferencesDisableBookmarkEmail"`
	// UserPreferencesDisableChangeCommentEmail ...
	UserPreferencesDisableChangeCommentEmail bool `json:"UserPreferencesDisableChangeCommentEmail"`
	// UserPreferencesDisableEndorsementEmail ...
	UserPreferencesDisableEndorsementEmail bool `json:"UserPreferencesDisableEndorsementEmail"`
	// UserPreferencesDisableFeedbackEmail ...
	UserPreferencesDisableFeedbackEmail bool `json:"UserPreferencesDisableFeedbackEmail"`
	// UserPreferencesDisableFileShareNotificationsForAPI ...
	UserPreferencesDisableFileShareNotificationsForAPI bool `json:"UserPreferencesDisableFileShareNotificationsForApi"`
	// UserPreferencesDisableFollowersEmail ...
	UserPreferencesDisableFollowersEmail bool `json:"UserPreferencesDisableFollowersEmail"`
	// UserPreferencesDisableLaterCommentEmail ...
	UserPreferencesDisableLaterCommentEmail bool `json:"UserPreferencesDisableLaterCommentEmail"`
	// UserPreferencesDisableLikeEmail ...
	UserPreferencesDisableLikeEmail bool `json:"UserPreferencesDisableLikeEmail"`
	// UserPreferencesDisableMentionsPostEmail ...
	UserPreferencesDisableMentionsPostEmail bool `json:"UserPreferencesDisableMentionsPostEmail"`
	// UserPreferencesDisableMessageEmail ...
	UserPreferencesDisableMessageEmail bool `json:"UserPreferencesDisableMessageEmail"`
	// UserPreferencesDisableProfilePostEmail ...
	UserPreferencesDisableProfilePostEmail bool `json:"UserPreferencesDisableProfilePostEmail"`
	// UserPreferencesDisableSharePostEmail ...
	UserPreferencesDisableSharePostEmail bool `json:"UserPreferencesDisableSharePostEmail"`
	// UserPreferencesDisableWorkEmail ...
	UserPreferencesDisableWorkEmail bool `json:"UserPreferencesDisableWorkEmail"`
	// UserPreferencesEnableAutoSubForFeeds ...
	UserPreferencesEnableAutoSubForFeeds bool `json:"UserPreferencesEnableAutoSubForFeeds"`
	// UserPreferencesEventRemindersCheckboxDefault ...
	UserPreferencesEventRemindersCheckboxDefault bool `json:"UserPreferencesEventRemindersCheckboxDefault"`
	// UserPreferencesExcludeMailAppAttachments ...
	UserPreferencesExcludeMailAppAttachments bool `json:"UserPreferencesExcludeMailAppAttachments"`
	// UserPreferencesFavoritesShowTopFavorites ...
	UserPreferencesFavoritesShowTopFavorites bool `json:"UserPreferencesFavoritesShowTopFavorites"`
	// UserPreferencesFavoritesWTShown ...
	UserPreferencesFavoritesWTShown bool `json:"UserPreferencesFavoritesWTShown"`
	// UserPreferencesGlobalNavBarWTShown ...
	UserPreferencesGlobalNavBarWTShown bool `json:"UserPreferencesGlobalNavBarWTShown"`
	// UserPreferencesGlobalNavGridMenuWTShown ...
	UserPreferencesGlobalNavGridMenuWTShown bool `json:"UserPreferencesGlobalNavGridMenuWTShown"`
	// UserPreferencesHasCelebrationBadge ...
	UserPreferencesHasCelebrationBadge bool `json:"UserPreferencesHasCelebrationBadge"`
	// UserPreferencesHideBiggerPhotoCallout ...
	UserPreferencesHideBiggerPhotoCallout bool `json:"UserPreferencesHideBiggerPhotoCallout"`
	// UserPreferencesHideCSNDesktopTask ...
	UserPreferencesHideCSNDesktopTask bool `json:"UserPreferencesHideCSNDesktopTask"`
	// UserPreferencesHideCSNGetChatterMobileTask ...
	UserPreferencesHideCSNGetChatterMobileTask bool `json:"UserPreferencesHideCSNGetChatterMobileTask"`
	// UserPreferencesHideChatterOnboardingSplash ...
	UserPreferencesHideChatterOnboardingSplash bool `json:"UserPreferencesHideChatterOnboardingSplash"`
	// UserPreferencesHideEndUserOnboardingAssistantModal ...
	UserPreferencesHideEndUserOnboardingAssistantModal bool `json:"UserPreferencesHideEndUserOnboardingAssistantModal"`
	// UserPreferencesHideLegacyRetirementModal ...
	UserPreferencesHideLegacyRetirementModal bool `json:"UserPreferencesHideLegacyRetirementModal"`
	// UserPreferencesHideLightningMigrationModal ...
	UserPreferencesHideLightningMigrationModal bool `json:"UserPreferencesHideLightningMigrationModal"`
	// UserPreferencesHideS1BrowserUI ...
	UserPreferencesHideS1BrowserUI bool `json:"UserPreferencesHideS1BrowserUI"`
	// UserPreferencesHideSecondChatterOnboardingSplash ...
	UserPreferencesHideSecondChatterOnboardingSplash bool `json:"UserPreferencesHideSecondChatterOnboardingSplash"`
	// UserPreferencesHideSfxWelcomeMat ...
	UserPreferencesHideSfxWelcomeMat bool `json:"UserPreferencesHideSfxWelcomeMat"`
	// UserPreferencesJigsawListUser ...
	UserPreferencesJigsawListUser bool `json:"UserPreferencesJigsawListUser"`
	// UserPreferencesLightningExperiencePreferred ...
	UserPreferencesLightningExperiencePreferred bool `json:"UserPreferencesLightningExperiencePreferred"`
	// UserPreferencesNativeEmailClient ...
	UserPreferencesNativeEmailClient bool `json:"UserPreferencesNativeEmailClient"`
	// UserPreferencesNewLightningReportRunPageEnabled ...
	UserPreferencesNewLightningReportRunPageEnabled bool `json:"UserPreferencesNewLightningReportRunPageEnabled"`
	// UserPreferencesPathAssistantCollapsed ...
	UserPreferencesPathAssistantCollapsed bool `json:"UserPreferencesPathAssistantCollapsed"`
	// UserPreferencesPreviewCustomTheme ...
	UserPreferencesPreviewCustomTheme bool `json:"UserPreferencesPreviewCustomTheme"`
	// UserPreferencesPreviewLightning ...
	UserPreferencesPreviewLightning bool `json:"UserPreferencesPreviewLightning"`
	// UserPreferencesReceiveNoNotificationsAsApprover ...
	UserPreferencesReceiveNoNotificationsAsApprover bool `json:"UserPreferencesReceiveNoNotificationsAsApprover"`
	// UserPreferencesReceiveNotificationsAsDelegatedApprover ...
	UserPreferencesReceiveNotificationsAsDelegatedApprover bool `json:"UserPreferencesReceiveNotificationsAsDelegatedApprover"`
	// UserPreferencesRecordHomeReservedWTShown ...
	UserPreferencesRecordHomeReservedWTShown bool `json:"UserPreferencesRecordHomeReservedWTShown"`
	// UserPreferencesRecordHomeSectionCollapseWTShown ...
	UserPreferencesRecordHomeSectionCollapseWTShown bool `json:"UserPreferencesRecordHomeSectionCollapseWTShown"`
	// UserPreferencesReminderSoundOff ...
	UserPreferencesReminderSoundOff bool `json:"UserPreferencesReminderSoundOff"`
	// UserPreferencesSRHOverrideActivities ...
	UserPreferencesSRHOverrideActivities bool `json:"UserPreferencesSRHOverrideActivities"`
	// UserPreferencesShowCityToExternalUsers ...
	UserPreferencesShowCityToExternalUsers bool `json:"UserPreferencesShowCityToExternalUsers"`
	// UserPreferencesShowCityToGuestUsers ...
	UserPreferencesShowCityToGuestUsers bool `json:"UserPreferencesShowCityToGuestUsers"`
	// UserPreferencesShowCountryToExternalUsers ...
	UserPreferencesShowCountryToExternalUsers bool `json:"UserPreferencesShowCountryToExternalUsers"`
	// UserPreferencesShowCountryToGuestUsers ...
	UserPreferencesShowCountryToGuestUsers bool `json:"UserPreferencesShowCountryToGuestUsers"`
	// UserPreferencesShowEmailToExternalUsers ...
	UserPreferencesShowEmailToExternalUsers bool `json:"UserPreferencesShowEmailToExternalUsers"`
	// UserPreferencesShowEmailToGuestUsers ...
	UserPreferencesShowEmailToGuestUsers bool `json:"UserPreferencesShowEmailToGuestUsers"`
	// UserPreferencesShowFaxToExternalUsers ...
	UserPreferencesShowFaxToExternalUsers bool `json:"UserPreferencesShowFaxToExternalUsers"`
	// UserPreferencesShowFaxToGuestUsers ...
	UserPreferencesShowFaxToGuestUsers bool `json:"UserPreferencesShowFaxToGuestUsers"`
	// UserPreferencesShowManagerToExternalUsers ...
	UserPreferencesShowManagerToExternalUsers bool `json:"UserPreferencesShowManagerToExternalUsers"`
	// UserPreferencesShowManagerToGuestUsers ...
	UserPreferencesShowManagerToGuestUsers bool `json:"UserPreferencesShowManagerToGuestUsers"`
	// UserPreferencesShowMobilePhoneToExternalUsers ...
	UserPreferencesShowMobilePhoneToExternalUsers bool `json:"UserPreferencesShowMobilePhoneToExternalUsers"`
	// UserPreferencesShowMobilePhoneToGuestUsers ...
	UserPreferencesShowMobilePhoneToGuestUsers bool `json:"UserPreferencesShowMobilePhoneToGuestUsers"`
	// UserPreferencesShowPostalCodeToExternalUsers ...
	UserPreferencesShowPostalCodeToExternalUsers bool `json:"UserPreferencesShowPostalCodeToExternalUsers"`
	// UserPreferencesShowPostalCodeToGuestUsers ...
	UserPreferencesShowPostalCodeToGuestUsers bool `json:"UserPreferencesShowPostalCodeToGuestUsers"`
	// UserPreferencesShowProfilePicToGuestUsers ...
	UserPreferencesShowProfilePicToGuestUsers bool `json:"UserPreferencesShowProfilePicToGuestUsers"`
	// UserPreferencesShowStateToExternalUsers ...
	UserPreferencesShowStateToExternalUsers bool `json:"UserPreferencesShowStateToExternalUsers"`
	// UserPreferencesShowStateToGuestUsers ...
	UserPreferencesShowStateToGuestUsers bool `json:"UserPreferencesShowStateToGuestUsers"`
	// UserPreferencesShowStreetAddressToExternalUsers ...
	UserPreferencesShowStreetAddressToExternalUsers bool `json:"UserPreferencesShowStreetAddressToExternalUsers"`
	// UserPreferencesShowStreetAddressToGuestUsers ...
	UserPreferencesShowStreetAddressToGuestUsers bool `json:"UserPreferencesShowStreetAddressToGuestUsers"`
	// UserPreferencesShowTitleToExternalUsers ...
	UserPreferencesShowTitleToExternalUsers bool `json:"UserPreferencesShowTitleToExternalUsers"`
	// UserPreferencesShowTitleToGuestUsers ...
	UserPreferencesShowTitleToGuestUsers bool `json:"UserPreferencesShowTitleToGuestUsers"`
	// UserPreferencesShowWorkPhoneToExternalUsers ...
	UserPreferencesShowWorkPhoneToExternalUsers bool `json:"UserPreferencesShowWorkPhoneToExternalUsers"`
	// UserPreferencesShowWorkPhoneToGuestUsers ...
	UserPreferencesShowWorkPhoneToGuestUsers bool `json:"UserPreferencesShowWorkPhoneToGuestUsers"`
	// UserPreferencesSortFeedByComment ...
	UserPreferencesSortFeedByComment bool `json:"UserPreferencesSortFeedByComment"`
	// UserPreferencesSuppressEventSFXReminders ...
	UserPreferencesSuppressEventSFXReminders bool `json:"UserPreferencesSuppressEventSFXReminders"`
	// UserPreferencesSuppressTaskSFXReminders ...
	UserPreferencesSuppressTaskSFXReminders bool `json:"UserPreferencesSuppressTaskSFXReminders"`
	// UserPreferencesTaskRemindersCheckboxDefault ...
	UserPreferencesTaskRemindersCheckboxDefault bool `json:"UserPreferencesTaskRemindersCheckboxDefault"`
	// UserPreferencesUserDebugModePref ...
	UserPreferencesUserDebugModePref bool `json:"UserPreferencesUserDebugModePref"`
	// UserRoleID ...
	UserRoleID string `json:"UserRoleId"`
	// UserType ...
	UserType string `json:"UserType"`
	// Username ...
	//
	// The name of the user in your organization.
	//
	// Properties:Create, Filter, Group, idLookup, Sort,
	// Update
	Username string `json:"Username"`
}

// ChildRelationship ...
type ChildRelationship struct {
	// CascadeDelete ...
	CascadeDelete bool `json:"cascadeDelete"`
	// ChildSObject ...
	ChildSObject string `json:"childSObject"`
	// DeprecatedAndHidden ...
	DeprecatedAndHidden bool `json:"deprecatedAndHidden"`
	// Field ...
	Field string `json:"field"`
	// JunctionIDListNames ...
	JunctionIDListNames []json.RawMessage `json:"junctionIdListNames"`
	// JunctionReferenceTo ...
	JunctionReferenceTo []json.RawMessage `json:"junctionReferenceTo"`
	// RelationshipName ...
	RelationshipName string `json:"relationshipName"`
	// RestrictedDelete ...
	RestrictedDelete bool `json:"restrictedDelete"`
}

// EntityDefinition ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_entitydefinition.htm
//
// Provides row-based access to metadata about standard and custom objects.
type EntityDefinition struct {
	// ChildRelationships ...
	//
	// Represents the child relationships defined for the object. This field is available in Tooling API version
	// 34.0 and later. Because this field represents a relationship, use only in subqueries.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ChildRelationships struct {
		Done      bool                `json:"done"`
		Count     int                 `json:"count"`
		TotalSize int                 `json:"totalSize"`
		Records   []*RelationshipInfo `json:"records"`
	} `json:"ChildRelationships"`
	// DefaultCompactLayoutID ...
	//
	// ID of the default compact layout, if any.
	//
	// Properties:Filter, Group, Nillable, Sort
	DefaultCompactLayoutID string `json:"DefaultCompactLayoutId"`
	// DefaultImplementation ...
	//
	// Reserved for future use.
	//
	// Properties:Filter, Group, Nillable, Sort
	DefaultImplementation string `json:"DefaultImplementation"`
	// DeploymentStatus ...
	//
	// Specifies the deployment status of the entity. Controls whether a custom object and its associated custom
	// tab, related lists, and reports are visible to non-admin users. This field is available in Tooling API version
	// 37.0 and later. Valid values are: InDevelopment Deployed
	//
	// Properties:Filter, Group, Nillable,
	// Restricted picklist, Sort
	DeploymentStatus string `json:"DeploymentStatus"`
	// Description ...
	//
	// The description of the entity. A meaningful description makes it easier to distinguish between custom
	// objects when they are viewed in a list. This field is available in Tooling API version 37.0 and later.
	//
	//
	// Properties:Filter, Nillable, Sort
	Description string `json:"Description"`
	// DetailURL ...
	//
	// URL to the read-only detail page for this object. Corresponds to the urlDetail field in
	// DescribeSobjectResult. This field is available in Tooling API version 34.0 and later.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	DetailURL string `json:"DetailUrl"`
	// DeveloperName ...
	//
	// The developer’s internal name for the custom object (for example CF__c).
	//
	// Properties:Filter,
	// Group, Nillable, Sort
	DeveloperName string `json:"DeveloperName"`
	// DurableID ...
	//
	// Unique identifier for the field. Always retrieve this value before using it, as the value isn’t
	// guaranteed to stay the same from one release to the next. Simplify queries by using this field instead of making
	// multiple queries.
	//
	// Properties:Filter, Group, Nillable, Sort
	DurableID string `json:"DurableId"`
	// EditDefinitionURL ...
	//
	// This field is available in Tooling API version 34.0 and later.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	EditDefinitionURL string `json:"EditDefinitionUrl"`
	// EditURL ...
	//
	// The URL used when editing the custom entity definition. Corresponds to the urlEdit field on
	// DescribeSobjectResult. This field is available in Tooling API version 34.0 and later.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	EditURL string `json:"EditUrl"`
	// ExtendedBy ...
	//
	// Reserved for future use.
	//
	// Properties:Filter, Group, Nillable, Sort
	ExtendedBy string `json:"ExtendedBy"`
	// ExtendsInterfaces ...
	//
	// Reserved for future use.
	//
	// Properties:Filter, Group, Nillable, Sort
	ExtendsInterfaces string `json:"ExtendsInterfaces"`
	// ExternalSharingModel ...
	//
	// The external sharing model. Possible values are: None Read Edit ControlledByLeadOrContact
	// ControlledByCampaign This field is available in Tooling API version 38.0 and later.
	//
	// Properties:Filter, Group,
	// Restricted picklist, Sort
	ExternalSharingModel string `json:"ExternalSharingModel"`
	// Fields ...
	//
	// Represents the standard and custom fields defined for this object. Because this field represents a
	// relationship, use only in subqueries.
	//
	// Properties:Filter, Group, Nillable, Sort
	Fields struct {
		Done      bool               `json:"done"`
		Count     int                `json:"count"`
		TotalSize int                `json:"totalSize"`
		Records   []*FieldDefinition `json:"records"`
	} `json:"Fields"`
	// HasSubtypes ...
	HasSubtypes bool `json:"HasSubtypes"`
	// HelpSettingPageName ...
	//
	// The name of the custom help setting page. This field is available in Tooling API version 34.0 and
	// later.
	//
	// Properties:Filter, Group, Nillable, Sort
	HelpSettingPageName string `json:"HelpSettingPageName"`
	// HelpSettingPageURL ...
	//
	// The URL pointing to the custom help setting page for custom objects. This field is available in Tooling API
	// version 34.0 and later.
	//
	// Properties:Filter, Group, Nillable, Sort
	HelpSettingPageURL string `json:"HelpSettingPageUrl"`
	// ID ...
	ID string `json:"Id"`
	// ImplementedBy ...
	//
	// Reserved for future use.
	//
	// Properties:Filter, Group, Nillable, Sort
	ImplementedBy string `json:"ImplementedBy"`
	// ImplementsInterfaces ...
	//
	// Reserved for future use.
	//
	// Properties:Filter, Group, Nillable, Sort
	ImplementsInterfaces string `json:"ImplementsInterfaces"`
	// InternalSharingModel ...
	//
	// The internal sharing model. Possible values are: None Read Edit ControlledByLeadOrContact
	// ControlledByCampaign This field is available in Tooling API version 38.0 and later.
	//
	// Properties:Filter, Group,
	// Restricted picklist, Sort
	InternalSharingModel string `json:"InternalSharingModel"`
	// IsApexTriggerable ...
	//
	// If true, Apex triggers can be defined for the entity.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	IsApexTriggerable bool `json:"IsApexTriggerable"`
	// IsAutoActivityCaptureEnabled ...
	//
	// If true, the object is enabled for Einstein Activity Capture. This field is available in Tooling API
	// version 41.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsAutoActivityCaptureEnabled bool `json:"IsAutoActivityCaptureEnabled"`
	// IsCompactLayoutable ...
	//
	// If true, the object supports compact layouts. That is, compact layouts can be defined, a system compact
	// layout can be synthesized, or both.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCompactLayoutable bool `json:"IsCompactLayoutable"`
	// IsCustomSetting ...
	//
	// If true, the object is a custom setting. This field is available in Tooling API version 35.0 and
	// later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCustomSetting bool `json:"IsCustomSetting"`
	// IsCustomizable ...
	//
	// If true, custom fields can be defined for the entity.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	IsCustomizable bool `json:"IsCustomizable"`
	// IsDeprecatedAndHidden ...
	//
	// If true, this object is unavailable for the current version. This field is available in Tooling API version
	// 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsDeprecatedAndHidden bool `json:"IsDeprecatedAndHidden"`
	// IsEverCreatable ...
	//
	// If true, the object can be created using an API, assuming the current user has the appropriate permissions.
	// If false, the application server manages the object and no user can create it. This field is available in
	// Tooling API version 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsEverCreatable bool `json:"IsEverCreatable"`
	// IsEverDeletable ...
	//
	// If true, the object can be created using an API, assuming the current user has the appropriate permissions.
	// If false, the application server manages the object and no user can delete it. This field is available in
	// Tooling API version 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsEverDeletable bool `json:"IsEverDeletable"`
	// IsEverUpdatable ...
	//
	// If true, the object can be created using an API, assuming the current user has the appropriate permissions.
	// If false, the application server manages the object and no user can modify it. This field is available in
	// Tooling API version 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsEverUpdatable bool `json:"IsEverUpdatable"`
	// IsFeedEnabled ...
	//
	// If true, the Chatter feed is enabled for this object. This field is available in Tooling API version 34.0 and
	// later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsFeedEnabled bool `json:"IsFeedEnabled"`
	// IsIDEnabled ...
	//
	// If true, you can include Id in the SELECT clause of a query on this object. This field is available in Tooling
	// API version 35.0 and later.For example, assume that there is an object backed by an OData data source with the
	// High Data Volume option selected. That object’s IsIdEnabled field is false.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsIDEnabled bool `json:"IsIdEnabled"`
	// IsInterface ...
	//
	// Reserved for future use.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsInterface bool `json:"IsInterface"`
	// IsLayoutable ...
	//
	// If true, layouts can be defined for the object. This field is available in Tooling API version 35.0 and
	// later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsLayoutable bool `json:"IsLayoutable"`
	// IsMruEnabled ...
	//
	// If true, Most Recently Used (MRU) list functionality is enabled for this object. This field is available in
	// Tooling API version 37.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsMruEnabled bool `json:"IsMruEnabled"`
	// IsProcessEnabled ...
	IsProcessEnabled bool `json:"IsProcessEnabled"`
	// IsQueryable ...
	//
	// If true, the object can be queried.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsQueryable bool `json:"IsQueryable"`
	// IsReplicateable ...
	//
	// If true, the object can be replicated. This field is available in Tooling API version 35.0 and
	// later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsReplicateable bool `json:"IsReplicateable"`
	// IsRetrieveable ...
	//
	// If true, the object can be retrieved. This field is available in Tooling API version 35.0 and
	// later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsRetrieveable bool `json:"IsRetrieveable"`
	// IsSearchLayoutable ...
	//
	// If true, you can customize search layouts for this object. This field is available in Tooling API version
	// 35.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsSearchLayoutable bool `json:"IsSearchLayoutable"`
	// IsSearchable ...
	//
	// If true, records of this object are indexed for search. This field is available in Tooling API version 35.0
	// and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsSearchable bool `json:"IsSearchable"`
	// IsSubtype ...
	IsSubtype bool `json:"IsSubtype"`
	// IsTriggerable ...
	//
	// If true, you can use triggers with this object. This field is available in Tooling API version 35.0 and
	// later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsTriggerable bool `json:"IsTriggerable"`
	// IsWorkflowEnabled ...
	//
	// If true, workflow rules can be defined for the entity.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	IsWorkflowEnabled bool `json:"IsWorkflowEnabled"`
	// KeyPrefix ...
	//
	// The first three digits of the entity’s ID, which identify the object type, such as Account or
	// Opportunity.
	//
	// Properties:Filter, Group, Nillable, Sort
	KeyPrefix string `json:"KeyPrefix"`
	// Label ...
	//
	// The label for this object, used in the compact layout and in the user's language locale.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	Label string `json:"Label"`
	// LastModifiedBy ...
	LastModifiedBy *User `json:"LastModifiedBy"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// MasterLabel ...
	//
	// The label for this object, which displays in Setup. The master label is in the default language locale for
	// the organization. If there is no default language locale, the label is in en_US.
	//
	// Properties:Filter,
	// Group, Sort
	MasterLabel string `json:"MasterLabel"`
	// NamespacePrefix ...
	//
	// The namespace prefix associated with this object. Each Developer Edition organization that creates a
	// managed package has a unique namespace prefix. Limit: 15 characters. You can refer to a component in a managed
	// package by using the namespacePrefix__componentName notation. The namespace prefix can have one of the
	// following values: In Developer Edition organizations, the namespace prefix is set to the namespace prefix of the
	// organization for all objects that support it. There is an exception if an object is in an installed managed package. In
	// that case, the object has the namespace prefix of the installed managed package. This field’s value is the
	// namespace prefix of the Developer Edition organization of the package developer. In organizations that are not
	// Developer Edition organizations, NamespacePrefix is only set for objects that are part of an installed managed
	// package. There is no namespace prefix for all other objects.
	//
	// Properties:Filter, Group, Nillable, Sort
	NamespacePrefix string `json:"NamespacePrefix"`
	// NewURL ...
	//
	// The URL used when editing a new standard or custom record. Corresponds to the urlNew field on
	// DescribeSobjectResult. This field is available in Tooling API version 34.0 and later.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	NewURL string `json:"NewUrl"`
	// OwnerChangeOptions ...
	//
	// Use only in subqueries. This field is available in Tooling API version 35.0 and later. Because this field
	// represents a relationship, use only in subqueries.
	//
	// Properties:Filter, Group, Nillable, Sort
	OwnerChangeOptions struct {
		Done      bool                     `json:"done"`
		Count     int                      `json:"count"`
		TotalSize int                      `json:"totalSize"`
		Records   []*OwnerChangeOptionInfo `json:"records"`
	} `json:"OwnerChangeOptions"`
	// Particles ...
	//
	// The particles defined for this object. This field is available in Tooling API version 34.0 and later.
	// Because this field represents a relationship, use only in subqueries.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Particles struct {
		Done      bool              `json:"done"`
		Count     int               `json:"count"`
		TotalSize int               `json:"totalSize"`
		Records   []*EntityParticle `json:"records"`
	} `json:"Particles"`
	// PluralLabel ...
	//
	// The plural version of the object’s Label.
	//
	// Properties:Filter, Group, Nillable, Sort
	PluralLabel string `json:"PluralLabel"`
	// Publisher ...
	//
	// The publisher of this object, for example Salesforce, a user, or a package name. This field is available in
	// Tooling API version 34.0 and later.
	//
	// Properties:Create, Nillable, Update
	Publisher *Publisher `json:"Publisher"`
	// PublisherID ...
	//
	// ID of the publisher associated with this object. This field is available in Tooling API version 34.0 and
	// later.
	//
	// Properties:Filter, Group, Nillable, Sort
	PublisherID string `json:"PublisherId"`
	// QualifiedAPIName ...
	//
	// A unique external ID for the entity of the form NamespacePrefix__DeveloperName for standard objects and
	// NamespacePrefix__DeveloperName__c for custom objects. When performing SOQL queries with Custom Metadata Type relationship fields, use this
	// field to obtain fully qualified namespaces.
	//
	// Properties:Filter, Group, Sort
	QualifiedAPIName string `json:"QualifiedApiName"`
	// RecordTypesSupported ...
	//
	// Represents the record types defined for this object. Use only in subqueries. This field is available in
	// Tooling API version 34.0 and later.
	//
	// Properties:Nillable
	RecordTypesSupported string `json:"RecordTypesSupported"`
	// RelationshipDomains ...
	//
	// Metadata about the relationships with other objects that this object has. Use only in subqueries. This
	// field is available in Tooling API version 34.0 and later. Because this field represents a relationship, use only
	// in subqueries.
	//
	// Properties:Filter, Group, Nillable, Sort
	RelationshipDomains struct {
		Done      bool                  `json:"done"`
		Count     int                   `json:"count"`
		TotalSize int                   `json:"totalSize"`
		Records   []*RelationshipDomain `json:"records"`
	} `json:"RelationshipDomains"`
	// RunningUserEntityAccess ...
	//
	// Represents the running user’s access to this object. This field is available in Tooling API version 34.0
	// and later.
	//
	// Properties:Create, Nillable, Update
	RunningUserEntityAccess *UserEntityAccess `json:"RunningUserEntityAccess"`
	// RunningUserEntityAccessID ...
	//
	// ID of the UserEntityAccess record associated with this object. This field is available in Tooling API
	// version 34.0 and later. Because this field represents a relationship, use only in subqueries.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	RunningUserEntityAccessID string `json:"RunningUserEntityAccessId"`
	// SearchLayouts ...
	//
	// Represents the search layouts associated with this object. Use only in subqueries. This field is
	// available in Tooling API version 34.0 and later. Because this field represents a relationship, use only in
	// subqueries.
	//
	// Properties:Filter, Group, Nillable, Sort
	SearchLayouts struct {
		Done      bool            `json:"done"`
		Count     int             `json:"count"`
		TotalSize int             `json:"totalSize"`
		Records   []*SearchLayout `json:"records"`
	} `json:"SearchLayouts"`
}

// OwnerChangeOptionInfo ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_ownerchangeoptioninfo.htm
//
// Represents default and optional actions that can be performed when a record’s owner is changed.
// Available in Tooling API version 35.0 and later.
type OwnerChangeOptionInfo struct {
	// DefaultValue ...
	//
	// Default value of the checkbox for this option in the user interface.
	//
	// Properties:Defaulted on
	// create, Filter, Group, Sort
	DefaultValue bool `json:"DefaultValue"`
	// DurableID ...
	//
	// Unique identifier for the field. Always retrieve this value before using it, as the value isn’t
	// guaranteed to stay the same from one release to the next. To simplify queries, use this field.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	DurableID string `json:"DurableId"`
	// EntityDefinitionID ...
	//
	// The ID of the EntityDefinition containing the record.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	EntityDefinitionID string `json:"EntityDefinitionId"`
	// ID ...
	ID string `json:"Id"`
	// IsEditable ...
	//
	// Indicates whether this option is editable by the user when updating the owner using the
	// OwnerChangeOptions SOAP header.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsEditable bool `json:"IsEditable"`
	// Label ...
	//
	// The label that corresponds to the option in the user interface.
	//
	// Properties:Filter, Group,
	// Nillable, Sort
	Label string `json:"Label"`
	// Name ...
	//
	// The unique name for the option.
	//
	// Properties:Filter, Group, Nillable, Sort
	Name string `json:"Name"`
	// ParentID ...
	//
	// The durable ID of the parent OwnerChangeOptionInfo record. Available in Tooling API version 44.0 and
	// later.
	//
	// Properties:Filter, Group, Nillable, Sort
	ParentID string `json:"ParentId"`
}

// SearchLayout ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_searchlayout.htm
//
// Represents a search layout defined for an object.
type SearchLayout struct {
	// ButtonsDisplayed ...
	//
	// The list of buttons available in list views for an object.This field is equivalent to the Buttons Displayed
	// value in Object Name List View in the Search Layouts related list on the object detail page. It’s also
	// equivalent to the listViewButtons field on SearchLayouts in Metadata API.
	//
	// Properties:Nillable
	ButtonsDisplayed string `json:"ButtonsDisplayed"`
	// DurableID ...
	//
	// Unique identifier for the field. Always retrieve this value before using it, as the value isn’t
	// guaranteed to stay the same from one release to the next. DurableId in queries allows you to find the right record
	// without having to retrieve the entire record.
	//
	// Properties:Filter, Group, Nillable, Sort
	DurableID string `json:"DurableId"`
	// EntityDefinitionID ...
	//
	// ID of the record in EntityDefinition. Use in subqueries.
	//
	// Properties:Filter, Group, Nillable,
	// Sort
	EntityDefinitionID string `json:"EntityDefinitionId"`
	// FieldsDisplayed ...
	//
	// The list of fields displayed in a search result for the object. The name field is required. It’s always
	// displayed as the first column header, so it isn’t included in this list; all additional fields are included. The
	// field name relative to the object name, for example MyCustomField__c, is specified for each custom field.This
	// field is equivalent to the Search Results in the Search Layouts related list on the object detail page in the
	// application user interface. It’s also equivalent to searchResultsAdditionalFields in Metadata API.
	//
	//
	// Properties:Nillable
	FieldsDisplayed string `json:"FieldsDisplayed"`
	// ID ...
	ID string `json:"Id"`
	// Label ...
	//
	// The label for this search layout.
	//
	// Properties:Filter, Group, Nillable, Sort
	Label string `json:"Label"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// LayoutType ...
	//
	// The type of search layout.
	//
	// Properties:Filter, Group, Nillable, Sort
	LayoutType string `json:"LayoutType"`
	// ListLayout ...
	//
	// Unique identifier for the field. Identifies the list layout a search layout is related to. Available in API
	// version 48.0 and later.
	//
	// Properties:Filter, Group, Nillable, Sort
	ListLayout string `json:"ListLayout"`
	// Profile ...
	//
	// Unique identifier for the field. Identifies the profile to which a search layout applies. Available in API
	// version 48.0 and later.
	//
	// Properties:Filter, Group, Nillable, Sort
	Profile string `json:"Profile"`
	// ProfileName ...
	//
	// The name of the profile to which a search layout applies. Available in API version 48.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	ProfileName string `json:"ProfileName"`
}

// UserEntityAccess ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_userentityaccess.htm
//
// Represents the access that the current user has to an object. Available in Tooling API version 34.0 and
// later.
type UserEntityAccess struct {
	// DurableID ...
	//
	// Unique identifier for the field. Always retrieve this value before using it, as the value isn’t
	// guaranteed to stay the same from one release to the next. To simplify queries, use this field.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	DurableID string `json:"DurableId"`
	// EntityDefinitionID ...
	//
	// ID of the EntityDefinition.
	//
	// Properties:Filter, Group, Nillable, Sort
	EntityDefinitionID string `json:"EntityDefinitionId"`
	// ID ...
	ID string `json:"Id"`
	// IsActivateable ...
	//
	// If true, the user specified in the User field has access to activate records of the associated object type if
	// the User owns them. For example, a user owns an Apex trigger or workflow rule, and can activate them if this field
	// is true for ApexTrigger or WorkflowRule.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsActivateable bool `json:"IsActivateable"`
	// IsCreatable ...
	//
	// If true, the user specified in the User field has access to create records of the associated object
	// type.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCreatable bool `json:"IsCreatable"`
	// IsDeletable ...
	//
	// If true, the user specified in the User field has access to delete records of the associated object
	// type.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsDeletable bool `json:"IsDeletable"`
	// IsEditable ...
	//
	// If true, the user specified in the User field has access to edit records of the associated object
	// type.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsEditable bool `json:"IsEditable"`
	// IsFlsUpdatable ...
	//
	// If true, the user specified in the User field has access to change field-level security settings on
	// appropriate fields of the associated object type. For example, an administrator could deny a group of users access to
	// the Type field on Account.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsFlsUpdatable bool `json:"IsFlsUpdatable"`
	// IsMergeable ...
	//
	// If true, the user specified in the User field has access to merge records of the associated object
	// type.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsMergeable bool `json:"IsMergeable"`
	// IsReadable ...
	//
	// If true, the user specified in the User field has access to view records of the associated object
	// type.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsReadable bool `json:"IsReadable"`
	// IsUndeletable ...
	//
	// If true, the user specified in the User field has access to undelete records of the associated object
	// type.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsUndeletable bool `json:"IsUndeletable"`
	// IsUpdatable ...
	//
	// If true, the user specified in the User field has access to edit records of the associated object
	// type.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsUpdatable bool `json:"IsUpdatable"`
	// UserID ...
	//
	// ID of the user specified in the User field.
	//
	// Properties:Filter, Group, Nillable, Sort
	UserID string `json:"UserId"`
}

// SupportedScope ...
type SupportedScope struct {
	// Label ...
	Label string `json:"label"`
	// Name ...
	Name string `json:"name"`
}

// PicklistValue ...
type PicklistValue struct {
	// Active ...
	Active bool `json:"active"`
	// DefaultValue ...
	DefaultValue bool `json:"defaultValue"`
	// Label ...
	Label string `json:"label"`
	// ValidFor ...
	ValidFor interface{} `json:"validFor"`
	// Value ...
	Value string `json:"value"`
}

// RecordTypeInfo ...
type RecordTypeInfo struct {
	// Active ...
	Active bool `json:"active"`
	// Available ...
	Available bool `json:"available"`
	// DefaultRecordTypeMapping ...
	DefaultRecordTypeMapping bool `json:"defaultRecordTypeMapping"`
	// DeveloperName ...
	DeveloperName string `json:"developerName"`
	// Master ...
	Master bool `json:"master"`
	// Name ...
	Name string `json:"name"`
	// RecordTypeID ...
	RecordTypeID string `json:"recordTypeId"`
	// Url ...
	Url *Url `json:"urls"`
}

// FieldDefinition ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_fielddefinition.htm
//
// Represents a standard or custom field, providing row-based access to field metadata. Contrast
// FieldDefinition with EntityParticle, which represents each element of a field that can be presented in a user interface.
// FieldDefinition has parity with metadata type Field.
type FieldDefinition struct {
	// BusinessOwnerID ...
	//
	// Indicates the person or group associated with this field. The business owner understands the importance
	// of the field’s data to your company and might be responsible for determining the minimum security
	// classification. This field is available in API version 45.0 and later.
	//
	// Properties:Filter, Group, Nillable, Sort
	BusinessOwnerID string `json:"BusinessOwnerId"`
	// BusinessStatus ...
	//
	// Indicates whether the field is in use. Valid values include: Active DeprecateCandidate Hidden This field
	// is available in API version 45.0 and later.
	//
	// Properties:Filter, Group, Nillable, Sort
	BusinessStatus string `json:"BusinessStatus"`
	// ComplianceGroup ...
	//
	// The compliance acts, definitions, or regulations related to the field’s data. Valid values include:
	// CCPA COPPA GDPR HIPAA PCI PII This field is available in API version 47.0 and later.
	//
	//
	// Properties:Filter, Nillable
	ComplianceGroup string `json:"ComplianceGroup"`
	// ControllingFieldDefinitionID ...
	//
	// The ID of the ControllingFieldDefinition for this field. Available in Tooling API starting version
	// 34.0.
	//
	// Properties:Filter, Group, Sort
	ControllingFieldDefinitionID string `json:"ControllingFieldDefinitionId"`
	// DataType ...
	//
	// Data type of the field, for example Text(40) or Date/Time. The values are defined as they are in the user
	// interface, not the corresponding API data type names. Available in Tooling API starting version 34.0.
	//
	//
	// Properties:Filter, Group, Sort
	DataType string `json:"DataType"`
	// Description ...
	Description string `json:"Description"`
	// DeveloperName ...
	//
	// The unique name of the object in the API. This name can contain only underscores and alphanumeric
	// characters, and must be unique in your org. It must begin with a letter, not include spaces, not end with an underscore,
	// and not contain two consecutive underscores. In managed packages, this field prevents naming conflicts on
	// package installations. With this field, a developer can change the object’s name in a managed package and the
	// changes are reflected in a subscriber’s organization. Label is Record Type Name.
	//
	// Properties:Filter,
	// Group, Sort
	DeveloperName string `json:"DeveloperName"`
	// DurableID ...
	//
	// Unique identifier for the field. Always retrieve this value before using it, as the value isn’t
	// guaranteed to stay the same from one release to the next. To simplify queries, use this field.
	//
	//
	// Properties:Filter, Group, Sort
	DurableID string `json:"DurableId"`
	// EntityDefinitionID ...
	//
	// The durable ID for the object defined in the EntityDefinition field.
	//
	// Properties:Filter, Group,
	// Sort
	EntityDefinitionID string `json:"EntityDefinitionId"`
	// ExtraTypeInfo ...
	//
	// Represents further definition of a type. Available in Tooling API starting version 34.0. For type
	// textarea: plaintextarea richtextarea For type URL, image For type reference, externallookup indirectlookup
	// externallookup For Account, switchablepersonname personname
	//
	// Properties:Filter, Group, Sort
	ExtraTypeInfo string `json:"ExtraTypeInfo"`
	// ID ...
	ID string `json:"Id"`
	// IsAPIFilterable ...
	//
	// If true, the field can be specified in the WHERE clause of a query string.
	// Available in Tooling API
	// starting version 34.0.

	// You can't sort or filter compound fields. This field’s value is always false for
	// compound fields.

	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsAPIFilterable bool `json:"IsApiFilterable"`
	// IsAPIGroupable ...
	//
	// If true, the field can be included in the GROUP BY clause of a SOQL query. Available in Tooling API starting
	// version 34.0.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsAPIGroupable bool `json:"IsApiGroupable"`
	// IsAPISortable ...
	//
	// If true, a query can sort on this field.
	// Available in Tooling API starting version 34.0.

	// You can't
	// sort or filter compound fields. This field’s value is always false for compound fields.

	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsAPISortable bool `json:"IsApiSortable"`
	// IsCalculated ...
	//
	// If true, the field’s value is calculated. Available in Tooling API starting version 34.0.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCalculated bool `json:"IsCalculated"`
	// IsCompactLayoutable ...
	//
	// If true, the field can be included in a compact layout. Available in Tooling API starting version
	// 34.0.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCompactLayoutable bool `json:"IsCompactLayoutable"`
	// IsCompound ...
	//
	// If true, the field is a compound of other fields. The default value is false. Available in Tooling API
	// starting version 38.0.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsCompound bool `json:"IsCompound"`
	// IsFieldHistoryTracked ...
	//
	// If true, the field’s history can be tracked. Available in Tooling API starting version 34.0.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsFieldHistoryTracked bool `json:"IsFieldHistoryTracked"`
	// IsHTMLFormatted ...
	//
	// If true, the field contains HTML. Available in Tooling API starting version 34.0.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsHTMLFormatted bool `json:"IsHtmlFormatted"`
	// IsHighScaleNumber ...
	//
	// Indicates whether the field stores numbers to 8 decimal places regardless of what’s specified in the
	// field details (true) or not (false). Used to handle currencies for products that cost fractions of a cent, in
	// large quantities. If high-scale unit pricing isn’t enabled in your organization, this field isn’t
	// returned. Available in Tooling API starting version 34.0.
	//
	// Properties:Defaulted on create, Filter,
	// Group, Sort
	IsHighScaleNumber bool `json:"IsHighScaleNumber"`
	// IsIndexed ...
	//
	// If true, the field is indexed in the database. Available in Tooling API version 35.0 and later.
	//
	// Internal (database) indexing is different from indexing for search.

	// We recommend targeting indexed fields
	// for better response times in SOQL queries, reports, and list views.

	//
	// Properties:Defaulted on
	// create, Filter, Group, Sort
	IsIndexed bool `json:"IsIndexed"`
	// IsListFilterable ...
	//
	// If true, the field can be filtered for a related list. Available in Tooling API starting version
	// 34.0.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsListFilterable bool `json:"IsListFilterable"`
	// IsListSortable ...
	//
	// If true, the field can be sorted for a related list. Available in Tooling API starting version
	// 34.0.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsListSortable bool `json:"IsListSortable"`
	// IsListVisible ...
	//
	// If true, the field can be included in a related list. Available in Tooling API starting version
	// 34.0.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsListVisible bool `json:"IsListVisible"`
	// IsNameField ...
	//
	// If true, the field is a name field. Available in Tooling API starting version 34.0.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsNameField bool `json:"IsNameField"`
	// IsNillable ...
	//
	// If true, the field can be left out of queries on the object. Available in Tooling API starting version
	// 34.0.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsNillable bool `json:"IsNillable"`
	// IsPolymorphicForeignKey ...
	//
	// Indicates whether the foreign key includes multiple object types (true) or not (false). Available in
	// Tooling API version 41.0 and later.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsPolymorphicForeignKey bool `json:"IsPolymorphicForeignKey"`
	// IsSearchPrefilterable ...
	//
	// Indicates whether a foreign key can be included in prefiltering (true) or not (false) when used in a SOSL
	// WHERE clause. Prefiltering means to filter by a specific field value before executing the full search query.
	// Available in Tooling API version 40.0 and later. Prefiltering is supported only in WHERE clauses with the equals (=)
	// operator.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsSearchPrefilterable bool `json:"IsSearchPrefilterable"`
	// IsWorkflowFilterable ...
	//
	// If true, the field can be filtered for a workflow. Available in Tooling API starting version 34.0.
	//
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsWorkflowFilterable bool `json:"IsWorkflowFilterable"`
	// Label ...
	//
	// The label that corresponds to the field in the user interface. If the label has been translated, the value
	// returned is in the user’s language.
	//
	// Properties:Filter, Group, Sort
	Label string `json:"Label"`
	// LastModifiedByID ...
	LastModifiedByID string `json:"LastModifiedById"`
	// LastModifiedDate ...
	LastModifiedDate types.Datetime `json:"LastModifiedDate"`
	// Length ...
	//
	// The maximum number of bytes available to store the value in this field. Available in Tooling API starting
	// version 34.0.
	//
	// Properties:Filter, Group, Sort
	Length int `json:"Length"`
	// MasterLabel ...
	//
	// Master label for this object. This display value is the internal label that is not translated. Limit: 40
	// characters.
	//
	// Properties:Filter, Group, Sort
	MasterLabel string `json:"MasterLabel"`
	// NamespacePrefix ...
	//
	// The namespace prefix associated with this object. Each Developer Edition organization that creates a
	// managed package has a unique namespace prefix. Limit: 15 characters. You can refer to a component in a managed
	// package by using the namespacePrefix__componentName notation. The namespace prefix can have one of the
	// following values: In Developer Edition organizations, the namespace prefix is set to the namespace prefix of the
	// organization for all objects that support it. There is an exception if an object is in an installed managed package. In
	// that case, the object has the namespace prefix of the installed managed package. This field’s value is the
	// namespace prefix of the Developer Edition organization of the package developer. In organizations that are not
	// Developer Edition organizations, NamespacePrefix is only set for objects that are part of an installed managed
	// package. There is no namespace prefix for all other objects.
	//
	// Properties:Filter, Group, Sort
	NamespacePrefix string `json:"NamespacePrefix"`
	// Precision ...
	//
	// The maximum number of digits allowed for this field. Available in Tooling API starting version
	// 34.0.
	//
	// Properties:Filter, Group, Sort
	Precision int `json:"Precision"`
	// PublisherID ...
	//
	// ID of the publisher associated with this field. Available in Tooling API starting version 34.0.
	//
	//
	// Properties:Filter, Group, Sort
	PublisherID string `json:"PublisherId"`
	// QualifiedAPIName ...
	//
	// A unique external name for the field.
	//
	// Properties:Filter, Group, Sort
	QualifiedAPIName string `json:"QualifiedApiName"`
	// ReferenceTargetField ...
	//
	// Available only for indirect lookup relationship fields on external objects. Specifies the field on the
	// parent object to match against this indirect lookup relationship field, whose values come from an external data
	// source. The specified custom field on the parent object must have both externalId and unique set to true.Available
	// in Tooling API starting version 34.0.
	//
	// Properties:Filter, Group, Sort
	ReferenceTargetField string `json:"ReferenceTargetField"`
	// ReferenceTo ...
	//
	// The array of values in this field represents the possible object types of the referenced objects. For
	// example, if a FieldDefinition represents a field on Event.WhoId, the values in this field are Contact, Lead, and
	// custom objects with a relationship to Events. Available in Tooling API starting version 34.0.
	//
	//
	// Properties:Filter, Group, Sort
	ReferenceTo string `json:"ReferenceTo"`
	// RelationshipName ...
	//
	// The value for one-to-many relationships. For example, in the object MyObject with a relationship to
	// YourObject, the relationship name is typically YourObjects. Available in Tooling API starting version
	// 34.0.
	//
	// Properties:Filter, Group, Sort
	RelationshipName string `json:"RelationshipName"`
	// RunningUserFieldAccessID ...
	//
	// Don’t use this field. Available in Tooling API starting version 34.0.
	//
	// Properties:
	RunningUserFieldAccessID string `json:"RunningUserFieldAccessId"`
	// Scale ...
	//
	// The number of digits to the right of the decimal in an integer. For example, 3.00 has a scale of 2. Available in
	// Tooling API starting version 34.0.
	//
	// Properties:Filter, Group, Sort
	Scale int `json:"Scale"`
	// SecurityClassification ...
	//
	// Indicates the sensitivity of the data contained in this field. Valid values include: Public Internal
	// Confidential Restricted MissionCritical This field is available in API version 45.0 and later.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	SecurityClassification string `json:"SecurityClassification"`
	// ServiceDataTypeID ...
	//
	// ID of the ServiceDataType. Available in Tooling API version 34.0. Do not use, provided for backward
	// compatibility only.
	//
	// Properties:Filter, Group, Sort
	ServiceDataTypeID string `json:"ServiceDataTypeId"`
	// ValueTypeID ...
	//
	// ID of the ValueType. Available in Tooling API version 35.0.
	//
	// Properties:Filter, Group, Sort
	ValueTypeID string `json:"ValueTypeId"`
}

// RelationshipInfo ...
// https://developer.salesforce.com/docs/atlas.en-us.api_tooling.meta/api_tooling/tooling_api_objects_relationshipinfo.htm
//
// Represents the properties of a relationship between objects. Simplify queries with RelationshipInfo,
// such as answering the question “which objects are parent objects for the object defined in ChildSobject.
// Available in Tooling API version 34.0 and later.
type RelationshipInfo struct {
	// ChildSObjectID ...
	//
	// ID of the ChildSobject.
	//
	// Properties:Filter, Group, Nillable, Sort
	ChildSObjectID string `json:"ChildSobjectId"`
	// DurableID ...
	//
	// Unique identifier for the field. Always retrieve this value before using it, as the value isn’t
	// guaranteed to stay the same from one release to the next. To simplify queries, use this field.
	//
	//
	// Properties:Filter, Group, Nillable, Sort
	DurableID string `json:"DurableId"`
	// FieldID ...
	//
	// ID of Field.
	//
	// Properties:Filter, Group, Nillable, Sort
	FieldID string `json:"FieldId"`
	// ID ...
	ID string `json:"Id"`
	// IsCascadeDelete ...
	//
	// If true, this object’s parent can’t be deleted until all records for this object are deleted.
	// Corresponds to Cascade value for DeleteConstraint in the Metadata API.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsCascadeDelete bool `json:"IsCascadeDelete"`
	// IsDeprecatedAndHidden ...
	//
	// If true, this object is unavailable for the current version.
	//
	// Properties:Defaulted on create,
	// Filter, Group, Sort
	IsDeprecatedAndHidden bool `json:"IsDeprecatedAndHidden"`
	// IsRestrictedDelete ...
	//
	// If true, this object can’t be deleted. Corresponds to Restrict value for DeleteConstraint in the
	// Metadata API.
	//
	// Properties:Defaulted on create, Filter, Group, Sort
	IsRestrictedDelete bool `json:"IsRestrictedDelete"`
	// JunctionIDListNames ...
	//
	// The names of the lists of junction IDs associated with an object. Each ID represents an object that has a
	// relationship with the associated object.
	//
	// Properties:Nillable
	JunctionIDListNames string `json:"JunctionIdListNames"`
}

// Describe ...
type Describe struct {
	// ActionOverrides ...
	ActionOverrides []json.RawMessage `json:"actionOverrides"`
	// Activateable ...
	Activateable bool `json:"activateable"`
	// AssociateEntityType ...
	AssociateEntityType interface{} `json:"associateEntityType"`
	// AssociateParentEntity ...
	AssociateParentEntity interface{} `json:"associateParentEntity"`
	// ChildRelationships ...
	ChildRelationships []*ChildRelationship `json:"childRelationships"`
	// CompactLayoutable ...
	CompactLayoutable bool `json:"compactLayoutable"`
	// Createable ...
	Createable bool `json:"createable"`
	// Custom ...
	Custom bool `json:"custom"`
	// CustomSetting ...
	CustomSetting bool `json:"customSetting"`
	// DeepCloneable ...
	DeepCloneable bool `json:"deepCloneable"`
	// DefaultImplementation ...
	DefaultImplementation interface{} `json:"defaultImplementation"`
	// Deletable ...
	Deletable bool `json:"deletable"`
	// DeprecatedAndHidden ...
	DeprecatedAndHidden bool `json:"deprecatedAndHidden"`
	// ExtendedBy ...
	ExtendedBy interface{} `json:"extendedBy"`
	// ExtendsInterfaces ...
	ExtendsInterfaces interface{} `json:"extendsInterfaces"`
	// FeedEnabled ...
	FeedEnabled bool `json:"feedEnabled"`
	// Fields ...
	Fields []*Field `json:"fields"`
	// HasSubtypes ...
	HasSubtypes bool `json:"hasSubtypes"`
	// ImplementedBy ...
	ImplementedBy interface{} `json:"implementedBy"`
	// ImplementsInterfaces ...
	ImplementsInterfaces interface{} `json:"implementsInterfaces"`
	// IsInterface ...
	IsInterface bool `json:"isInterface"`
	// IsSubtype ...
	IsSubtype bool `json:"isSubtype"`
	// KeyPrefix ...
	KeyPrefix string `json:"keyPrefix"`
	// Label ...
	Label string `json:"label"`
	// LabelPlural ...
	LabelPlural string `json:"labelPlural"`
	// Layoutable ...
	Layoutable bool `json:"layoutable"`
	// Listviewable ...
	Listviewable interface{} `json:"listviewable"`
	// LookupLayoutable ...
	LookupLayoutable interface{} `json:"lookupLayoutable"`
	// Mergeable ...
	Mergeable bool `json:"mergeable"`
	// MruEnabled ...
	MruEnabled bool `json:"mruEnabled"`
	// Name ...
	Name string `json:"name"`
	// NamedLayoutInfos ...
	NamedLayoutInfos []json.RawMessage `json:"namedLayoutInfos"`
	// NetworkScopeFieldName ...
	NetworkScopeFieldName interface{} `json:"networkScopeFieldName"`
	// Queryable ...
	Queryable bool `json:"queryable"`
	// RecordTypeInfos ...
	RecordTypeInfos []*RecordTypeInfo `json:"recordTypeInfos"`
	// Replicateable ...
	Replicateable bool `json:"replicateable"`
	// Retrieveable ...
	Retrieveable bool `json:"retrieveable"`
	// SearchLayoutable ...
	SearchLayoutable bool `json:"searchLayoutable"`
	// Searchable ...
	Searchable bool `json:"searchable"`
	// SobjectDescribeOption ...
	SobjectDescribeOption string `json:"sobjectDescribeOption"`
	// SupportedScopes ...
	SupportedScopes []*SupportedScope `json:"supportedScopes"`
	// Triggerable ...
	Triggerable bool `json:"triggerable"`
	// Undeletable ...
	Undeletable bool `json:"undeletable"`
	// Updateable ...
	Updateable bool `json:"updateable"`
	// Url ...
	Url *Url `json:"urls"`
}

// Url ...
type Url struct {
	// Sobject ...
	Sobject string `json:"sobject"`
	// UiDetailTemplate ...
	UiDetailTemplate string `json:"uiDetailTemplate"`
	// UiNewRecord ...
	UiNewRecord string `json:"uiNewRecord"`
	// CompactLayouts ...
	CompactLayouts string `json:"compactLayouts"`
	// Describe ...
	Describe string `json:"describe"`
	// QuickActions ...
	QuickActions string `json:"quickActions"`
	// RowTemplate ...
	RowTemplate string `json:"rowTemplate"`
	// UiEditTemplate ...
	UiEditTemplate string `json:"uiEditTemplate"`
	// ApprovalLayouts ...
	ApprovalLayouts string `json:"approvalLayouts"`
	// DefaultValues ...
	DefaultValues string `json:"defaultValues"`
	// Layouts ...
	Layouts string `json:"layouts"`
	// Listviews ...
	Listviews string `json:"listviews"`
}

// Field ...
type Field struct {
	// DependentPicklist ...
	DependentPicklist bool `json:"dependentPicklist"`
	// FormulaTreatNullNumberAsZero ...
	FormulaTreatNullNumberAsZero bool `json:"formulaTreatNullNumberAsZero"`
	// Filterable ...
	Filterable bool `json:"filterable"`
	// Nillable ...
	Nillable bool `json:"nillable"`
	// Calculated ...
	Calculated bool `json:"calculated"`
	// Mask ...
	Mask interface{} `json:"mask"`
	// CaseSensitive ...
	CaseSensitive bool `json:"caseSensitive"`
	// Name ...
	Name string `json:"name"`
	// RestrictedDelete ...
	RestrictedDelete bool `json:"restrictedDelete"`
	// SoapType ...
	SoapType string `json:"soapType"`
	// DisplayLocationInDecimal ...
	DisplayLocationInDecimal bool `json:"displayLocationInDecimal"`
	// RestrictedPicklist ...
	RestrictedPicklist bool `json:"restrictedPicklist"`
	// ExternalID ...
	ExternalID bool `json:"externalId"`
	// Unique ...
	Unique bool `json:"unique"`
	// DefaultValueFormula ...
	DefaultValueFormula interface{} `json:"defaultValueFormula"`
	// Scale ...
	Scale int64 `json:"scale"`
	// ReferenceTargetField ...
	ReferenceTargetField interface{} `json:"referenceTargetField"`
	// CompoundFieldName ...
	CompoundFieldName string `json:"compoundFieldName"`
	// PolymorphicForeignKey ...
	PolymorphicForeignKey bool `json:"polymorphicForeignKey"`
	// WriteRequiresMasterRead ...
	WriteRequiresMasterRead bool `json:"writeRequiresMasterRead"`
	// InlineHelpText ...
	InlineHelpText interface{} `json:"inlineHelpText"`
	// Createable ...
	Createable bool `json:"createable"`
	// CalculatedFormula ...
	CalculatedFormula interface{} `json:"calculatedFormula"`
	// DefaultValue ...
	DefaultValue types.AlmostBool `json:"defaultValue"`
	// Precision ...
	Precision int64 `json:"precision"`
	// HtmlFormatted ...
	HtmlFormatted bool `json:"htmlFormatted"`
	// Custom ...
	Custom bool `json:"custom"`
	// Updateable ...
	Updateable bool `json:"updateable"`
	// Aggregatable ...
	Aggregatable bool `json:"aggregatable"`
	// Type ...
	Type string `json:"type"`
	// Groupable ...
	Groupable bool `json:"groupable"`
	// ReferenceTo ...
	ReferenceTo []string `json:"referenceTo"`
	// Encrypted ...
	Encrypted bool `json:"encrypted"`
	// Label ...
	Label string `json:"label"`
	// ExtraTypeInfo ...
	ExtraTypeInfo string `json:"extraTypeInfo"`
	// DefaultedOnCreate ...
	DefaultedOnCreate bool `json:"defaultedOnCreate"`
	// AiPredictionField ...
	AiPredictionField bool `json:"aiPredictionField"`
	// HighScaleNumber ...
	HighScaleNumber bool `json:"highScaleNumber"`
	// SearchPrefilterable ...
	SearchPrefilterable bool `json:"searchPrefilterable"`
	// RelationshipName ...
	RelationshipName string `json:"relationshipName"`
	// Sortable ...
	Sortable bool `json:"sortable"`
	// ByteLength ...
	ByteLength int64 `json:"byteLength"`
	// NamePointing ...
	NamePointing bool `json:"namePointing"`
	// FilteredLookupInfo ...
	FilteredLookupInfo interface{} `json:"filteredLookupInfo"`
	// DeprecatedAndHidden ...
	DeprecatedAndHidden bool `json:"deprecatedAndHidden"`
	// NameField ...
	NameField bool `json:"nameField"`
	// MaskType ...
	MaskType interface{} `json:"maskType"`
	// QueryByDistance ...
	QueryByDistance bool `json:"queryByDistance"`
	// PicklistValues ...
	PicklistValues []*PicklistValue `json:"picklistValues"`
	// Permissionable ...
	Permissionable bool `json:"permissionable"`
	// AutoNumber ...
	AutoNumber bool `json:"autoNumber"`
	// CascadeDelete ...
	CascadeDelete bool `json:"cascadeDelete"`
	// RelationshipOrder ...
	RelationshipOrder interface{} `json:"relationshipOrder"`
	// ControllerName ...
	ControllerName interface{} `json:"controllerName"`
	// IdLookup ...
	IdLookup bool `json:"idLookup"`
	// Length ...
	Length int64 `json:"length"`
	// Digits ...
	Digits int64 `json:"digits"`
}
